<?xml version="1.0"?>
<nodes><node><value>\Aura\Marshal\TypeTest</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest</id><type>class</type></node><node><value>\Aura\Marshal\TypeTest::$type</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::$type</id><type>property</type></node><node><value>\Aura\Marshal\TypeTest::setUp()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setUp()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::tearDown()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::tearDown()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testSetAndGetIdentityField()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testSetAndGetIdentityField()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testSetAndGetRecordBuilder()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testSetAndGetRecordBuilder()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testSetAndGetCollectionBuilder()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testSetAndGetCollectionBuilder()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testLoadAndGetStorage()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testLoadAndGetStorage()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testGetIdentityValues()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testGetIdentityValues()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testGetFieldValues()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testGetFieldValues()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testGetRecord()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testGetRecord()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testGetRecordByField()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testGetRecordByField()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testGetRecordByField_identity()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testGetRecordByField_identity()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testGetRecordByField_none()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testGetRecordByField_none()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getCollection()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getCollection()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testGetCollectionByField()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testGetCollectionByField()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testGetCollectionByField_many()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testGetCollectionByField_many()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testGetCollectionByField_identity()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testGetCollectionByField_identity()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testAddAndGetRelation()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testAddAndGetRelation()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::testTypeBuilder_noIdentityField()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::testTypeBuilder_noIdentityField()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::__construct()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::toString()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::toString()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::count()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::count()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getAnnotations()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getAnnotations()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getName()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getName()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getExpectedException()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getExpectedException()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setExpectedException()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setExpectedException()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setExpectedExceptionFromAnnotation()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setExpectedExceptionFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setUseErrorHandler()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setUseErrorHandler()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setUseErrorHandlerFromAnnotation()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setUseErrorHandlerFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setUseOutputBuffering()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setUseOutputBuffering()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setUseOutputBufferingFromAnnotation()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setUseOutputBufferingFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getStatus()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getStatus()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getStatusMessage()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getStatusMessage()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::hasFailed()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::hasFailed()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::run()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::run()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::runBare()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::runBare()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::runTest()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::runTest()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::verifyMockObjects()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::verifyMockObjects()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setName()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setName()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setDependencies()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setDependencies()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setDependencyInput()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setDependencyInput()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setBackupGlobals()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setBackupGlobals()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setBackupStaticAttributes()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setBackupStaticAttributes()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setRunTestInSeparateProcess()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setRunTestInSeparateProcess()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setPreserveGlobalState()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setPreserveGlobalState()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setInIsolation()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setInIsolation()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getResult()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getResult()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setResult()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setResult()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getTestResultObject()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getTestResultObject()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::iniSet()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::iniSet()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setLocale()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setLocale()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getMock()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getMock()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getMockBuilder()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getMockBuilder()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getMockClass()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getMockClass()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getMockForAbstractClass()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getMockForAbstractClass()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getMockFromWsdl()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getMockFromWsdl()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::addToAssertionCount()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::addToAssertionCount()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getNumAssertions()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getNumAssertions()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::any()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::any()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::never()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::never()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::atLeastOnce()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::atLeastOnce()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::once()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::once()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::exactly()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::exactly()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::at()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::at()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::returnValue()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::returnValue()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::returnArgument()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::returnArgument()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::returnCallback()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::returnCallback()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::throwException()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::throwException()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::onConsecutiveCalls()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::onConsecutiveCalls()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::dataToString()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::dataToString()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getDataSetAsString()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getDataSetAsString()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::createResult()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::createResult()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::handleDependencies()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::handleDependencies()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::setUpBeforeClass()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::setUpBeforeClass()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertPreConditions()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertPreConditions()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertPostConditions()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertPostConditions()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::tearDownAfterClass()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::tearDownAfterClass()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::onNotSuccessfulTest()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::onNotSuccessfulTest()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::prepareTemplate()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::prepareTemplate()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertArrayHasKey()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertArrayHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertArrayNotHasKey()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertArrayNotHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertContains()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertContains()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeContains()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeContains()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertNotContains()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertNotContains()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeNotContains()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeNotContains()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertContainsOnly()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeContainsOnly()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertNotContainsOnly()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeNotContainsOnly()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertEquals()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertEquals()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeEquals()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeEquals()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertNotEquals()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeNotEquals()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertEmpty()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeEmpty()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertNotEmpty()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertNotEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeNotEmpty()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeNotEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertGreaterThan()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertGreaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeGreaterThan()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeGreaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertGreaterThanOrEqual()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeGreaterThanOrEqual()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertLessThan()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertLessThan()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeLessThan()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeLessThan()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertLessThanOrEqual()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeLessThanOrEqual()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertFileEquals()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertFileEquals()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertFileNotEquals()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertFileNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertStringEqualsFile()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertStringEqualsFile()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertStringNotEqualsFile()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertStringNotEqualsFile()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertFileExists()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertFileExists()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertFileNotExists()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertFileNotExists()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertTrue()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertTrue()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertFalse()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertFalse()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertNotNull()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertNotNull()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertNull()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertNull()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertClassHasAttribute()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertClassHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertClassNotHasAttribute()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertClassNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertClassHasStaticAttribute()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertClassHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertClassNotHasStaticAttribute()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertClassNotHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertObjectHasAttribute()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertObjectHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertObjectNotHasAttribute()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertObjectNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertSame()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertSame()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeSame()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeSame()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertNotSame()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertNotSame()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeNotSame()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeNotSame()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertInstanceOf()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeInstanceOf()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertNotInstanceOf()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeNotInstanceOf()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertInternalType()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeInternalType()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertNotInternalType()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertNotInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeNotInternalType()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeNotInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertType()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertType()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeType()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeType()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertNotType()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertNotType()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertAttributeNotType()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertAttributeNotType()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertRegExp()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertNotRegExp()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertNotRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertStringMatchesFormat()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertStringMatchesFormat()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertStringNotMatchesFormat()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertStringNotMatchesFormat()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertStringMatchesFormatFile()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertStringMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertStringNotMatchesFormatFile()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertStringNotMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertStringStartsWith()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertStringStartsWith()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertStringStartsNotWith()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertStringStartsNotWith()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertStringEndsWith()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertStringEndsWith()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertStringEndsNotWith()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertStringEndsNotWith()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertXmlFileEqualsXmlFile()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertXmlFileEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertXmlFileNotEqualsXmlFile()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertXmlFileNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertXmlStringEqualsXmlFile()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertXmlStringEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertXmlStringNotEqualsXmlFile()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertXmlStringNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertXmlStringEqualsXmlString()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertXmlStringEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertXmlStringNotEqualsXmlString()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertXmlStringNotEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertEqualXMLStructure()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertEqualXMLStructure()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertSelectCount()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertSelectCount()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertSelectRegExp()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertSelectRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertSelectEquals()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertSelectEquals()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertTag()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertTag()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertNotTag()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertNotTag()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::assertThat()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::assertThat()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::logicalAnd()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::logicalAnd()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::logicalOr()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::logicalOr()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::logicalNot()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::logicalNot()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::logicalXor()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::logicalXor()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::anything()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::anything()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::isTrue()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::isTrue()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::isFalse()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::isFalse()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::isNull()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::isNull()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::attribute()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::attribute()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::contains()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::contains()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::containsOnly()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::containsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::arrayHasKey()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::arrayHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::equalTo()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::equalTo()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::attributeEqualTo()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::attributeEqualTo()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::isEmpty()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::isEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::fileExists()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::fileExists()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::greaterThan()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::greaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::greaterThanOrEqual()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::greaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::classHasAttribute()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::classHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::classHasStaticAttribute()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::classHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::objectHasAttribute()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::objectHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::identicalTo()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::identicalTo()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::isInstanceOf()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::isInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::isType()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::isType()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::lessThan()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::lessThan()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::lessThanOrEqual()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::lessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::matchesRegularExpression()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::matchesRegularExpression()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::matches()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::matches()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::stringStartsWith()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::stringStartsWith()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::stringContains()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::stringContains()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::stringEndsWith()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::stringEndsWith()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::fail()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::fail()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::syntheticFail()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::syntheticFail()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::readAttribute()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::readAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::markTestIncomplete()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::markTestIncomplete()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::markTestSkipped()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::markTestSkipped()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::getCount()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::getCount()</id><type>method</type></node><node><value>\Aura\Marshal\TypeTest::resetCount()</value><id>db_tests_TypeTest.html#\Aura\Marshal\TypeTest::resetCount()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest</id><type>class</type></node><node><value>\Aura\Marshal\RelationTest::$manager</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::$manager</id><type>property</type></node><node><value>\Aura\Marshal\RelationTest::setUp()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setUp()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::tearDown()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::tearDown()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::testNoRelationship()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::testNoRelationship()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::testNoForeignType()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::testNoForeignType()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::testNoNativeField()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::testNoNativeField()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::testNoForeignField()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::testNoForeignField()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::testNoThroughType()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::testNoThroughType()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::testNoThroughNativeField()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::testNoThroughNativeField()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::testNoThroughForeignField()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::testNoThroughForeignField()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::testBelongsTo()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::testBelongsTo()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::testHasOne()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::testHasOne()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::testHasMany()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::testHasMany()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::testHasManyThrough()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::testHasManyThrough()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::__construct()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::toString()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::toString()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::count()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::count()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getAnnotations()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getAnnotations()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getName()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getName()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getExpectedException()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getExpectedException()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setExpectedException()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setExpectedException()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setExpectedExceptionFromAnnotation()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setExpectedExceptionFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setUseErrorHandler()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setUseErrorHandler()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setUseErrorHandlerFromAnnotation()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setUseErrorHandlerFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setUseOutputBuffering()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setUseOutputBuffering()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setUseOutputBufferingFromAnnotation()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setUseOutputBufferingFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getStatus()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getStatus()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getStatusMessage()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getStatusMessage()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::hasFailed()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::hasFailed()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::run()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::run()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::runBare()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::runBare()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::runTest()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::runTest()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::verifyMockObjects()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::verifyMockObjects()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setName()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setName()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setDependencies()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setDependencies()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setDependencyInput()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setDependencyInput()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setBackupGlobals()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setBackupGlobals()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setBackupStaticAttributes()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setBackupStaticAttributes()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setRunTestInSeparateProcess()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setRunTestInSeparateProcess()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setPreserveGlobalState()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setPreserveGlobalState()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setInIsolation()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setInIsolation()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getResult()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getResult()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setResult()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setResult()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getTestResultObject()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getTestResultObject()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::iniSet()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::iniSet()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setLocale()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setLocale()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getMock()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getMock()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getMockBuilder()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getMockBuilder()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getMockClass()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getMockClass()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getMockForAbstractClass()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getMockForAbstractClass()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getMockFromWsdl()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getMockFromWsdl()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::addToAssertionCount()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::addToAssertionCount()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getNumAssertions()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getNumAssertions()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::any()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::any()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::never()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::never()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::atLeastOnce()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::atLeastOnce()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::once()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::once()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::exactly()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::exactly()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::at()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::at()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::returnValue()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::returnValue()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::returnArgument()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::returnArgument()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::returnCallback()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::returnCallback()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::throwException()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::throwException()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::onConsecutiveCalls()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::onConsecutiveCalls()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::dataToString()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::dataToString()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getDataSetAsString()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getDataSetAsString()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::createResult()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::createResult()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::handleDependencies()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::handleDependencies()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::setUpBeforeClass()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::setUpBeforeClass()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertPreConditions()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertPreConditions()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertPostConditions()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertPostConditions()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::tearDownAfterClass()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::tearDownAfterClass()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::onNotSuccessfulTest()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::onNotSuccessfulTest()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::prepareTemplate()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::prepareTemplate()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertArrayHasKey()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertArrayHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertArrayNotHasKey()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertArrayNotHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertContains()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertContains()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeContains()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeContains()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertNotContains()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertNotContains()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeNotContains()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeNotContains()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertContainsOnly()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeContainsOnly()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertNotContainsOnly()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeNotContainsOnly()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertEquals()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertEquals()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeEquals()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeEquals()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertNotEquals()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeNotEquals()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertEmpty()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeEmpty()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertNotEmpty()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertNotEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeNotEmpty()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeNotEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertGreaterThan()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertGreaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeGreaterThan()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeGreaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertGreaterThanOrEqual()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeGreaterThanOrEqual()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertLessThan()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertLessThan()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeLessThan()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeLessThan()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertLessThanOrEqual()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeLessThanOrEqual()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertFileEquals()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertFileEquals()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertFileNotEquals()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertFileNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertStringEqualsFile()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertStringEqualsFile()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertStringNotEqualsFile()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertStringNotEqualsFile()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertFileExists()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertFileExists()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertFileNotExists()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertFileNotExists()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertTrue()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertTrue()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertFalse()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertFalse()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertNotNull()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertNotNull()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertNull()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertNull()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertClassHasAttribute()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertClassHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertClassNotHasAttribute()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertClassNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertClassHasStaticAttribute()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertClassHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertClassNotHasStaticAttribute()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertClassNotHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertObjectHasAttribute()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertObjectHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertObjectNotHasAttribute()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertObjectNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertSame()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertSame()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeSame()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeSame()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertNotSame()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertNotSame()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeNotSame()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeNotSame()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertInstanceOf()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeInstanceOf()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertNotInstanceOf()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeNotInstanceOf()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertInternalType()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeInternalType()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertNotInternalType()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertNotInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeNotInternalType()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeNotInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertType()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertType()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeType()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeType()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertNotType()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertNotType()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertAttributeNotType()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertAttributeNotType()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertRegExp()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertNotRegExp()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertNotRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertStringMatchesFormat()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertStringMatchesFormat()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertStringNotMatchesFormat()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertStringNotMatchesFormat()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertStringMatchesFormatFile()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertStringMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertStringNotMatchesFormatFile()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertStringNotMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertStringStartsWith()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertStringStartsWith()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertStringStartsNotWith()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertStringStartsNotWith()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertStringEndsWith()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertStringEndsWith()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertStringEndsNotWith()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertStringEndsNotWith()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertXmlFileEqualsXmlFile()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertXmlFileEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertXmlFileNotEqualsXmlFile()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertXmlFileNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertXmlStringEqualsXmlFile()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertXmlStringEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertXmlStringNotEqualsXmlFile()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertXmlStringNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertXmlStringEqualsXmlString()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertXmlStringEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertXmlStringNotEqualsXmlString()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertXmlStringNotEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertEqualXMLStructure()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertEqualXMLStructure()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertSelectCount()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertSelectCount()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertSelectRegExp()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertSelectRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertSelectEquals()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertSelectEquals()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertTag()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertTag()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertNotTag()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertNotTag()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::assertThat()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::assertThat()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::logicalAnd()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::logicalAnd()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::logicalOr()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::logicalOr()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::logicalNot()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::logicalNot()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::logicalXor()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::logicalXor()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::anything()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::anything()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::isTrue()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::isTrue()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::isFalse()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::isFalse()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::isNull()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::isNull()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::attribute()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::attribute()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::contains()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::contains()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::containsOnly()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::containsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::arrayHasKey()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::arrayHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::equalTo()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::equalTo()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::attributeEqualTo()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::attributeEqualTo()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::isEmpty()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::isEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::fileExists()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::fileExists()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::greaterThan()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::greaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::greaterThanOrEqual()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::greaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::classHasAttribute()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::classHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::classHasStaticAttribute()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::classHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::objectHasAttribute()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::objectHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::identicalTo()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::identicalTo()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::isInstanceOf()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::isInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::isType()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::isType()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::lessThan()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::lessThan()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::lessThanOrEqual()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::lessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::matchesRegularExpression()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::matchesRegularExpression()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::matches()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::matches()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::stringStartsWith()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::stringStartsWith()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::stringContains()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::stringContains()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::stringEndsWith()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::stringEndsWith()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::fail()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::fail()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::syntheticFail()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::syntheticFail()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::readAttribute()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::readAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::markTestIncomplete()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::markTestIncomplete()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::markTestSkipped()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::markTestSkipped()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::getCount()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::getCount()</id><type>method</type></node><node><value>\Aura\Marshal\RelationTest::resetCount()</value><id>db_tests_RelationTest.html#\Aura\Marshal\RelationTest::resetCount()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest</id><type>class</type></node><node><value>\Aura\Marshal\DataTest::$object</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::$object</id><type>property</type></node><node><value>\Aura\Marshal\DataTest::setUp()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setUp()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::tearDown()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::tearDown()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::testOffsetExistsAndUnset()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::testOffsetExistsAndUnset()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::testOffsetSetAndGet()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::testOffsetSetAndGet()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::testCount()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::testCount()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::testGetIterator()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::testGetIterator()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::__construct()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::toString()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::toString()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::count()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::count()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getAnnotations()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getAnnotations()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getName()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getName()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getExpectedException()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getExpectedException()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setExpectedException()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setExpectedException()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setExpectedExceptionFromAnnotation()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setExpectedExceptionFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setUseErrorHandler()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setUseErrorHandler()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setUseErrorHandlerFromAnnotation()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setUseErrorHandlerFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setUseOutputBuffering()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setUseOutputBuffering()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setUseOutputBufferingFromAnnotation()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setUseOutputBufferingFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getStatus()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getStatus()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getStatusMessage()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getStatusMessage()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::hasFailed()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::hasFailed()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::run()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::run()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::runBare()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::runBare()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::runTest()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::runTest()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::verifyMockObjects()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::verifyMockObjects()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setName()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setName()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setDependencies()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setDependencies()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setDependencyInput()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setDependencyInput()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setBackupGlobals()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setBackupGlobals()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setBackupStaticAttributes()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setBackupStaticAttributes()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setRunTestInSeparateProcess()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setRunTestInSeparateProcess()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setPreserveGlobalState()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setPreserveGlobalState()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setInIsolation()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setInIsolation()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getResult()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getResult()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setResult()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setResult()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getTestResultObject()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getTestResultObject()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::iniSet()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::iniSet()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setLocale()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setLocale()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getMock()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getMock()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getMockBuilder()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getMockBuilder()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getMockClass()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getMockClass()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getMockForAbstractClass()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getMockForAbstractClass()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getMockFromWsdl()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getMockFromWsdl()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::addToAssertionCount()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::addToAssertionCount()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getNumAssertions()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getNumAssertions()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::any()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::any()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::never()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::never()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::atLeastOnce()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::atLeastOnce()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::once()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::once()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::exactly()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::exactly()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::at()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::at()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::returnValue()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::returnValue()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::returnArgument()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::returnArgument()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::returnCallback()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::returnCallback()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::throwException()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::throwException()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::onConsecutiveCalls()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::onConsecutiveCalls()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::dataToString()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::dataToString()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getDataSetAsString()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getDataSetAsString()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::createResult()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::createResult()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::handleDependencies()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::handleDependencies()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::setUpBeforeClass()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::setUpBeforeClass()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertPreConditions()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertPreConditions()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertPostConditions()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertPostConditions()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::tearDownAfterClass()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::tearDownAfterClass()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::onNotSuccessfulTest()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::onNotSuccessfulTest()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::prepareTemplate()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::prepareTemplate()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertArrayHasKey()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertArrayHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertArrayNotHasKey()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertArrayNotHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertContains()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertContains()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeContains()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeContains()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertNotContains()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertNotContains()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeNotContains()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeNotContains()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertContainsOnly()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeContainsOnly()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertNotContainsOnly()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeNotContainsOnly()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertEquals()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertEquals()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeEquals()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeEquals()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertNotEquals()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeNotEquals()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertEmpty()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeEmpty()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertNotEmpty()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertNotEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeNotEmpty()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeNotEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertGreaterThan()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertGreaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeGreaterThan()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeGreaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertGreaterThanOrEqual()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeGreaterThanOrEqual()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertLessThan()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertLessThan()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeLessThan()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeLessThan()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertLessThanOrEqual()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeLessThanOrEqual()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertFileEquals()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertFileEquals()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertFileNotEquals()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertFileNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertStringEqualsFile()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertStringEqualsFile()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertStringNotEqualsFile()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertStringNotEqualsFile()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertFileExists()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertFileExists()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertFileNotExists()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertFileNotExists()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertTrue()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertTrue()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertFalse()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertFalse()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertNotNull()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertNotNull()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertNull()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertNull()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertClassHasAttribute()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertClassHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertClassNotHasAttribute()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertClassNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertClassHasStaticAttribute()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertClassHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertClassNotHasStaticAttribute()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertClassNotHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertObjectHasAttribute()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertObjectHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertObjectNotHasAttribute()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertObjectNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertSame()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertSame()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeSame()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeSame()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertNotSame()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertNotSame()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeNotSame()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeNotSame()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertInstanceOf()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeInstanceOf()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertNotInstanceOf()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeNotInstanceOf()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertInternalType()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeInternalType()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertNotInternalType()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertNotInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeNotInternalType()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeNotInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertType()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertType()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeType()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeType()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertNotType()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertNotType()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertAttributeNotType()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertAttributeNotType()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertRegExp()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertNotRegExp()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertNotRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertStringMatchesFormat()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertStringMatchesFormat()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertStringNotMatchesFormat()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertStringNotMatchesFormat()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertStringMatchesFormatFile()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertStringMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertStringNotMatchesFormatFile()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertStringNotMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertStringStartsWith()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertStringStartsWith()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertStringStartsNotWith()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertStringStartsNotWith()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertStringEndsWith()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertStringEndsWith()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertStringEndsNotWith()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertStringEndsNotWith()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertXmlFileEqualsXmlFile()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertXmlFileEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertXmlFileNotEqualsXmlFile()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertXmlFileNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertXmlStringEqualsXmlFile()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertXmlStringEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertXmlStringNotEqualsXmlFile()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertXmlStringNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertXmlStringEqualsXmlString()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertXmlStringEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertXmlStringNotEqualsXmlString()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertXmlStringNotEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertEqualXMLStructure()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertEqualXMLStructure()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertSelectCount()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertSelectCount()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertSelectRegExp()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertSelectRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertSelectEquals()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertSelectEquals()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertTag()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertTag()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertNotTag()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertNotTag()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::assertThat()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::assertThat()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::logicalAnd()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::logicalAnd()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::logicalOr()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::logicalOr()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::logicalNot()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::logicalNot()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::logicalXor()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::logicalXor()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::anything()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::anything()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::isTrue()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::isTrue()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::isFalse()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::isFalse()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::isNull()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::isNull()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::attribute()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::attribute()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::contains()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::contains()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::containsOnly()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::containsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::arrayHasKey()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::arrayHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::equalTo()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::equalTo()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::attributeEqualTo()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::attributeEqualTo()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::isEmpty()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::isEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::fileExists()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::fileExists()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::greaterThan()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::greaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::greaterThanOrEqual()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::greaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::classHasAttribute()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::classHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::classHasStaticAttribute()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::classHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::objectHasAttribute()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::objectHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::identicalTo()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::identicalTo()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::isInstanceOf()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::isInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::isType()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::isType()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::lessThan()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::lessThan()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::lessThanOrEqual()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::lessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::matchesRegularExpression()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::matchesRegularExpression()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::matches()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::matches()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::stringStartsWith()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::stringStartsWith()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::stringContains()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::stringContains()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::stringEndsWith()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::stringEndsWith()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::fail()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::fail()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::syntheticFail()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::syntheticFail()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::readAttribute()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::readAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::markTestIncomplete()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::markTestIncomplete()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::markTestSkipped()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::markTestSkipped()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::getCount()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::getCount()</id><type>method</type></node><node><value>\Aura\Marshal\DataTest::resetCount()</value><id>db_tests_DataTest.html#\Aura\Marshal\DataTest::resetCount()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest</id><type>class</type></node><node><value>\Aura\Marshal\RecordTest::$record</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::$record</id><type>property</type></node><node><value>\Aura\Marshal\RecordTest::setUp()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setUp()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::tearDown()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::tearDown()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::testSetAndGet()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::testSetAndGet()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::testIssetAndUnset()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::testIssetAndUnset()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::__construct()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::toString()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::toString()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::count()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::count()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getAnnotations()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getAnnotations()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getName()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getName()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getExpectedException()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getExpectedException()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setExpectedException()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setExpectedException()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setExpectedExceptionFromAnnotation()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setExpectedExceptionFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setUseErrorHandler()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setUseErrorHandler()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setUseErrorHandlerFromAnnotation()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setUseErrorHandlerFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setUseOutputBuffering()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setUseOutputBuffering()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setUseOutputBufferingFromAnnotation()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setUseOutputBufferingFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getStatus()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getStatus()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getStatusMessage()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getStatusMessage()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::hasFailed()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::hasFailed()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::run()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::run()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::runBare()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::runBare()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::runTest()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::runTest()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::verifyMockObjects()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::verifyMockObjects()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setName()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setName()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setDependencies()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setDependencies()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setDependencyInput()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setDependencyInput()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setBackupGlobals()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setBackupGlobals()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setBackupStaticAttributes()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setBackupStaticAttributes()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setRunTestInSeparateProcess()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setRunTestInSeparateProcess()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setPreserveGlobalState()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setPreserveGlobalState()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setInIsolation()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setInIsolation()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getResult()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getResult()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setResult()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setResult()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getTestResultObject()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getTestResultObject()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::iniSet()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::iniSet()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setLocale()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setLocale()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getMock()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getMock()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getMockBuilder()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getMockBuilder()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getMockClass()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getMockClass()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getMockForAbstractClass()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getMockForAbstractClass()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getMockFromWsdl()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getMockFromWsdl()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::addToAssertionCount()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::addToAssertionCount()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getNumAssertions()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getNumAssertions()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::any()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::any()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::never()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::never()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::atLeastOnce()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::atLeastOnce()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::once()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::once()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::exactly()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::exactly()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::at()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::at()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::returnValue()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::returnValue()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::returnArgument()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::returnArgument()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::returnCallback()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::returnCallback()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::throwException()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::throwException()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::onConsecutiveCalls()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::onConsecutiveCalls()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::dataToString()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::dataToString()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getDataSetAsString()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getDataSetAsString()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::createResult()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::createResult()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::handleDependencies()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::handleDependencies()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::setUpBeforeClass()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::setUpBeforeClass()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertPreConditions()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertPreConditions()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertPostConditions()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertPostConditions()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::tearDownAfterClass()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::tearDownAfterClass()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::onNotSuccessfulTest()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::onNotSuccessfulTest()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::prepareTemplate()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::prepareTemplate()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertArrayHasKey()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertArrayHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertArrayNotHasKey()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertArrayNotHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertContains()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertContains()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeContains()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeContains()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertNotContains()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertNotContains()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeNotContains()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeNotContains()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertContainsOnly()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeContainsOnly()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertNotContainsOnly()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeNotContainsOnly()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertEquals()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertEquals()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeEquals()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeEquals()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertNotEquals()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeNotEquals()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertEmpty()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeEmpty()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertNotEmpty()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertNotEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeNotEmpty()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeNotEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertGreaterThan()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertGreaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeGreaterThan()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeGreaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertGreaterThanOrEqual()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeGreaterThanOrEqual()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertLessThan()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertLessThan()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeLessThan()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeLessThan()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertLessThanOrEqual()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeLessThanOrEqual()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertFileEquals()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertFileEquals()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertFileNotEquals()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertFileNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertStringEqualsFile()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertStringEqualsFile()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertStringNotEqualsFile()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertStringNotEqualsFile()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertFileExists()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertFileExists()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertFileNotExists()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertFileNotExists()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertTrue()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertTrue()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertFalse()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertFalse()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertNotNull()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertNotNull()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertNull()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertNull()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertClassHasAttribute()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertClassHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertClassNotHasAttribute()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertClassNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertClassHasStaticAttribute()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertClassHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertClassNotHasStaticAttribute()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertClassNotHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertObjectHasAttribute()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertObjectHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertObjectNotHasAttribute()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertObjectNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertSame()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertSame()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeSame()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeSame()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertNotSame()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertNotSame()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeNotSame()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeNotSame()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertInstanceOf()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeInstanceOf()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertNotInstanceOf()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeNotInstanceOf()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertInternalType()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeInternalType()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertNotInternalType()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertNotInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeNotInternalType()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeNotInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertType()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertType()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeType()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeType()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertNotType()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertNotType()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertAttributeNotType()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertAttributeNotType()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertRegExp()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertNotRegExp()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertNotRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertStringMatchesFormat()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertStringMatchesFormat()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertStringNotMatchesFormat()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertStringNotMatchesFormat()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertStringMatchesFormatFile()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertStringMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertStringNotMatchesFormatFile()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertStringNotMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertStringStartsWith()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertStringStartsWith()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertStringStartsNotWith()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertStringStartsNotWith()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertStringEndsWith()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertStringEndsWith()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertStringEndsNotWith()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertStringEndsNotWith()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertXmlFileEqualsXmlFile()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertXmlFileEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertXmlFileNotEqualsXmlFile()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertXmlFileNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertXmlStringEqualsXmlFile()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertXmlStringEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertXmlStringNotEqualsXmlFile()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertXmlStringNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertXmlStringEqualsXmlString()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertXmlStringEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertXmlStringNotEqualsXmlString()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertXmlStringNotEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertEqualXMLStructure()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertEqualXMLStructure()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertSelectCount()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertSelectCount()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertSelectRegExp()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertSelectRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertSelectEquals()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertSelectEquals()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertTag()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertTag()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertNotTag()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertNotTag()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::assertThat()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::assertThat()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::logicalAnd()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::logicalAnd()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::logicalOr()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::logicalOr()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::logicalNot()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::logicalNot()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::logicalXor()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::logicalXor()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::anything()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::anything()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::isTrue()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::isTrue()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::isFalse()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::isFalse()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::isNull()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::isNull()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::attribute()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::attribute()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::contains()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::contains()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::containsOnly()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::containsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::arrayHasKey()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::arrayHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::equalTo()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::equalTo()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::attributeEqualTo()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::attributeEqualTo()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::isEmpty()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::isEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::fileExists()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::fileExists()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::greaterThan()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::greaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::greaterThanOrEqual()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::greaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::classHasAttribute()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::classHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::classHasStaticAttribute()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::classHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::objectHasAttribute()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::objectHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::identicalTo()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::identicalTo()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::isInstanceOf()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::isInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::isType()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::isType()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::lessThan()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::lessThan()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::lessThanOrEqual()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::lessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::matchesRegularExpression()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::matchesRegularExpression()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::matches()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::matches()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::stringStartsWith()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::stringStartsWith()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::stringContains()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::stringContains()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::stringEndsWith()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::stringEndsWith()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::fail()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::fail()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::syntheticFail()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::syntheticFail()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::readAttribute()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::readAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::markTestIncomplete()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::markTestIncomplete()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::markTestSkipped()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::markTestSkipped()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::getCount()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::getCount()</id><type>method</type></node><node><value>\Aura\Marshal\RecordTest::resetCount()</value><id>db_tests_RecordTest.html#\Aura\Marshal\RecordTest::resetCount()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest</id><type>class</type></node><node><value>\Aura\Marshal\ManagerTest::$manager</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::$manager</id><type>property</type></node><node><value>\Aura\Marshal\ManagerTest::setUp()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setUp()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::tearDown()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::tearDown()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::test__get()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::test__get()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::test__getNoSuchType()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::test__getNoSuchType()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::testGetTypes()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::testGetTypes()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::testSetType_alreadySet()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::testSetType_alreadySet()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::__construct()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::toString()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::toString()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::count()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::count()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getAnnotations()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getAnnotations()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getName()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getName()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getExpectedException()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getExpectedException()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setExpectedException()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setExpectedException()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setExpectedExceptionFromAnnotation()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setExpectedExceptionFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setUseErrorHandler()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setUseErrorHandler()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setUseErrorHandlerFromAnnotation()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setUseErrorHandlerFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setUseOutputBuffering()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setUseOutputBuffering()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setUseOutputBufferingFromAnnotation()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setUseOutputBufferingFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getStatus()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getStatus()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getStatusMessage()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getStatusMessage()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::hasFailed()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::hasFailed()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::run()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::run()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::runBare()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::runBare()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::runTest()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::runTest()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::verifyMockObjects()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::verifyMockObjects()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setName()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setName()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setDependencies()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setDependencies()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setDependencyInput()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setDependencyInput()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setBackupGlobals()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setBackupGlobals()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setBackupStaticAttributes()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setBackupStaticAttributes()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setRunTestInSeparateProcess()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setRunTestInSeparateProcess()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setPreserveGlobalState()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setPreserveGlobalState()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setInIsolation()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setInIsolation()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getResult()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getResult()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setResult()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setResult()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getTestResultObject()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getTestResultObject()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::iniSet()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::iniSet()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setLocale()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setLocale()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getMock()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getMock()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getMockBuilder()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getMockBuilder()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getMockClass()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getMockClass()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getMockForAbstractClass()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getMockForAbstractClass()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getMockFromWsdl()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getMockFromWsdl()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::addToAssertionCount()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::addToAssertionCount()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getNumAssertions()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getNumAssertions()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::any()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::any()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::never()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::never()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::atLeastOnce()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::atLeastOnce()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::once()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::once()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::exactly()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::exactly()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::at()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::at()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::returnValue()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::returnValue()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::returnArgument()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::returnArgument()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::returnCallback()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::returnCallback()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::throwException()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::throwException()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::onConsecutiveCalls()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::onConsecutiveCalls()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::dataToString()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::dataToString()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getDataSetAsString()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getDataSetAsString()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::createResult()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::createResult()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::handleDependencies()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::handleDependencies()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::setUpBeforeClass()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::setUpBeforeClass()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertPreConditions()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertPreConditions()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertPostConditions()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertPostConditions()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::tearDownAfterClass()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::tearDownAfterClass()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::onNotSuccessfulTest()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::onNotSuccessfulTest()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::prepareTemplate()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::prepareTemplate()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertArrayHasKey()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertArrayHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertArrayNotHasKey()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertArrayNotHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertContains()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertContains()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeContains()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeContains()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertNotContains()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertNotContains()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeNotContains()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeNotContains()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertContainsOnly()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeContainsOnly()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertNotContainsOnly()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeNotContainsOnly()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertEquals()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertEquals()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeEquals()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeEquals()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertNotEquals()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeNotEquals()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertEmpty()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeEmpty()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertNotEmpty()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertNotEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeNotEmpty()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeNotEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertGreaterThan()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertGreaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeGreaterThan()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeGreaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertGreaterThanOrEqual()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeGreaterThanOrEqual()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertLessThan()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertLessThan()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeLessThan()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeLessThan()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertLessThanOrEqual()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeLessThanOrEqual()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertFileEquals()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertFileEquals()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertFileNotEquals()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertFileNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertStringEqualsFile()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertStringEqualsFile()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertStringNotEqualsFile()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertStringNotEqualsFile()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertFileExists()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertFileExists()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertFileNotExists()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertFileNotExists()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertTrue()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertTrue()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertFalse()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertFalse()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertNotNull()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertNotNull()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertNull()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertNull()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertClassHasAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertClassHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertClassNotHasAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertClassNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertClassHasStaticAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertClassHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertClassNotHasStaticAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertClassNotHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertObjectHasAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertObjectHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertObjectNotHasAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertObjectNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertSame()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertSame()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeSame()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeSame()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertNotSame()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertNotSame()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeNotSame()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeNotSame()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertInstanceOf()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeInstanceOf()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertNotInstanceOf()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeNotInstanceOf()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertInternalType()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeInternalType()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertNotInternalType()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertNotInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeNotInternalType()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeNotInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertType()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertType()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeType()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeType()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertNotType()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertNotType()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertAttributeNotType()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertAttributeNotType()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertRegExp()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertNotRegExp()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertNotRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertStringMatchesFormat()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertStringMatchesFormat()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertStringNotMatchesFormat()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertStringNotMatchesFormat()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertStringMatchesFormatFile()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertStringMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertStringNotMatchesFormatFile()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertStringNotMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertStringStartsWith()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertStringStartsWith()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertStringStartsNotWith()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertStringStartsNotWith()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertStringEndsWith()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertStringEndsWith()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertStringEndsNotWith()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertStringEndsNotWith()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertXmlFileEqualsXmlFile()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertXmlFileEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertXmlFileNotEqualsXmlFile()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertXmlFileNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertXmlStringEqualsXmlFile()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertXmlStringEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertXmlStringNotEqualsXmlFile()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertXmlStringNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertXmlStringEqualsXmlString()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertXmlStringEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertXmlStringNotEqualsXmlString()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertXmlStringNotEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertEqualXMLStructure()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertEqualXMLStructure()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertSelectCount()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertSelectCount()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertSelectRegExp()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertSelectRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertSelectEquals()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertSelectEquals()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertTag()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertTag()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertNotTag()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertNotTag()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::assertThat()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::assertThat()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::logicalAnd()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::logicalAnd()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::logicalOr()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::logicalOr()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::logicalNot()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::logicalNot()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::logicalXor()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::logicalXor()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::anything()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::anything()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::isTrue()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::isTrue()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::isFalse()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::isFalse()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::isNull()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::isNull()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::attribute()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::attribute()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::contains()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::contains()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::containsOnly()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::containsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::arrayHasKey()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::arrayHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::equalTo()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::equalTo()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::attributeEqualTo()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::attributeEqualTo()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::isEmpty()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::isEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::fileExists()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::fileExists()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::greaterThan()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::greaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::greaterThanOrEqual()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::greaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::classHasAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::classHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::classHasStaticAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::classHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::objectHasAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::objectHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::identicalTo()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::identicalTo()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::isInstanceOf()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::isInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::isType()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::isType()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::lessThan()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::lessThan()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::lessThanOrEqual()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::lessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::matchesRegularExpression()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::matchesRegularExpression()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::matches()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::matches()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::stringStartsWith()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::stringStartsWith()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::stringContains()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::stringContains()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::stringEndsWith()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::stringEndsWith()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::fail()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::fail()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::syntheticFail()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::syntheticFail()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::readAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::readAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::markTestIncomplete()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::markTestIncomplete()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::markTestSkipped()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::markTestSkipped()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::getCount()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::getCount()</id><type>method</type></node><node><value>\Aura\Marshal\ManagerTest::resetCount()</value><id>db_tests_ManagerTest.html#\Aura\Marshal\ManagerTest::resetCount()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest</id><type>class</type></node><node><value>\Aura\Marshal\CollectionTest::$collection</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::$collection</id><type>property</type></node><node><value>\Aura\Marshal\CollectionTest::$empty_collection</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::$empty_collection</id><type>property</type></node><node><value>\Aura\Marshal\CollectionTest::setUp()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setUp()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::tearDown()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::tearDown()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::testGetIdentityValues()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::testGetIdentityValues()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::testIsEmpty()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::testIsEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::testObjectsInCollectionAreInIdentityMap()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::testObjectsInCollectionAreInIdentityMap()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::__construct()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::toString()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::toString()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::count()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::count()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getAnnotations()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getAnnotations()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getName()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getName()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getExpectedException()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getExpectedException()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setExpectedException()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setExpectedException()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setExpectedExceptionFromAnnotation()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setExpectedExceptionFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setUseErrorHandler()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setUseErrorHandler()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setUseErrorHandlerFromAnnotation()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setUseErrorHandlerFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setUseOutputBuffering()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setUseOutputBuffering()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setUseOutputBufferingFromAnnotation()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setUseOutputBufferingFromAnnotation()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getStatus()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getStatus()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getStatusMessage()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getStatusMessage()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::hasFailed()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::hasFailed()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::run()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::run()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::runBare()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::runBare()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::runTest()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::runTest()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::verifyMockObjects()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::verifyMockObjects()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setName()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setName()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setDependencies()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setDependencies()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setDependencyInput()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setDependencyInput()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setBackupGlobals()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setBackupGlobals()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setBackupStaticAttributes()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setBackupStaticAttributes()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setRunTestInSeparateProcess()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setRunTestInSeparateProcess()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setPreserveGlobalState()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setPreserveGlobalState()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setInIsolation()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setInIsolation()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getResult()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getResult()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setResult()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setResult()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getTestResultObject()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getTestResultObject()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::iniSet()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::iniSet()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setLocale()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setLocale()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getMock()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getMock()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getMockBuilder()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getMockBuilder()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getMockClass()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getMockClass()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getMockForAbstractClass()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getMockForAbstractClass()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getMockFromWsdl()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getMockFromWsdl()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::addToAssertionCount()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::addToAssertionCount()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getNumAssertions()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getNumAssertions()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::any()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::any()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::never()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::never()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::atLeastOnce()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::atLeastOnce()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::once()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::once()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::exactly()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::exactly()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::at()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::at()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::returnValue()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::returnValue()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::returnArgument()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::returnArgument()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::returnCallback()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::returnCallback()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::throwException()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::throwException()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::onConsecutiveCalls()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::onConsecutiveCalls()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::dataToString()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::dataToString()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getDataSetAsString()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getDataSetAsString()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::createResult()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::createResult()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::handleDependencies()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::handleDependencies()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::setUpBeforeClass()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::setUpBeforeClass()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertPreConditions()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertPreConditions()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertPostConditions()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertPostConditions()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::tearDownAfterClass()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::tearDownAfterClass()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::onNotSuccessfulTest()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::onNotSuccessfulTest()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::prepareTemplate()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::prepareTemplate()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertArrayHasKey()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertArrayHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertArrayNotHasKey()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertArrayNotHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertContains()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertContains()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeContains()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeContains()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertNotContains()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertNotContains()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeNotContains()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeNotContains()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertContainsOnly()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeContainsOnly()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertNotContainsOnly()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeNotContainsOnly()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertEquals()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertEquals()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeEquals()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeEquals()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertNotEquals()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeNotEquals()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertEmpty()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeEmpty()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertNotEmpty()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertNotEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeNotEmpty()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeNotEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertGreaterThan()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertGreaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeGreaterThan()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeGreaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertGreaterThanOrEqual()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeGreaterThanOrEqual()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertLessThan()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertLessThan()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeLessThan()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeLessThan()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertLessThanOrEqual()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeLessThanOrEqual()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertFileEquals()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertFileEquals()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertFileNotEquals()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertFileNotEquals()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertStringEqualsFile()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertStringEqualsFile()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertStringNotEqualsFile()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertStringNotEqualsFile()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertFileExists()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertFileExists()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertFileNotExists()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertFileNotExists()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertTrue()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertTrue()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertFalse()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertFalse()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertNotNull()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertNotNull()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertNull()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertNull()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertClassHasAttribute()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertClassHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertClassNotHasAttribute()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertClassNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertClassHasStaticAttribute()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertClassHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertClassNotHasStaticAttribute()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertClassNotHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertObjectHasAttribute()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertObjectHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertObjectNotHasAttribute()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertObjectNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertSame()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertSame()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeSame()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeSame()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertNotSame()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertNotSame()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeNotSame()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeNotSame()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertInstanceOf()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeInstanceOf()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertNotInstanceOf()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeNotInstanceOf()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertInternalType()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeInternalType()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertNotInternalType()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertNotInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeNotInternalType()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeNotInternalType()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertType()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertType()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeType()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeType()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertNotType()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertNotType()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertAttributeNotType()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertAttributeNotType()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertRegExp()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertNotRegExp()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertNotRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertStringMatchesFormat()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertStringMatchesFormat()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertStringNotMatchesFormat()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertStringNotMatchesFormat()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertStringMatchesFormatFile()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertStringMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertStringNotMatchesFormatFile()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertStringNotMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertStringStartsWith()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertStringStartsWith()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertStringStartsNotWith()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertStringStartsNotWith()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertStringEndsWith()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertStringEndsWith()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertStringEndsNotWith()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertStringEndsNotWith()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertXmlFileEqualsXmlFile()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertXmlFileEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertXmlFileNotEqualsXmlFile()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertXmlFileNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertXmlStringEqualsXmlFile()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertXmlStringEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertXmlStringNotEqualsXmlFile()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertXmlStringNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertXmlStringEqualsXmlString()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertXmlStringEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertXmlStringNotEqualsXmlString()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertXmlStringNotEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertEqualXMLStructure()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertEqualXMLStructure()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertSelectCount()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertSelectCount()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertSelectRegExp()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertSelectRegExp()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertSelectEquals()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertSelectEquals()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertTag()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertTag()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertNotTag()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertNotTag()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::assertThat()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::assertThat()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::logicalAnd()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::logicalAnd()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::logicalOr()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::logicalOr()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::logicalNot()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::logicalNot()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::logicalXor()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::logicalXor()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::anything()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::anything()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::isTrue()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::isTrue()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::isFalse()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::isFalse()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::isNull()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::isNull()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::attribute()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::attribute()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::contains()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::contains()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::containsOnly()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::containsOnly()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::arrayHasKey()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::arrayHasKey()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::equalTo()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::equalTo()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::attributeEqualTo()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::attributeEqualTo()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::isEmpty()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::isEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::fileExists()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::fileExists()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::greaterThan()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::greaterThan()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::greaterThanOrEqual()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::greaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::classHasAttribute()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::classHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::classHasStaticAttribute()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::classHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::objectHasAttribute()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::objectHasAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::identicalTo()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::identicalTo()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::isInstanceOf()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::isInstanceOf()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::isType()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::isType()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::lessThan()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::lessThan()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::lessThanOrEqual()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::lessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::matchesRegularExpression()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::matchesRegularExpression()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::matches()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::matches()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::stringStartsWith()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::stringStartsWith()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::stringContains()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::stringContains()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::stringEndsWith()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::stringEndsWith()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::fail()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::fail()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::syntheticFail()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::syntheticFail()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::readAttribute()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::readAttribute()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::markTestIncomplete()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::markTestIncomplete()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::markTestSkipped()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::markTestSkipped()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::getCount()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::getCount()</id><type>method</type></node><node><value>\Aura\Marshal\CollectionTest::resetCount()</value><id>db_tests_CollectionTest.html#\Aura\Marshal\CollectionTest::resetCount()</id><type>method</type></node><node><value>\Aura\Marshal\Manager</value><id>db_src_Manager.html#\Aura\Marshal\Manager</id><type>class</type></node><node><value>\Aura\Marshal\Manager::$type_builder</value><id>db_src_Manager.html#\Aura\Marshal\Manager::$type_builder</id><type>property</type></node><node><value>\Aura\Marshal\Manager::$relation_builder</value><id>db_src_Manager.html#\Aura\Marshal\Manager::$relation_builder</id><type>property</type></node><node><value>\Aura\Marshal\Manager::$types</value><id>db_src_Manager.html#\Aura\Marshal\Manager::$types</id><type>property</type></node><node><value>\Aura\Marshal\Manager::__construct()</value><id>db_src_Manager.html#\Aura\Marshal\Manager::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\Manager::setType()</value><id>db_src_Manager.html#\Aura\Marshal\Manager::setType()</id><type>method</type></node><node><value>\Aura\Marshal\Manager::setRelation()</value><id>db_src_Manager.html#\Aura\Marshal\Manager::setRelation()</id><type>method</type></node><node><value>\Aura\Marshal\Manager::__get()</value><id>db_src_Manager.html#\Aura\Marshal\Manager::__get()</id><type>method</type></node><node><value>\Aura\Marshal\Manager::buildType()</value><id>db_src_Manager.html#\Aura\Marshal\Manager::buildType()</id><type>method</type></node><node><value>\Aura\Marshal\Manager::getTypes()</value><id>db_src_Manager.html#\Aura\Marshal\Manager::getTypes()</id><type>method</type></node><node><value>\Aura\Marshal\Data</value><id>db_src_Data.html#\Aura\Marshal\Data</id><type>class</type></node><node><value>\Aura\Marshal\Data::$data</value><id>db_src_Data.html#\Aura\Marshal\Data::$data</id><type>property</type></node><node><value>\Aura\Marshal\Data::__construct()</value><id>db_src_Data.html#\Aura\Marshal\Data::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\Data::offsetExists()</value><id>db_src_Data.html#\Aura\Marshal\Data::offsetExists()</id><type>method</type></node><node><value>\Aura\Marshal\Data::offsetGet()</value><id>db_src_Data.html#\Aura\Marshal\Data::offsetGet()</id><type>method</type></node><node><value>\Aura\Marshal\Data::offsetSet()</value><id>db_src_Data.html#\Aura\Marshal\Data::offsetSet()</id><type>method</type></node><node><value>\Aura\Marshal\Data::offsetUnset()</value><id>db_src_Data.html#\Aura\Marshal\Data::offsetUnset()</id><type>method</type></node><node><value>\Aura\Marshal\Data::count()</value><id>db_src_Data.html#\Aura\Marshal\Data::count()</id><type>method</type></node><node><value>\Aura\Marshal\Data::getIterator()</value><id>db_src_Data.html#\Aura\Marshal\Data::getIterator()</id><type>method</type></node><node><value>\Aura\Marshal\DataIterator</value><id>db_src_DataIterator.html#\Aura\Marshal\DataIterator</id><type>class</type></node><node><value>\Aura\Marshal\DataIterator::$data</value><id>db_src_DataIterator.html#\Aura\Marshal\DataIterator::$data</id><type>property</type></node><node><value>\Aura\Marshal\DataIterator::$keys</value><id>db_src_DataIterator.html#\Aura\Marshal\DataIterator::$keys</id><type>property</type></node><node><value>\Aura\Marshal\DataIterator::$valid</value><id>db_src_DataIterator.html#\Aura\Marshal\DataIterator::$valid</id><type>property</type></node><node><value>\Aura\Marshal\DataIterator::__construct()</value><id>db_src_DataIterator.html#\Aura\Marshal\DataIterator::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\DataIterator::current()</value><id>db_src_DataIterator.html#\Aura\Marshal\DataIterator::current()</id><type>method</type></node><node><value>\Aura\Marshal\DataIterator::key()</value><id>db_src_DataIterator.html#\Aura\Marshal\DataIterator::key()</id><type>method</type></node><node><value>\Aura\Marshal\DataIterator::next()</value><id>db_src_DataIterator.html#\Aura\Marshal\DataIterator::next()</id><type>method</type></node><node><value>\Aura\Marshal\DataIterator::rewind()</value><id>db_src_DataIterator.html#\Aura\Marshal\DataIterator::rewind()</id><type>method</type></node><node><value>\Aura\Marshal\DataIterator::valid()</value><id>db_src_DataIterator.html#\Aura\Marshal\DataIterator::valid()</id><type>method</type></node><node><value>\Aura\Marshal\Collection\GenericCollection</value><id>db_src_Collection_GenericCollection.html#\Aura\Marshal\Collection\GenericCollection</id><type>class</type></node><node><value>\Aura\Marshal\Collection\GenericCollection::$type</value><id>db_src_Collection_GenericCollection.html#\Aura\Marshal\Collection\GenericCollection::$type</id><type>property</type></node><node><value>\Aura\Marshal\Collection\GenericCollection::$data</value><id>db_src_Collection_GenericCollection.html#\Aura\Marshal\Collection\GenericCollection::$data</id><type>property</type></node><node><value>\Aura\Marshal\Collection\GenericCollection::__construct()</value><id>db_src_Collection_GenericCollection.html#\Aura\Marshal\Collection\GenericCollection::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\Collection\GenericCollection::offsetGet()</value><id>db_src_Collection_GenericCollection.html#\Aura\Marshal\Collection\GenericCollection::offsetGet()</id><type>method</type></node><node><value>\Aura\Marshal\Collection\GenericCollection::getIdentityValues()</value><id>db_src_Collection_GenericCollection.html#\Aura\Marshal\Collection\GenericCollection::getIdentityValues()</id><type>method</type></node><node><value>\Aura\Marshal\Collection\GenericCollection::getFieldValues()</value><id>db_src_Collection_GenericCollection.html#\Aura\Marshal\Collection\GenericCollection::getFieldValues()</id><type>method</type></node><node><value>\Aura\Marshal\Collection\GenericCollection::isEmpty()</value><id>db_src_Collection_GenericCollection.html#\Aura\Marshal\Collection\GenericCollection::isEmpty()</id><type>method</type></node><node><value>\Aura\Marshal\Collection\GenericCollection::offsetExists()</value><id>db_src_Collection_GenericCollection.html#\Aura\Marshal\Collection\GenericCollection::offsetExists()</id><type>method</type></node><node><value>\Aura\Marshal\Collection\GenericCollection::offsetSet()</value><id>db_src_Collection_GenericCollection.html#\Aura\Marshal\Collection\GenericCollection::offsetSet()</id><type>method</type></node><node><value>\Aura\Marshal\Collection\GenericCollection::offsetUnset()</value><id>db_src_Collection_GenericCollection.html#\Aura\Marshal\Collection\GenericCollection::offsetUnset()</id><type>method</type></node><node><value>\Aura\Marshal\Collection\GenericCollection::count()</value><id>db_src_Collection_GenericCollection.html#\Aura\Marshal\Collection\GenericCollection::count()</id><type>method</type></node><node><value>\Aura\Marshal\Collection\GenericCollection::getIterator()</value><id>db_src_Collection_GenericCollection.html#\Aura\Marshal\Collection\GenericCollection::getIterator()</id><type>method</type></node><node><value>\Aura\Marshal\Collection\BuilderInterface</value><id>db_src_Collection_BuilderInterface.html#\Aura\Marshal\Collection\BuilderInterface</id><type>interface</type></node><node><value>\Aura\Marshal\Collection\BuilderInterface::newInstance()</value><id>db_src_Collection_BuilderInterface.html#\Aura\Marshal\Collection\BuilderInterface::newInstance()</id><type>method</type></node><node><value>\Aura\Marshal\Collection\Builder</value><id>db_src_Collection_Builder.html#\Aura\Marshal\Collection\Builder</id><type>class</type></node><node><value>\Aura\Marshal\Collection\Builder::newInstance()</value><id>db_src_Collection_Builder.html#\Aura\Marshal\Collection\Builder::newInstance()</id><type>method</type></node><node><value>\Aura\Marshal\Record\BuilderInterface</value><id>db_src_Record_BuilderInterface.html#\Aura\Marshal\Record\BuilderInterface</id><type>interface</type></node><node><value>\Aura\Marshal\Record\BuilderInterface::newInstance()</value><id>db_src_Record_BuilderInterface.html#\Aura\Marshal\Record\BuilderInterface::newInstance()</id><type>method</type></node><node><value>\Aura\Marshal\Record\Builder</value><id>db_src_Record_Builder.html#\Aura\Marshal\Record\Builder</id><type>class</type></node><node><value>\Aura\Marshal\Record\Builder::newInstance()</value><id>db_src_Record_Builder.html#\Aura\Marshal\Record\Builder::newInstance()</id><type>method</type></node><node><value>\Aura\Marshal\Record\GenericRecord</value><id>db_src_Record_GenericRecord.html#\Aura\Marshal\Record\GenericRecord</id><type>class</type></node><node><value>\Aura\Marshal\Record\GenericRecord::$type</value><id>db_src_Record_GenericRecord.html#\Aura\Marshal\Record\GenericRecord::$type</id><type>property</type></node><node><value>\Aura\Marshal\Record\GenericRecord::$data</value><id>db_src_Record_GenericRecord.html#\Aura\Marshal\Record\GenericRecord::$data</id><type>property</type></node><node><value>\Aura\Marshal\Record\GenericRecord::__construct()</value><id>db_src_Record_GenericRecord.html#\Aura\Marshal\Record\GenericRecord::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\Record\GenericRecord::__get()</value><id>db_src_Record_GenericRecord.html#\Aura\Marshal\Record\GenericRecord::__get()</id><type>method</type></node><node><value>\Aura\Marshal\Record\GenericRecord::__set()</value><id>db_src_Record_GenericRecord.html#\Aura\Marshal\Record\GenericRecord::__set()</id><type>method</type></node><node><value>\Aura\Marshal\Record\GenericRecord::__isset()</value><id>db_src_Record_GenericRecord.html#\Aura\Marshal\Record\GenericRecord::__isset()</id><type>method</type></node><node><value>\Aura\Marshal\Record\GenericRecord::__unset()</value><id>db_src_Record_GenericRecord.html#\Aura\Marshal\Record\GenericRecord::__unset()</id><type>method</type></node><node><value>\Aura\Marshal\Record\GenericRecord::offsetGet()</value><id>db_src_Record_GenericRecord.html#\Aura\Marshal\Record\GenericRecord::offsetGet()</id><type>method</type></node><node><value>\Aura\Marshal\Record\GenericRecord::offsetUnset()</value><id>db_src_Record_GenericRecord.html#\Aura\Marshal\Record\GenericRecord::offsetUnset()</id><type>method</type></node><node><value>\Aura\Marshal\Record\GenericRecord::offsetExists()</value><id>db_src_Record_GenericRecord.html#\Aura\Marshal\Record\GenericRecord::offsetExists()</id><type>method</type></node><node><value>\Aura\Marshal\Record\GenericRecord::offsetSet()</value><id>db_src_Record_GenericRecord.html#\Aura\Marshal\Record\GenericRecord::offsetSet()</id><type>method</type></node><node><value>\Aura\Marshal\Record\GenericRecord::count()</value><id>db_src_Record_GenericRecord.html#\Aura\Marshal\Record\GenericRecord::count()</id><type>method</type></node><node><value>\Aura\Marshal\Record\GenericRecord::getIterator()</value><id>db_src_Record_GenericRecord.html#\Aura\Marshal\Record\GenericRecord::getIterator()</id><type>method</type></node><node><value>\Aura\Marshal\Relation\HasManyThrough</value><id>db_src_Relation_HasManyThrough.html#\Aura\Marshal\Relation\HasManyThrough</id><type>class</type></node><node><value>\Aura\Marshal\Relation\HasManyThrough::$through_type</value><id>db_src_Relation_HasManyThrough.html#\Aura\Marshal\Relation\HasManyThrough::$through_type</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasManyThrough::$through_native_field</value><id>db_src_Relation_HasManyThrough.html#\Aura\Marshal\Relation\HasManyThrough::$through_native_field</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasManyThrough::$through_foreign_field</value><id>db_src_Relation_HasManyThrough.html#\Aura\Marshal\Relation\HasManyThrough::$through_foreign_field</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasManyThrough::$manager</value><id>db_src_Relation_HasManyThrough.html#\Aura\Marshal\Relation\HasManyThrough::$manager</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasManyThrough::$foreign_type</value><id>db_src_Relation_HasManyThrough.html#\Aura\Marshal\Relation\HasManyThrough::$foreign_type</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasManyThrough::$native_field</value><id>db_src_Relation_HasManyThrough.html#\Aura\Marshal\Relation\HasManyThrough::$native_field</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasManyThrough::$foreign_field</value><id>db_src_Relation_HasManyThrough.html#\Aura\Marshal\Relation\HasManyThrough::$foreign_field</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasManyThrough::__construct()</value><id>db_src_Relation_HasManyThrough.html#\Aura\Marshal\Relation\HasManyThrough::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\Relation\HasManyThrough::getForRecord()</value><id>db_src_Relation_HasManyThrough.html#\Aura\Marshal\Relation\HasManyThrough::getForRecord()</id><type>method</type></node><node><value>\Aura\Marshal\Relation\Builder</value><id>db_src_Relation_Builder.html#\Aura\Marshal\Relation\Builder</id><type>class</type></node><node><value>\Aura\Marshal\Relation\Builder::$relationship_class</value><id>db_src_Relation_Builder.html#\Aura\Marshal\Relation\Builder::$relationship_class</id><type>property</type></node><node><value>\Aura\Marshal\Relation\Builder::newInstance()</value><id>db_src_Relation_Builder.html#\Aura\Marshal\Relation\Builder::newInstance()</id><type>method</type></node><node><value>\Aura\Marshal\Relation\HasOne</value><id>db_src_Relation_HasOne.html#\Aura\Marshal\Relation\HasOne</id><type>class</type></node><node><value>\Aura\Marshal\Relation\HasOne::$manager</value><id>db_src_Relation_HasOne.html#\Aura\Marshal\Relation\HasOne::$manager</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasOne::$foreign_type</value><id>db_src_Relation_HasOne.html#\Aura\Marshal\Relation\HasOne::$foreign_type</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasOne::$native_field</value><id>db_src_Relation_HasOne.html#\Aura\Marshal\Relation\HasOne::$native_field</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasOne::$foreign_field</value><id>db_src_Relation_HasOne.html#\Aura\Marshal\Relation\HasOne::$foreign_field</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasOne::getForRecord()</value><id>db_src_Relation_HasOne.html#\Aura\Marshal\Relation\HasOne::getForRecord()</id><type>method</type></node><node><value>\Aura\Marshal\Relation\HasOne::__construct()</value><id>db_src_Relation_HasOne.html#\Aura\Marshal\Relation\HasOne::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\Relation\BelongsTo</value><id>db_src_Relation_BelongsTo.html#\Aura\Marshal\Relation\BelongsTo</id><type>class</type></node><node><value>\Aura\Marshal\Relation\BelongsTo::$manager</value><id>db_src_Relation_BelongsTo.html#\Aura\Marshal\Relation\BelongsTo::$manager</id><type>property</type></node><node><value>\Aura\Marshal\Relation\BelongsTo::$foreign_type</value><id>db_src_Relation_BelongsTo.html#\Aura\Marshal\Relation\BelongsTo::$foreign_type</id><type>property</type></node><node><value>\Aura\Marshal\Relation\BelongsTo::$native_field</value><id>db_src_Relation_BelongsTo.html#\Aura\Marshal\Relation\BelongsTo::$native_field</id><type>property</type></node><node><value>\Aura\Marshal\Relation\BelongsTo::$foreign_field</value><id>db_src_Relation_BelongsTo.html#\Aura\Marshal\Relation\BelongsTo::$foreign_field</id><type>property</type></node><node><value>\Aura\Marshal\Relation\BelongsTo::getForRecord()</value><id>db_src_Relation_BelongsTo.html#\Aura\Marshal\Relation\BelongsTo::getForRecord()</id><type>method</type></node><node><value>\Aura\Marshal\Relation\BelongsTo::__construct()</value><id>db_src_Relation_BelongsTo.html#\Aura\Marshal\Relation\BelongsTo::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\Relation\RelationInterface</value><id>db_src_Relation_RelationInterface.html#\Aura\Marshal\Relation\RelationInterface</id><type>interface</type></node><node><value>\Aura\Marshal\Relation\RelationInterface::getForRecord()</value><id>db_src_Relation_RelationInterface.html#\Aura\Marshal\Relation\RelationInterface::getForRecord()</id><type>method</type></node><node><value>\Aura\Marshal\Relation\AbstractRelation</value><id>db_src_Relation_AbstractRelation.html#\Aura\Marshal\Relation\AbstractRelation</id><type>class</type></node><node><value>\Aura\Marshal\Relation\AbstractRelation::$manager</value><id>db_src_Relation_AbstractRelation.html#\Aura\Marshal\Relation\AbstractRelation::$manager</id><type>property</type></node><node><value>\Aura\Marshal\Relation\AbstractRelation::$foreign_type</value><id>db_src_Relation_AbstractRelation.html#\Aura\Marshal\Relation\AbstractRelation::$foreign_type</id><type>property</type></node><node><value>\Aura\Marshal\Relation\AbstractRelation::$native_field</value><id>db_src_Relation_AbstractRelation.html#\Aura\Marshal\Relation\AbstractRelation::$native_field</id><type>property</type></node><node><value>\Aura\Marshal\Relation\AbstractRelation::$foreign_field</value><id>db_src_Relation_AbstractRelation.html#\Aura\Marshal\Relation\AbstractRelation::$foreign_field</id><type>property</type></node><node><value>\Aura\Marshal\Relation\AbstractRelation::__construct()</value><id>db_src_Relation_AbstractRelation.html#\Aura\Marshal\Relation\AbstractRelation::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\Relation\HasMany</value><id>db_src_Relation_HasMany.html#\Aura\Marshal\Relation\HasMany</id><type>class</type></node><node><value>\Aura\Marshal\Relation\HasMany::$manager</value><id>db_src_Relation_HasMany.html#\Aura\Marshal\Relation\HasMany::$manager</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasMany::$foreign_type</value><id>db_src_Relation_HasMany.html#\Aura\Marshal\Relation\HasMany::$foreign_type</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasMany::$native_field</value><id>db_src_Relation_HasMany.html#\Aura\Marshal\Relation\HasMany::$native_field</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasMany::$foreign_field</value><id>db_src_Relation_HasMany.html#\Aura\Marshal\Relation\HasMany::$foreign_field</id><type>property</type></node><node><value>\Aura\Marshal\Relation\HasMany::getForRecord()</value><id>db_src_Relation_HasMany.html#\Aura\Marshal\Relation\HasMany::getForRecord()</id><type>method</type></node><node><value>\Aura\Marshal\Relation\HasMany::__construct()</value><id>db_src_Relation_HasMany.html#\Aura\Marshal\Relation\HasMany::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType</id><type>class</type></node><node><value>\Aura\Marshal\Type\GenericType::$collection_builder</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::$collection_builder</id><type>property</type></node><node><value>\Aura\Marshal\Type\GenericType::$identity_field</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::$identity_field</id><type>property</type></node><node><value>\Aura\Marshal\Type\GenericType::$record_builder</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::$record_builder</id><type>property</type></node><node><value>\Aura\Marshal\Type\GenericType::$record_class</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::$record_class</id><type>property</type></node><node><value>\Aura\Marshal\Type\GenericType::$relation</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::$relation</id><type>property</type></node><node><value>\Aura\Marshal\Type\GenericType::$data</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::$data</id><type>property</type></node><node><value>\Aura\Marshal\Type\GenericType::setIdentityField()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::setIdentityField()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::getIdentityField()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::getIdentityField()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::setRecordClass()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::setRecordClass()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::getRecordClass()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::getRecordClass()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::setRecordBuilder()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::setRecordBuilder()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::getRecordBuilder()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::getRecordBuilder()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::setCollectionBuilder()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::setCollectionBuilder()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::getCollectionBuilder()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::getCollectionBuilder()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::load()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::load()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::getIdentityValues()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::getIdentityValues()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::getFieldValues()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::getFieldValues()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::getRecord()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::getRecord()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::getRecordByField()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::getRecordByField()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::getCollection()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::getCollection()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::getCollectionByField()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::getCollectionByField()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::setRelation()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::setRelation()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::getRelation()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::getRelation()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::getRelationNames()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::getRelationNames()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::__construct()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::offsetExists()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::offsetExists()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::offsetGet()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::offsetGet()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::offsetSet()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::offsetSet()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::offsetUnset()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::offsetUnset()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::count()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::count()</id><type>method</type></node><node><value>\Aura\Marshal\Type\GenericType::getIterator()</value><id>db_src_Type_GenericType.html#\Aura\Marshal\Type\GenericType::getIterator()</id><type>method</type></node><node><value>\Aura\Marshal\Type\Builder</value><id>db_src_Type_Builder.html#\Aura\Marshal\Type\Builder</id><type>class</type></node><node><value>\Aura\Marshal\Type\Builder::newInstance()</value><id>db_src_Type_Builder.html#\Aura\Marshal\Type\Builder::newInstance()</id><type>method</type></node><node><value>\Aura\Marshal\Exception</value><id>db_src_Exception.html#\Aura\Marshal\Exception</id><type>class</type></node><node><value>\Aura\Marshal\Exception::__construct()</value><id>db_src_Exception.html#\Aura\Marshal\Exception::__construct()</id><type>method</type></node><node><value>\Aura\Marshal\Exception::getMessage()</value><id>db_src_Exception.html#\Aura\Marshal\Exception::getMessage()</id><type>method</type></node><node><value>\Aura\Marshal\Exception::getCode()</value><id>db_src_Exception.html#\Aura\Marshal\Exception::getCode()</id><type>method</type></node><node><value>\Aura\Marshal\Exception::getFile()</value><id>db_src_Exception.html#\Aura\Marshal\Exception::getFile()</id><type>method</type></node><node><value>\Aura\Marshal\Exception::getLine()</value><id>db_src_Exception.html#\Aura\Marshal\Exception::getLine()</id><type>method</type></node><node><value>\Aura\Marshal\Exception::getTrace()</value><id>db_src_Exception.html#\Aura\Marshal\Exception::getTrace()</id><type>method</type></node><node><value>\Aura\Marshal\Exception::getPrevious()</value><id>db_src_Exception.html#\Aura\Marshal\Exception::getPrevious()</id><type>method</type></node><node><value>\Aura\Marshal\Exception::getTraceAsString()</value><id>db_src_Exception.html#\Aura\Marshal\Exception::getTraceAsString()</id><type>method</type></node><node><value>\Aura\Marshal\Exception::__toString()</value><id>db_src_Exception.html#\Aura\Marshal\Exception::__toString()</id><type>method</type></node><node><value>Closure()</value><id>db_config_default.html#::Closure()</id><type>function</type></node></nodes>
