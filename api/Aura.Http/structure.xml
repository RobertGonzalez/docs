<?xml version="1.0"?>
<<<<<<< HEAD
<project version="0.16.0" title="Aura Project for PHP: Aura.Http">
  <file path="src/Aura/Http/Headers.php" hash="7881bb8d762ed32e335fcef6092ae60f" package="Default">
    <docblock>
      <description>This file is part of the Aura Project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Http/Headers.php</error>
      <error line="20">No DocBlock was found for Property $list</error>
      <error line="22">No DocBlock was found for Method add</error>
      <error line="28">No DocBlock was found for Method set</error>
      <error line="34">No DocBlock was found for Method getAll</error>
      <error line="39">No DocBlock was found for Method setAll</error>
      <error line="49">No DocBlock was found for Method send</error>
    </parse_markers>
=======
<project version="0.17.2" title="Aura Project for PHP: Aura.Http">
  <file path="src/Aura/Http/Cookies.php" hash="4020ba8a713dc43e85243bc120952ce7" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Http" package="Aura\Http">
      <name>Cookies</name>
      <extends/>
      <full_name>\Aura\Http\Cookies</full_name>
      <docblock>
        <description>Collection of non-cookie HTTP headers.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Http"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="27" package="Default">
        <name>$list</name>
        <default>array()</default>
        <docblock>
          <description>The list of all cookies.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="38" package="Default">
        <name>$base</name>
        <default>array(
        'value'    =&gt; null</default>
        <docblock>
          <description>Base values for a single cookie.</description>
          <long-description/>
          <tag line="29" name="todo" description="Extract to a Cookie struct, and probably a CookieFactory."/>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="56" package="Default">
        <name>set</name>
        <docblock>
          <description>Sets a single cookie by name.</description>
          <long-description/>
          <tag line="47" name="param" description="The cookie name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="param" description="The cookie info." type="array" variable="$info">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="56">
          <name>$info</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="72" package="Default">
        <name>getAll</name>
        <docblock>
          <description>Gets all cookies.</description>
          <long-description/>
          <tag line="65" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="87" package="Default">
        <name>setAll</name>
        <docblock>
          <description>Sets all cookies at once.</description>
          <long-description/>
          <tag line="77" name="param" description="The array of all cookies where the key is the name and the value is the array of cookie info." type="array" variable="$cookies">
            <type by_reference="false">array</type>
          </tag>
          <tag line="77" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$cookies</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="102" package="Default">
        <name>send</name>
        <docblock>
          <description>Sends the cookies using `setcookie()`.</description>
          <long-description/>
          <tag line="95" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/Aura/Http/Exception/HeadersSent.php" hash="b22c910f5dc2dba90e176ec2d3bbbe18" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Http\Exception" package="Aura\Http">
      <name>HeadersSent</name>
      <extends>\Aura\Http\Exception</extends>
      <full_name>\Aura\Http\Exception\HeadersSent</full_name>
      <docblock>
        <description>Throws HeaderSent exception</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Http"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="29" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description/>
          <tag line="20" name="param" description="The file from which headers were first sent." type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="20" name="param" description="The line number in that file where headers were sent." type="int" variable="$line">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$line</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Http/Exception.php" hash="8154bb2af55217b239c0e61a505085dc" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Http" package="Aura\Http">
      <name>Exception</name>
      <extends>\Exception</extends>
      <full_name>\Aura\Http\Exception</full_name>
      <docblock>
        <description>Base Aura Http Exception</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Http"/>
      </docblock>
    </class>
  </file>
  <file path="src/Aura/Http/Headers.php" hash="113c7020c1ff9c804c9a3b30cbdfe6b9" package="Default">
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
    <class final="false" abstract="false" line="18" namespace="Aura\Http" package="Aura\Http">
      <name>Headers</name>
      <extends/>
      <full_name>\Aura\Http\Headers</full_name>
      <docblock>
        <description>Collection of non-cookie HTTP headers.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Http"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="27" package="Default">
        <name>$list</name>
        <default>array()</default>
        <docblock>
          <description>The list of all headers.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="41" package="Default">
        <name>add</name>
        <docblock>
          <description>Adds a header value to an existing header label; if there is more
than one, it will append the new value.</description>
          <long-description/>
          <tag line="29" name="param" description="The header label." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="param" description="The header value." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
        <argument line="41">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="58" package="Default">
        <name>set</name>
        <docblock>
          <description>Sets a header value, overwriting previous values.</description>
          <long-description/>
          <tag line="47" name="param" description="The header label." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="param" description="The header value." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="71" package="Default">
        <name>getAll</name>
        <docblock>
          <description>Returns all the headers.</description>
          <long-description/>
          <tag line="64" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="86" package="Default">
        <name>setAll</name>
        <docblock>
          <description>Sets all the headers at once; replaces all previously existing headers.</description>
          <long-description/>
          <tag line="76" name="param" description="An array of headers where the key is the header label, and the value is the header value (multiple values are allowed)." type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="76" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="103" package="Default">
        <name>send</name>
        <docblock>
          <description>Sends all the headers using `header()`.</description>
          <long-description/>
          <tag line="96" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="126" package="Default">
        <name>sanitizeLabel</name>
        <docblock>
          <description>Sanitizes header labels by removing all characters besides
`[a-zA-z0-9_-]`.</description>
          <long-description>&lt;p&gt;Underscores are converted to dashes, and word case is normalized.&lt;/p&gt;

&lt;p&gt;Converts "foo \r bar_ baz-dib \n 9" to "Foobar-Baz-Dib9".&lt;/p&gt;</long-description>
          <tag line="112" name="param" description="The header label to sanitize." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="return" description="The sanitized header label." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
<<<<<<< HEAD
  <file path="src/Aura/Http/Exception/HeadersSent.php" hash="6a3651147370f87bfda5591af3d8c389" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Http/Exception/HeadersSent.php</error>
      <error line="5">No DocBlock was found for Class HeadersSent</error>
      <error line="7">No DocBlock was found for Method __construct</error>
    </parse_markers>
    <class final="false" abstract="false" line="5" namespace="Aura\Http\Exception" package="Default">
      <name>HeadersSent</name>
      <extends>\Aura\Http\Exception</extends>
      <full_name>\Aura\Http\Exception\HeadersSent</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="7" package="Default">
        <name>__construct</name>
        <argument line="7">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
        <argument line="7">
          <name>$line</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Http/Response.php" hash="6235ec9c9b80b1747d1090d1749415f7" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Http/Response.php</error>
      <error line="3">No DocBlock was found for Class Response</error>
      <error line="5">No DocBlock was found for Property $cookies</error>
      <error line="7">No DocBlock was found for Property $content</error>
      <error line="9">No DocBlock was found for Property $headers</error>
      <error line="11">No DocBlock was found for Property $status_code</error>
      <error line="13">No DocBlock was found for Property $status_text</error>
      <error line="69">No DocBlock was found for Property $version</error>
      <error line="71">No DocBlock was found for Method __construct</error>
      <error line="81">No DocBlock was found for Method __get</error>
      <error line="94">No DocBlock was found for Method send</error>
      <error line="108">No DocBlock was found for Method sendHeaders</error>
      <error line="127">No DocBlock was found for Method setCookies</error>
      <error line="132">No DocBlock was found for Method getCookies</error>
    </parse_markers>
    <class final="false" abstract="false" line="3" namespace="Aura\Http" package="Default">
=======
  <file path="src/Aura/Http/Response.php" hash="ca6a75f864947020b615441f804d5f25" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Http" package="Aura\Http">
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
      <name>Response</name>
      <extends/>
      <full_name>\Aura\Http\Response</full_name>
      <docblock>
        <description>The Aura Response class</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Http"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="27" package="Default">
        <name>$cookies</name>
        <default/>
        <docblock>
          <description>The cookies for this response.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="\Aura\Http\Cookies">
            <type by_reference="false">\Aura\Http\Cookies</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$content</name>
        <default/>
        <docblock>
          <description>The content of this response.</description>
          <long-description/>
          <tag line="29" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$headers</name>
        <default/>
        <docblock>
          <description>The headers for this response.</description>
          <long-description/>
          <tag line="38" name="var" description="" type="\Aura\Http\Headers">
            <type by_reference="false">\Aura\Http\Headers</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" package="Default">
        <name>$status_code</name>
        <default/>
        <docblock>
          <description>The HTTP status code of the response.</description>
          <long-description/>
          <tag line="47" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" package="Default">
        <name>$status_text</name>
        <default/>
        <docblock>
          <description>The HTTP status message of the response.</description>
          <long-description/>
          <tag line="56" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" package="Default">
        <name>$status_text_default</name>
        <default>array(
        '100' =&gt; 'Continue'</default>
        <docblock>
          <description>List of default HTTP status messages.</description>
          <long-description/>
          <tag line="65" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="126" package="Default">
        <name>$version</name>
        <default>'1.1'</default>
        <docblock>
          <description>The HTTP version for this response.</description>
          <long-description/>
          <tag line="119" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="137" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description/>
          <tag line="128" name="param" description="A Headers object." type="\Aura\Http\Headers" variable="$headers">
            <type by_reference="false">\Aura\Http\Headers</type>
          </tag>
          <tag line="128" name="param" description="A Cookies object." type="\Aura\Http\Cookies" variable="$cookies">
            <type by_reference="false">\Aura\Http\Cookies</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$headers</name>
          <default/>
          <type>Headers</type>
        </argument>
        <argument line="137">
          <name>$cookies</name>
          <default/>
          <type>Cookies</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="153" package="Default">
        <name>__get</name>
        <docblock>
          <description>Read-only access to $headers and $cookies objects.</description>
          <long-description/>
          <tag line="144" name="param" description="The property to retrieve." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="144" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="153">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="173" package="Default">
        <name>send</name>
        <docblock>
          <description>Sends the full HTTP response.</description>
          <long-description/>
          <tag line="166" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="194" package="Default">
        <name>sendHeaders</name>
        <docblock>
          <description>Sends the HTTP status code, status test, headers, and cookies.</description>
          <long-description/>
          <tag line="187" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="222" package="Default">
        <name>setCookies</name>
        <docblock>
          <description>Sets the cookies for the response.</description>
          <long-description/>
          <tag line="213" name="param" description="The cookies object." type="\Aura\Http\Cookies" variable="$cookies">
            <type by_reference="false">\Aura\Http\Cookies</type>
          </tag>
          <tag line="213" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="222">
          <name>$cookies</name>
          <default/>
          <type>Cookies</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="234" package="Default">
        <name>getCookies</name>
        <docblock>
          <description>Returns the $cookies object.</description>
          <long-description/>
          <tag line="227" name="return" description="" type="\Aura\Http\Cookies">
            <type by_reference="false">\Aura\Http\Cookies</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="249" package="Default">
        <name>setContent</name>
        <docblock>
          <description>Sets the content of the response.</description>
          <long-description/>
          <tag line="239" name="param" description="The body content of the response. Note that this may be a resource, in which case it will be streamed out when sending." type="mixed" variable="$content">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="239" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="249">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="261" package="Default">
        <name>getContent</name>
        <docblock>
          <description>Gets the content of the response.</description>
          <long-description/>
          <tag line="254" name="return" description="The body content of the response." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="275" package="Default">
        <name>setHeaders</name>
        <docblock>
          <description>Sets the headers for the response (not including cookies).</description>
          <long-description/>
          <tag line="266" name="param" description="A Headers object." type="\Aura\Http\Headers" variable="$headers">
            <type by_reference="false">\Aura\Http\Headers</type>
          </tag>
          <tag line="266" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="275">
          <name>$headers</name>
          <default/>
          <type>Headers</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="287" package="Default">
        <name>getHeaders</name>
        <docblock>
          <description>Returns the headers for the response (not including cookies).</description>
          <long-description/>
          <tag line="280" name="return" description="" type="\Aura\Http\Headers">
            <type by_reference="false">\Aura\Http\Headers</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="300" package="Default">
        <name>setStatusCode</name>
        <docblock>
          <description>Sets the HTTP status code to for the response. Automatically resets the
status text to the default for that code, if any.</description>
          <long-description/>
          <tag line="292" name="param" description="An HTTP status code, such as 200, 302, 404, etc." type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="300">
          <name>$code</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="323" package="Default">
        <name>getStatusCode</name>
        <docblock>
          <description>Returns the HTTP status code for the response.</description>
          <long-description/>
          <tag line="316" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="337" package="Default">
        <name>setStatusText</name>
        <docblock>
          <description>Sets the HTTP status text for the response.</description>
          <long-description/>
          <tag line="328" name="param" description="The status text." type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="328" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="337">
          <name>$text</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="350" package="Default">
        <name>getStatusText</name>
        <docblock>
          <description>Returns the HTTP status text for the response.</description>
          <long-description/>
          <tag line="343" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="364" package="Default">
        <name>setVersion</name>
        <docblock>
          <description>Sets the HTTP version for the response to '1.0' or '1.1'.</description>
          <long-description/>
          <tag line="355" name="param" description="The HTTP version to use for this response." type="string" variable="$version">
            <type by_reference="false">string</type>
          </tag>
          <tag line="355" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="364">
          <name>$version</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="381" package="Default">
        <name>getVersion</name>
        <docblock>
          <description>Returns the HTTP version for the response.</description>
          <long-description/>
          <tag line="374" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
<<<<<<< HEAD
  <file path="src/Aura/Http/Cookies.php" hash="46d6bc3990e451a2e7b5f6f5a188d17a" package="Default">
    <docblock>
      <description>This file is part of the Aura Project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Http/Cookies.php</error>
      <error line="20">No DocBlock was found for Property $list</error>
      <error line="23">No DocBlock was found for Property $base</error>
      <error line="32">No DocBlock was found for Method set</error>
      <error line="41">No DocBlock was found for Method getAll</error>
      <error line="46">No DocBlock was found for Method setAll</error>
      <error line="54">No DocBlock was found for Method send</error>
    </parse_markers>
    <class final="false" abstract="false" line="18" namespace="Aura\Http" package="Aura\Http">
      <name>Cookies</name>
      <extends/>
      <full_name>\Aura\Http\Cookies</full_name>
      <docblock>
        <description>Collection of non-cookie HTTP headers.</description>
        <long-description>
</long-description>
        <tag line="11" name="package" description="Aura.Http"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="20" package="Default">
        <name>$list</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="23" package="Default">
        <name>$base</name>
        <default>array(
        'value'    =&gt; null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="32" package="Default">
        <name>set</name>
        <argument line="32">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="32">
          <name>$info</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="41" package="Default">
        <name>getAll</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="46" package="Default">
        <name>setAll</name>
        <argument line="46">
          <name>$cookies</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="54" package="Default">
        <name>send</name>
      </method>
    </class>
  </file>
  <file path="src/Aura/Http/Exception.php" hash="62e33aa65c754a672914499b6c21ac85" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Http/Exception.php</error>
      <error line="6">No DocBlock was found for Class Exception</error>
    </parse_markers>
    <class final="false" abstract="false" line="6" namespace="Aura\Http" package="Default">
      <name>Exception</name>
      <extends>\Exception</extends>
      <full_name>\Aura\Http\Exception</full_name>
    </class>
  </file>
=======
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
  <package name="Aura">
    <package name="Http"/>
  </package>
  <package name="Default"/>
  <namespace name="Aura">
    <namespace name="Http">
      <namespace name="Exception"/>
    </namespace>
  </namespace>
  <marker>todo</marker>
  <marker>fixme</marker>
</project>
