<?xml version="1.0"?>
<project version="0.16.0" title="Aura Project for PHP: Aura.Sql">
  <file path="src/Aura/Sql/ConnectionFactory.php" hash="3d6233623b34a0f12904e0fb73ca46fc" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Sql/ConnectionFactory.php</error>
      <error line="5">No DocBlock was found for Class ConnectionFactory</error>
      <notice line="59">Argument $params is missing from the function Docblock</notice>
    </parse_markers>
    <namespace-alias name="ForgeInterface">Aura\Di\ForgeInterface</namespace-alias>
    <class final="false" abstract="false" line="5" namespace="Aura\Sql" package="Default">
      <name>ConnectionFactory</name>
      <extends/>
      <full_name>\Aura\Sql\ConnectionFactory</full_name>
      <property final="false" static="false" visibility="protected" line="14" package="Default">
        <name>$forge</name>
        <default/>
        <docblock>
          <description>A Forge to create objects.</description>
          <long-description>
</long-description>
          <tag line="7" name="var" description="" type="\Aura\Di\ForgeInterface">
            <type by_reference="false">\Aura\Di\ForgeInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="24" package="Default">
        <name>$map</name>
        <default>array()</default>
        <docblock>
          <description>A map of names (called at the command line) to their corresponding
Connection classes.</description>
          <long-description>
</long-description>
          <tag line="16" name="var" description="" type="array">
            <type by_reference="false">\Aura\Sql\array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="38" package="Default">
        <name>__construct</name>
        <docblock>
          <description>A Connection class to use when no class exists for a mapped name.</description>
          <long-description>
</long-description>
          <tag line="26" name="param" description="A Forge to create objects." type="\Aura\Di\ForgeInterface" variable="$forge">
            <type by_reference="false">\Aura\Di\ForgeInterface</type>
          </tag>
          <tag line="26" name="param" description="A map of PDO types to Connection classes." type="array" variable="$map">
            <type by_reference="false">\Aura\Sql\array</type>
          </tag>
          <tag line="26" name="param" description="A Connection class to use when no class can be found for a mapped name." type="string" variable="$not_found">
            <type by_reference="false">\Aura\Sql\string</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$forge</name>
          <default/>
          <type>ForgeInterface</type>
        </argument>
        <argument line="40">
          <name>$map</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="57" package="Default">
        <name>newInstance</name>
        <docblock>
          <description>Creates and returns a Connection class based on a PDO type.</description>
          <long-description>
</long-description>
          <tag line="46" name="param" description="A PDO type that maps to a Connection class." type="string" variable="$name">
            <type by_reference="false">\Aura\Sql\string</type>
          </tag>
          <tag line="46" name="return" description="" type="\Aura\Sql\Connection">
            <type by_reference="false">\Aura\Sql\Connection</type>
          </tag>
          <tag line="46" name="throws" description="when no mapped class can be found." type="\Exception\ConnectionFactory">
            <type by_reference="false">\Exception\ConnectionFactory</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="59">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Sql/Exception/ConnectionFactory.php" hash="28d82ec4a5bea80568e590f6c5c89eb9" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Sql/Exception/ConnectionFactory.php</error>
      <error line="3">No DocBlock was found for Class ConnectionFactory</error>
    </parse_markers>
    <class final="false" abstract="false" line="3" namespace="Aura\Sql\Exception" package="Default">
      <name>ConnectionFactory</name>
      <extends>\Aura\Sql\Exception</extends>
      <full_name>\Aura\Sql\Exception\ConnectionFactory</full_name>
    </class>
  </file>
  <file path="src/Aura/Sql/Exception/NoSuchMaster.php" hash="3eb85acfc4741cfafd53de723708276e" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Sql/Exception/NoSuchMaster.php</error>
      <error line="3">No DocBlock was found for Class NoSuchMaster</error>
    </parse_markers>
    <class final="false" abstract="false" line="3" namespace="Aura\Sql\Exception" package="Default">
      <name>NoSuchMaster</name>
      <extends>\Aura\Sql\Exception</extends>
      <full_name>\Aura\Sql\Exception\NoSuchMaster</full_name>
    </class>
  </file>
  <file path="src/Aura/Sql/Exception/NoSuchSlave.php" hash="a69c8c153617eb89908b1c3da903914b" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Sql/Exception/NoSuchSlave.php</error>
      <error line="3">No DocBlock was found for Class NoSuchSlave</error>
    </parse_markers>
    <class final="false" abstract="false" line="3" namespace="Aura\Sql\Exception" package="Default">
      <name>NoSuchSlave</name>
      <extends>\Aura\Sql\Exception</extends>
      <full_name>\Aura\Sql\Exception\NoSuchSlave</full_name>
    </class>
  </file>
  <file path="src/Aura/Sql/Select.php" hash="c16c4f81cff96ddd1dba39558ebd7e70" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Sql/Select.php</error>
      <error line="3">No DocBlock was found for Class Select</error>
      <error line="5">No DocBlock was found for Property $distinct</error>
      <error line="6">No DocBlock was found for Property $cols</error>
      <error line="7">No DocBlock was found for Property $from</error>
      <error line="8">No DocBlock was found for Property $join</error>
      <error line="9">No DocBlock was found for Property $where</error>
      <error line="10">No DocBlock was found for Property $group</error>
      <error line="11">No DocBlock was found for Property $having</error>
      <error line="12">No DocBlock was found for Property $order</error>
      <error line="13">No DocBlock was found for Property $limit</error>
      <error line="14">No DocBlock was found for Property $offset</error>
      <error line="16">No DocBlock was found for Method __get</error>
      <error line="21">No DocBlock was found for Method __set</error>
      <error line="26">No DocBlock was found for Method __construct</error>
      <error line="37">No DocBlock was found for Method distinct</error>
      <error line="42">No DocBlock was found for Method cols</error>
      <error line="47">No DocBlock was found for Method __toString</error>
      <error line="117">No DocBlock was found for Method clearOrder</error>
      <error line="122">No DocBlock was found for Method getOrderString</error>
    </parse_markers>
    <class final="false" abstract="false" line="3" namespace="Aura\Sql" package="Default">
      <name>Select</name>
      <extends/>
      <full_name>\Aura\Sql\Select</full_name>
      <property final="false" static="false" visibility="protected" line="5" package="Default">
        <name>$distinct</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="6" package="Default">
        <name>$cols</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="7" package="Default">
        <name>$from</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="8" package="Default">
        <name>$join</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="9" package="Default">
        <name>$where</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="10" package="Default">
        <name>$group</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="11" package="Default">
        <name>$having</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="12" package="Default">
        <name>$order</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="13" package="Default">
        <name>$limit</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="14" package="Default">
        <name>$offset</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="16" package="Default">
        <name>__get</name>
        <argument line="16">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="21" package="Default">
        <name>__set</name>
        <argument line="21">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="21">
          <name>$val</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="26" package="Default">
        <name>__construct</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="37" package="Default">
        <name>distinct</name>
        <argument line="37">
          <name>$flag</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="42" package="Default">
        <name>cols</name>
        <argument line="42">
          <name>$spec</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="47" package="Default">
        <name>__toString</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="117" package="Default">
        <name>clearOrder</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="122" package="Default">
        <name>getOrderString</name>
      </method>
    </class>
  </file>
  <file path="src/Aura/Sql/Connection/Sqlsrv.php" hash="4491a40757772e03f81ed0e68143f8c7" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Sql/Connection/Sqlsrv.php</error>
      <error line="4">No DocBlock was found for Class Sqlsrv</error>
      <error line="6">No DocBlock was found for Property $dsn_prefix</error>
      <error line="8">No DocBlock was found for Property $dsn</error>
      <error line="13">No DocBlock was found for Property $ident_quote_prefix</error>
      <error line="15">No DocBlock was found for Property $ident_quote_suffix</error>
      <error line="30">No DocBlock was found for Method fetchTableCols</error>
      <error line="70">No DocBlock was found for Method convertSelect</error>
      <error line="90">No DocBlock was found for Method convertSelectStrategy</error>
    </parse_markers>
    <namespace-alias name="Select">Aura\Sql\Select</namespace-alias>
    <class final="false" abstract="false" line="4" namespace="Aura\Sql\Connection" package="Default">
      <name>Sqlsrv</name>
      <extends>\Aura\Sql\Connection\AbstractConnection</extends>
      <full_name>\Aura\Sql\Connection\Sqlsrv</full_name>
      <property final="false" static="false" visibility="protected" line="6" package="Default">
        <name>$dsn_prefix</name>
        <default>'sqlsrv'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="8" package="Default">
        <name>$dsn</name>
        <default>array(
        'Server' =&gt; null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="13" package="Default">
        <name>$ident_quote_prefix</name>
        <default>'['</default>
      </property>
      <property final="false" static="false" visibility="protected" line="15" package="Default">
        <name>$ident_quote_suffix</name>
        <default>']'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="24" package="Default">
        <name>fetchTableList</name>
        <docblock>
          <description>Returns a list of database tables.</description>
          <long-description>
</long-description>
          <tag line="17" name="return" description="The list of tables in the database." type="array">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="30" package="Default">
        <name>fetchTableCols</name>
        <argument line="30">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="70" package="Default">
        <name>convertSelect</name>
        <argument line="70">
          <name>$select</name>
          <default/>
          <type>Select</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="90" package="Default">
        <name>convertSelectStrategy</name>
        <argument line="90">
          <name>$select</name>
          <default/>
          <type>Select</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Sql/Connection/AbstractConnection.php" hash="03e1fbd8258369f21260d67da1dd1925" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Sql/Connection/AbstractConnection.php</error>
      <error line="7">No DocBlock was found for Class AbstractConnection</error>
      <error line="9">No DocBlock was found for Property $dsn_prefix</error>
      <error line="11">No DocBlock was found for Property $dsn</error>
      <error line="13">No DocBlock was found for Property $ident_quote_prefix</error>
      <error line="15">No DocBlock was found for Property $ident_quote_suffix</error>
      <error line="17">No DocBlock was found for Property $username</error>
      <error line="19">No DocBlock was found for Property $password</error>
      <error line="21">No DocBlock was found for Property $options</error>
      <error line="23">No DocBlock was found for Property $pdo</error>
      <error line="25">No DocBlock was found for Property $signal</error>
      <error line="27">No DocBlock was found for Method __construct</error>
      <error line="41">No DocBlock was found for Method getDsnString</error>
      <error line="52">No DocBlock was found for Method connect</error>
      <error line="67">No DocBlock was found for Method query</error>
      <error line="747">No DocBlock was found for Method convertSelect</error>
      <error line="815">No DocBlock was found for Method fetchTableCols</error>
    </parse_markers>
    <namespace-alias name="SignalManager">Aura\Signal\Manager</namespace-alias>
    <namespace-alias name="Select">Aura\Sql\Select</namespace-alias>
    <namespace-alias name="PDO">PDO</namespace-alias>
    <class final="false" abstract="true" line="7" namespace="Aura\Sql\Connection" package="Default">
      <name>AbstractConnection</name>
      <extends/>
      <full_name>\Aura\Sql\Connection\AbstractConnection</full_name>
      <property final="false" static="false" visibility="protected" line="9" package="Default">
        <name>$dsn_prefix</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="11" package="Default">
        <name>$dsn</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="13" package="Default">
        <name>$ident_quote_prefix</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="15" package="Default">
        <name>$ident_quote_suffix</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="17" package="Default">
        <name>$username</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="19" package="Default">
        <name>$password</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="21" package="Default">
        <name>$options</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="23" package="Default">
        <name>$pdo</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="25" package="Default">
        <name>$signal</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="27" package="Default">
        <name>__construct</name>
        <argument line="28">
          <name>$dsn</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="29">
          <name>$username</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="31">
          <name>$options</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="32">
          <name>$signal</name>
          <default/>
          <type>SignalManager</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="41" package="Default">
        <name>getDsnString</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="52" package="Default">
        <name>connect</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="67" package="Default">
        <name>query</name>
        <argument line="67">
          <name>$spec</name>
          <default/>
          <type/>
        </argument>
        <argument line="67">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="94" package="Default">
        <name>fetchAll</name>
        <docblock>
          <description>Fetches all rows from the database using sequential keys.</description>
          <long-description>
</long-description>
          <tag line="82" name="param" description="The SELECT statement." type="string" variable="$spec">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="82" name="param" description="An associative array of data to bind into the SELECT statement." type="array" variable="$data">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="82" name="return" description="" type="array">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$spec</name>
          <default/>
          <type/>
        </argument>
        <argument line="94">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="117" package="Default">
        <name>fetchAssoc</name>
        <docblock>
          <description>Fetches all rows from the database using associative keys (defined by
the first column).</description>
          <long-description>&lt;p&gt;N.b.: if multiple rows have the same first column value, the last
row with that value will override earlier rows.&lt;/p&gt;
</long-description>
          <tag line="100" name="param" description="An array of component parts for a SELECT, or a literal query string." type="array|string" variable="$spec">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="100" name="param" description="An associative array of data to bind into the SELECT statement." type="array" variable="$data">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="100" name="return" description="" type="array">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$spec</name>
          <default/>
          <type/>
        </argument>
        <argument line="117">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="141" package="Default">
        <name>fetchCol</name>
        <docblock>
          <description>Fetches the first column of all rows as a sequential array.</description>
          <long-description>
</long-description>
          <tag line="128" name="param" description="An array of component parts for a SELECT, or a literal query string." type="array|string" variable="$spec">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="128" name="param" description="An associative array of data to bind into the SELECT statement." type="array" variable="$data">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="128" name="return" description="" type="array">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$spec</name>
          <default/>
          <type/>
        </argument>
        <argument line="141">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="160" package="Default">
        <name>fetchValue</name>
        <docblock>
          <description>Fetches the very first value (i.e., first column of the first row).</description>
          <long-description>
</long-description>
          <tag line="147" name="param" description="An array of component parts for a SELECT, or a literal query string." type="array|string" variable="$spec">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="147" name="param" description="An associative array of data to bind into the SELECT statement." type="array" variable="$data">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="147" name="return" description="" type="mixed">
            <type by_reference="false">\Aura\Sql\Connection\mixed</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$spec</name>
          <default/>
          <type/>
        </argument>
        <argument line="160">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="183" package="Default">
        <name>fetchPairs</name>
        <docblock>
          <description>Fetches an associative array of all rows as key-value pairs (first
column is the key, second column is the value).</description>
          <long-description>
</long-description>
          <tag line="169" name="param" description="An array of component parts for a SELECT, or a literal query string." type="array|string" variable="$spec">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="169" name="param" description="An associative array of data to bind into the SELECT statement." type="array" variable="$data">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="169" name="return" description="" type="array">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$spec</name>
          <default/>
          <type/>
        </argument>
        <argument line="183">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="206" package="Default">
        <name>fetchOne</name>
        <docblock>
          <description>Fetches one row from the database.</description>
          <long-description>
</long-description>
          <tag line="193" name="param" description="An array of component parts for a SELECT, or a literal query string." type="array|string" variable="$spec">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="193" name="param" description="An associative array of data to bind into the SELECT statement." type="array" variable="$data">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="193" name="return" description="" type="array">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
        </docblock>
        <argument line="206">
          <name>$spec</name>
          <default/>
          <type/>
        </argument>
        <argument line="206">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="229" package="Default">
        <name>quote</name>
        <docblock>
          <description>Safely quotes a value for an SQL statement.</description>
          <long-description>&lt;p&gt;If an array is passed as the value, the array values are quoted
and then returned as a comma-separated string; this is useful
for generating IN() lists.&lt;/p&gt;
</long-description>
          <tag line="215" name="param" description="The value to quote." type="mixed" variable="$val">
            <type by_reference="false">\Aura\Sql\Connection\mixed</type>
          </tag>
          <tag line="215" name="return" description="An SQL-safe quoted value (or a string of separated-and-quoted values)." type="string">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
        </docblock>
        <argument line="229">
          <name>$val</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="259" package="Default">
        <name>quoteInto</name>
        <docblock>
          <description>Quotes a value and places into a piece of text at a placeholder; the
placeholder is a question-mark.</description>
          <long-description>
</long-description>
          <tag line="244" name="param" description="The text with placeholder(s)." type="string" variable="$text">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="244" name="param" description="The data value(s) to quote." type="mixed" variable="$data">
            <type by_reference="false">\Aura\Sql\Connection\mixed</type>
          </tag>
          <tag line="244" name="return" description="An SQL-safe quoted value (or string of separated values) placed into the orignal text." type="mixed">
            <type by_reference="false">\Aura\Sql\Connection\mixed</type>
          </tag>
          <tag line="244" name="see" description="\Aura\Sql\Connection\quote()" refers="\Aura\Sql\Connection\quote()"/>
        </docblock>
        <argument line="259">
          <name>$text</name>
          <default/>
          <type/>
        </argument>
        <argument line="259">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="341" package="Default">
        <name>quoteMulti</name>
        <docblock>
          <description>Quote multiple text-and-value pieces.</description>
          <long-description>&lt;p&gt;The placeholder is a question-mark; all placeholders will be replaced
with the quoted value.   For example ...&lt;/p&gt;

&lt;p&gt;{{code: php
    $sql = Solar::factory('Solar_Sql');&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$list = array(
     "WHERE date &amp;gt; ?"   =&amp;gt; '2005-01-01',
     "  AND date &amp;lt; ?"   =&amp;gt; '2005-02-01',
     "  AND type IN(?)" =&amp;gt; array('a', 'b', 'c'),
);
$safe = $sql-&amp;gt;quoteMulti($list);

// $safe = "WHERE date &amp;gt; '2005-01-02'
//          AND date &amp;lt; 2005-02-01
//          AND type IN('a','b','c')"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}}&lt;/p&gt;
</long-description>
          <tag line="307" name="param" description="A series of key-value pairs where the key is the placeholder text and the value is the value to be quoted into it. If the key is an integer, it is assumed that the value is piece of literal text to be used and not quoted." type="array" variable="$list">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="307" name="param" description="Return the list pieces separated with this string (for example ' AND '), default null." type="string" variable="$sep">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="307" name="return" description="An SQL-safe string composed of the list keys and quoted values." type="string">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
        </docblock>
        <argument line="341">
          <name>$list</name>
          <default/>
          <type/>
        </argument>
        <argument line="341">
          <name>$sep</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="382" package="Default">
        <name>quoteName</name>
        <docblock>
          <description>Quotes a single identifier name (table, table alias, table column,
index, sequence).  Ignores empty values.</description>
          <long-description>&lt;p&gt;If the name contains ' AS ', this method will separately quote the
parts before and after the ' AS '.&lt;/p&gt;

&lt;p&gt;If the name contains a space, this method will separately quote the
parts before and after the space.&lt;/p&gt;

&lt;p&gt;If the name contains a dot, this method will separately quote the
parts before and after the dot.&lt;/p&gt;
</long-description>
          <tag line="360" name="param" description="The identifier name to quote. If an array, quotes each element in the array as an identifier name." type="string|array" variable="$spec">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="360" name="return" description="The quoted identifier name (or array of names)." type="string|array">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="360" name="see" description="\Aura\Sql\Connection\replaceName()" refers="\Aura\Sql\Connection\replaceName()"/>
        </docblock>
        <argument line="382">
          <name>$spec</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="446" package="Default">
        <name>quoteNamesIn</name>
        <docblock>
          <description>Quotes all fully-qualified identifier names ("table.col") in a string,
typically an SQL snippet for a SELECT clause.</description>
          <long-description>&lt;p&gt;Does not quote identifier names that are string literals (i.e., inside
single or double quotes).&lt;/p&gt;

&lt;p&gt;Looks for a trailing ' AS alias' and quotes the alias as well.&lt;/p&gt;
</long-description>
          <tag line="427" name="param" description="The string in which to quote fully-qualified identifier names to quote. If an array, quotes names in each element in the array." type="string|array" variable="$spec">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="427" name="return" description="The string (or array) with names quoted in it." type="string|array">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="427" name="see" description="\Aura\Sql\Connection\replaceNamesIn()" refers="\Aura\Sql\Connection\replaceNamesIn()"/>
        </docblock>
        <argument line="446">
          <name>$spec</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="521" package="Default">
        <name>lastInsertId</name>
        <docblock>
          <description>Get the last auto-incremented insert ID from the database.</description>
          <long-description>
</long-description>
          <tag line="510" name="param" description="The table name on which the auto-increment occurred." type="string" variable="$table">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="510" name="param" description="The name of the auto-increment column." type="string" variable="$col">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="510" name="return" description="The last auto-increment ID value inserted to the database." type="int">
            <type by_reference="false">\Aura\Sql\Connection\int</type>
          </tag>
        </docblock>
        <argument line="521">
          <name>$table</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="521">
          <name>$col</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="539" package="Default">
        <name>insert</name>
        <docblock>
          <description>Inserts a row of data into a table.</description>
          <long-description>
</long-description>
          <tag line="527" name="param" description="The table to insert data into." type="string" variable="$table">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="527" name="param" description="An associative array where the key is the column name and the value is the value to insert for that column." type="array" variable="$data">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="527" name="return" description="The number of rows affected, typically 1." type="int">
            <type by_reference="false">\Aura\Sql\Connection\int</type>
          </tag>
        </docblock>
        <argument line="539">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="539">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="580" package="Default">
        <name>update</name>
        <docblock>
          <description>Updates a table with specified data based on a WHERE clause.</description>
          <long-description>
</long-description>
          <tag line="565" name="param" description="The table to udpate." type="string" variable="$table">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="565" name="param" description="An associative array where the key is the column name and the value is the value to use for that column." type="array" variable="$data">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="565" name="param" description="The SQL WHERE clause to limit which rows are updated." type="string|array" variable="$where">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="565" name="return" description="The number of rows affected." type="int">
            <type by_reference="false">\Aura\Sql\Connection\int</type>
          </tag>
        </docblock>
        <argument line="580">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="580">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
        <argument line="580">
          <name>$where</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="617" package="Default">
        <name>delete</name>
        <docblock>
          <description>Deletes rows from the table based on a WHERE clause.</description>
          <long-description>
</long-description>
          <tag line="605" name="param" description="The table to delete from." type="string" variable="$table">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="605" name="param" description="The SQL WHERE clause to limit which rows are deleted." type="string|array" variable="$where">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="605" name="return" description="The number of rows affected." type="int">
            <type by_reference="false">\Aura\Sql\Connection\int</type>
          </tag>
        </docblock>
        <argument line="617">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="617">
          <name>$where</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="643" package="Default">
        <name>bind</name>
        <docblock>
          <description>Binds an array of scalars as values into a prepared PDOStatment.</description>
          <long-description>&lt;p&gt;Array element values that are themselves arrays will not be bound
correctly, because PDO expects scalar values only.&lt;/p&gt;
</long-description>
          <tag line="629" name="param" description="The prepared PDOStatement." type="\Aura\Sql\Connection\PDOStatement" variable="$stmt">
            <type by_reference="false">\Aura\Sql\Connection\PDOStatement</type>
          </tag>
          <tag line="629" name="param" description="The scalar values to bind into the PDOStatement." type="array" variable="$data">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="629" name="return" description="" type="void">
            <type by_reference="false">\Aura\Sql\Connection\void</type>
          </tag>
        </docblock>
        <argument line="643">
          <name>$stmt</name>
          <default/>
          <type/>
        </argument>
        <argument line="643">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="700" package="Default">
        <name>replaceName</name>
        <docblock>
          <description>Quotes an identifier name (table, index, etc); ignores empty values and
values of '*'.</description>
          <long-description>
</long-description>
          <tag line="688" name="param" description="The identifier name to quote." type="string" variable="$name">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="688" name="return" description="The quoted identifier name." type="string">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="688" name="see" description="\Aura\Sql\Connection\quoteName()" refers="\Aura\Sql\Connection\quoteName()"/>
        </docblock>
        <argument line="700">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="725" package="Default">
        <name>replaceNamesIn</name>
        <docblock>
          <description>Quotes all fully-qualified identifier names ("table.col") in a string.</description>
          <long-description>
</long-description>
          <tag line="712" name="param" description="The string in which to quote fully-qualified identifier names to quote. If an array, quotes names in each element in the array." type="string|array" variable="$text">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="712" name="return" description="The string (or array) with names quoted in it." type="string|array">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
          <tag line="712" name="see" description="\Aura\Sql\Connection\quoteNamesIn()" refers="\Aura\Sql\Connection\quoteNamesIn()"/>
        </docblock>
        <argument line="725">
          <name>$text</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="747" package="Default">
        <name>convertSelect</name>
        <argument line="747">
          <name>$select</name>
          <default/>
          <type>Select</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="775" package="Default">
        <name>getTypeSizeScope</name>
        <docblock>
          <description>Given a column specification, parse into datatype, size, and
decimal scope.</description>
          <long-description>
</long-description>
          <tag line="764" name="param" description="The column specification; for example, &quot;VARCHAR(255)&quot; or &quot;NUMERIC(10,2)&quot;." type="string" variable="$spec">
            <type by_reference="false">\Aura\Sql\Connection\string</type>
          </tag>
          <tag line="764" name="return" description="A sequential array of the column type, size, and scope." type="array">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
        </docblock>
        <argument line="775">
          <name>$spec</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" line="813" package="Default">
        <name>fetchTableList</name>
        <docblock>
          <description>Returns a list of database tables.</description>
          <long-description>
</long-description>
          <tag line="806" name="return" description="The list of tables in the database." type="array">
            <type by_reference="false">\Aura\Sql\Connection\array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" line="815" package="Default">
        <name>fetchTableCols</name>
        <argument line="815">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Sql/Connection/SqlsrvDenali.php" hash="dbd3f2c9fac8a15a998d8b3720b8fe06" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Sql/Connection/SqlsrvDenali.php</error>
      <error line="4">No DocBlock was found for Class SqlsrvDenali</error>
      <error line="9">No DocBlock was found for Method convertSelectStrategy</error>
    </parse_markers>
    <namespace-alias name="Select">Aura\Sql\Select</namespace-alias>
    <class final="false" abstract="false" line="4" namespace="Aura\Sql\Connection" package="Default">
      <name>SqlsrvDenali</name>
      <extends>\Aura\Sql\Connection\Sqlsrv</extends>
      <full_name>\Aura\Sql\Connection\SqlsrvDenali</full_name>
      <method final="false" abstract="false" static="false" visibility="protected" line="9" package="Default">
        <name>convertSelectStrategy</name>
        <argument line="9">
          <name>$select</name>
          <default/>
          <type>Select</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Sql/Connection/Mysql.php" hash="9b697ff1e7f613373cc62ad07b6ecaab" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Sql/Connection/Mysql.php</error>
      <error line="4">No DocBlock was found for Class Mysql</error>
      <error line="6">No DocBlock was found for Property $dsn_prefix</error>
      <error line="8">No DocBlock was found for Property $dsn</error>
      <error line="16">No DocBlock was found for Property $ident_quote_prefix</error>
      <error line="18">No DocBlock was found for Property $ident_quote_suffix</error>
      <error line="20">No DocBlock was found for Method fetchTableList</error>
      <error line="29">No DocBlock was found for Method fetchTableCols</error>
    </parse_markers>
    <namespace-alias name="Select">Aura\Sql\Select</namespace-alias>
    <class final="false" abstract="false" line="4" namespace="Aura\Sql\Connection" package="Default">
      <name>Mysql</name>
      <extends>\Aura\Sql\Connection\AbstractConnection</extends>
      <full_name>\Aura\Sql\Connection\Mysql</full_name>
      <property final="false" static="false" visibility="protected" line="6" package="Default">
        <name>$dsn_prefix</name>
        <default>'mysql'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="8" package="Default">
        <name>$dsn</name>
        <default>array(
        'host' =&gt; null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="16" package="Default">
        <name>$ident_quote_prefix</name>
        <default>'`'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="18" package="Default">
        <name>$ident_quote_suffix</name>
        <default>'`'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="20" package="Default">
        <name>fetchTableList</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="29" package="Default">
        <name>fetchTableCols</name>
        <argument line="29">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Sql/ConnectionManager.php" hash="ac9432d7971234796f0b7eede81b90d6" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Sql/ConnectionManager.php</error>
      <error line="6">No DocBlock was found for Class ConnectionManager</error>
      <error line="8">No DocBlock was found for Property $default</error>
      <error line="16">No DocBlock was found for Property $masters</error>
      <error line="18">No DocBlock was found for Property $slaves</error>
      <error line="20">No DocBlock was found for Property $factory</error>
      <error line="22">No DocBlock was found for Property $conn</error>
      <error line="28">No DocBlock was found for Method __construct</error>
      <error line="41">No DocBlock was found for Method getRead</error>
      <error line="53">No DocBlock was found for Method getWrite</error>
      <error line="63">No DocBlock was found for Method getDefault</error>
      <error line="73">No DocBlock was found for Method getMaster</error>
      <error line="93">No DocBlock was found for Method getSlave</error>
      <error line="112">No DocBlock was found for Method mergeAdapterParams</error>
      <error line="125">No DocBlock was found for Method merge</error>
    </parse_markers>
    <namespace-alias name="NoSuchMasterException">Aura\Sql\Exception\NoSuchMaster</namespace-alias>
    <namespace-alias name="NoSuchSlaveException">Aura\Sql\Exception\NoSuchSlave</namespace-alias>
    <class final="false" abstract="false" line="6" namespace="Aura\Sql" package="Default">
      <name>ConnectionManager</name>
      <extends/>
      <full_name>\Aura\Sql\ConnectionManager</full_name>
      <property final="false" static="false" visibility="protected" line="8" package="Default">
        <name>$default</name>
        <default>array(
        'adapter'  =&gt; null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="16" package="Default">
        <name>$masters</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="18" package="Default">
        <name>$slaves</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="20" package="Default">
        <name>$factory</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="22" package="Default">
        <name>$conn</name>
        <default>array(
        'default' =&gt; null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="28" package="Default">
        <name>__construct</name>
        <argument line="29">
          <name>$factory</name>
          <default/>
          <type>ConnectionFactory</type>
        </argument>
        <argument line="30">
          <name>$default</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="31">
          <name>$masters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="32">
          <name>$slaves</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="41" package="Default">
        <name>getRead</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="53" package="Default">
        <name>getWrite</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="63" package="Default">
        <name>getDefault</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="73" package="Default">
        <name>getMaster</name>
        <argument line="73">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="93" package="Default">
        <name>getSlave</name>
        <argument line="93">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="112" package="Default">
        <name>mergeAdapterParams</name>
        <argument line="112">
          <name>$override</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="125" package="Default">
        <name>merge</name>
        <argument line="125">
          <name>$baseline</name>
          <default/>
          <type/>
        </argument>
        <argument line="125">
          <name>$override</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Sql/Column.php" hash="c150f12f332a753c9ff76d0b9c43cc61" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Sql/Column.php</error>
      <error line="4">No DocBlock was found for Class Column</error>
      <error line="6">No DocBlock was found for Property $name</error>
      <error line="7">No DocBlock was found for Property $type</error>
      <error line="8">No DocBlock was found for Property $size</error>
      <error line="9">No DocBlock was found for Property $scope</error>
      <error line="10">No DocBlock was found for Property $default</error>
      <error line="11">No DocBlock was found for Property $require</error>
      <error line="12">No DocBlock was found for Property $primary</error>
      <error line="13">No DocBlock was found for Property $autoinc</error>
      <error line="15">No DocBlock was found for Method __get</error>
      <error line="20">No DocBlock was found for Method __set</error>
    </parse_markers>
    <class final="false" abstract="false" line="4" namespace="Aura\Sql" package="Default">
      <name>Column</name>
      <extends/>
      <full_name>\Aura\Sql\Column</full_name>
      <property final="false" static="false" visibility="protected" line="6" package="Default">
        <name>$name</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="7" package="Default">
        <name>$type</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="8" package="Default">
        <name>$size</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="9" package="Default">
        <name>$scope</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="10" package="Default">
        <name>$default</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="11" package="Default">
        <name>$require</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="12" package="Default">
        <name>$primary</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="13" package="Default">
        <name>$autoinc</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="15" package="Default">
        <name>__get</name>
        <argument line="15">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="20" package="Default">
        <name>__set</name>
        <argument line="20">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="20">
          <name>$val</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Sql/Exception.php" hash="994eee077d2e2bbf2e8a750e476be280" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src/Aura/Sql/Exception.php</error>
      <error line="3">No DocBlock was found for Class Exception</error>
    </parse_markers>
    <class final="false" abstract="false" line="3" namespace="Aura\Sql" package="Default">
      <name>Exception</name>
      <extends>\Exception</extends>
      <full_name>\Aura\Sql\Exception</full_name>
    </class>
  </file>
  <package name="Default"/>
  <namespace name="Aura">
    <namespace name="Sql">
      <namespace name="Connection"/>
      <namespace name="Exception"/>
    </namespace>
  </namespace>
  <marker>todo</marker>
  <marker>fixme</marker>
</project>
