<?xml version="1.0"?>
<nodes><node><value>\Aura\Router\MapTest</value><id>db_tests_MapTest.html#\Aura\Router\MapTest</id><type>class</type></node><node><value>\Aura\Router\MapTest::$map</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::$map</id><type>property</type></node><node><value>\Aura\Router\MapTest::setUp()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setUp()</id><type>method</type></node><node><value>\Aura\Router\MapTest::tearDown()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::tearDown()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testAddUnnamedRoute()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testAddUnnamedRoute()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testAddNamedRoute()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testAddNamedRoute()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testAddComplexRoute()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testAddComplexRoute()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testAttachWithoutRoutes()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testAttachWithoutRoutes()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testAttachWithBadRouteSpec()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testAttachWithBadRouteSpec()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testAttachRoutesWithoutPathPrefix()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testAttachRoutesWithoutPathPrefix()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testAttachNamedRoutes()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testAttachNamedRoutes()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testAttachUnnamedLongFormRoutes()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testAttachUnnamedLongFormRoutes()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testAttachNamedRoutesWithPrefixes()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testAttachNamedRoutesWithPrefixes()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testAttachNamedRestRoutesWithPrefixes()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testAttachNamedRestRoutesWithPrefixes()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testGenerate()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testGenerate()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testGenerateWhenMissing()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testGenerateWhenMissing()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testAttachAtConstructionTime()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testAttachAtConstructionTime()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testRunOutOfAttachedRoutesToMatch()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testRunOutOfAttachedRoutesToMatch()</id><type>method</type></node><node><value>\Aura\Router\MapTest::testGetAndSetRoutes()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::testGetAndSetRoutes()</id><type>method</type></node><node><value>\Aura\Router\MapTest::__construct()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::__construct()</id><type>method</type></node><node><value>\Aura\Router\MapTest::toString()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::toString()</id><type>method</type></node><node><value>\Aura\Router\MapTest::count()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::count()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getAnnotations()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getAnnotations()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getName()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getName()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getExpectedException()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getExpectedException()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setExpectedException()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setExpectedException()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setExpectedExceptionFromAnnotation()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setExpectedExceptionFromAnnotation()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setUseErrorHandler()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setUseErrorHandler()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setUseErrorHandlerFromAnnotation()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setUseErrorHandlerFromAnnotation()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setUseOutputBuffering()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setUseOutputBuffering()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setUseOutputBufferingFromAnnotation()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setUseOutputBufferingFromAnnotation()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getStatus()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getStatus()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getStatusMessage()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getStatusMessage()</id><type>method</type></node><node><value>\Aura\Router\MapTest::hasFailed()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::hasFailed()</id><type>method</type></node><node><value>\Aura\Router\MapTest::run()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::run()</id><type>method</type></node><node><value>\Aura\Router\MapTest::runBare()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::runBare()</id><type>method</type></node><node><value>\Aura\Router\MapTest::runTest()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::runTest()</id><type>method</type></node><node><value>\Aura\Router\MapTest::verifyMockObjects()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::verifyMockObjects()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setName()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setName()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setDependencies()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setDependencies()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setDependencyInput()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setDependencyInput()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setBackupGlobals()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setBackupGlobals()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setBackupStaticAttributes()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setBackupStaticAttributes()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setRunTestInSeparateProcess()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setRunTestInSeparateProcess()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setPreserveGlobalState()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setPreserveGlobalState()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setInIsolation()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setInIsolation()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getResult()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getResult()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setResult()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setResult()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getTestResultObject()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getTestResultObject()</id><type>method</type></node><node><value>\Aura\Router\MapTest::iniSet()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::iniSet()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setLocale()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setLocale()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getMock()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getMock()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getMockBuilder()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getMockBuilder()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getMockClass()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getMockClass()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getMockForAbstractClass()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getMockForAbstractClass()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getMockFromWsdl()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getMockFromWsdl()</id><type>method</type></node><node><value>\Aura\Router\MapTest::addToAssertionCount()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::addToAssertionCount()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getNumAssertions()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getNumAssertions()</id><type>method</type></node><node><value>\Aura\Router\MapTest::any()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::any()</id><type>method</type></node><node><value>\Aura\Router\MapTest::never()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::never()</id><type>method</type></node><node><value>\Aura\Router\MapTest::atLeastOnce()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::atLeastOnce()</id><type>method</type></node><node><value>\Aura\Router\MapTest::once()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::once()</id><type>method</type></node><node><value>\Aura\Router\MapTest::exactly()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::exactly()</id><type>method</type></node><node><value>\Aura\Router\MapTest::at()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::at()</id><type>method</type></node><node><value>\Aura\Router\MapTest::returnValue()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::returnValue()</id><type>method</type></node><node><value>\Aura\Router\MapTest::returnArgument()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::returnArgument()</id><type>method</type></node><node><value>\Aura\Router\MapTest::returnCallback()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::returnCallback()</id><type>method</type></node><node><value>\Aura\Router\MapTest::throwException()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::throwException()</id><type>method</type></node><node><value>\Aura\Router\MapTest::onConsecutiveCalls()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::onConsecutiveCalls()</id><type>method</type></node><node><value>\Aura\Router\MapTest::dataToString()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::dataToString()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getDataSetAsString()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getDataSetAsString()</id><type>method</type></node><node><value>\Aura\Router\MapTest::createResult()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::createResult()</id><type>method</type></node><node><value>\Aura\Router\MapTest::handleDependencies()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::handleDependencies()</id><type>method</type></node><node><value>\Aura\Router\MapTest::setUpBeforeClass()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::setUpBeforeClass()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertPreConditions()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertPreConditions()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertPostConditions()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertPostConditions()</id><type>method</type></node><node><value>\Aura\Router\MapTest::tearDownAfterClass()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::tearDownAfterClass()</id><type>method</type></node><node><value>\Aura\Router\MapTest::onNotSuccessfulTest()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::onNotSuccessfulTest()</id><type>method</type></node><node><value>\Aura\Router\MapTest::prepareTemplate()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::prepareTemplate()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertArrayHasKey()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertArrayHasKey()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertArrayNotHasKey()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertArrayNotHasKey()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertContains()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertContains()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeContains()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeContains()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertNotContains()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertNotContains()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeNotContains()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeNotContains()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertContainsOnly()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertContainsOnly()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeContainsOnly()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeContainsOnly()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertNotContainsOnly()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeNotContainsOnly()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertEquals()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertEquals()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeEquals()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeEquals()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertNotEquals()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertNotEquals()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeNotEquals()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeNotEquals()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertEmpty()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertEmpty()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeEmpty()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeEmpty()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertNotEmpty()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertNotEmpty()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeNotEmpty()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeNotEmpty()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertGreaterThan()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertGreaterThan()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeGreaterThan()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeGreaterThan()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertGreaterThanOrEqual()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeGreaterThanOrEqual()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertLessThan()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertLessThan()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeLessThan()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeLessThan()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertLessThanOrEqual()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeLessThanOrEqual()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertFileEquals()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertFileEquals()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertFileNotEquals()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertFileNotEquals()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertStringEqualsFile()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertStringEqualsFile()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertStringNotEqualsFile()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertStringNotEqualsFile()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertFileExists()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertFileExists()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertFileNotExists()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertFileNotExists()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertTrue()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertTrue()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertFalse()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertFalse()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertNotNull()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertNotNull()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertNull()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertNull()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertClassHasAttribute()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertClassHasAttribute()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertClassNotHasAttribute()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertClassNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertClassHasStaticAttribute()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertClassHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertClassNotHasStaticAttribute()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertClassNotHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertObjectHasAttribute()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertObjectHasAttribute()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertObjectNotHasAttribute()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertObjectNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertSame()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertSame()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeSame()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeSame()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertNotSame()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertNotSame()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeNotSame()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeNotSame()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertInstanceOf()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertInstanceOf()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeInstanceOf()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeInstanceOf()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertNotInstanceOf()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeNotInstanceOf()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertInternalType()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertInternalType()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeInternalType()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeInternalType()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertNotInternalType()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertNotInternalType()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeNotInternalType()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeNotInternalType()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertType()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertType()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeType()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeType()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertNotType()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertNotType()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertAttributeNotType()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertAttributeNotType()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertRegExp()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertRegExp()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertNotRegExp()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertNotRegExp()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertStringMatchesFormat()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertStringMatchesFormat()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertStringNotMatchesFormat()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertStringNotMatchesFormat()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertStringMatchesFormatFile()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertStringMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertStringNotMatchesFormatFile()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertStringNotMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertStringStartsWith()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertStringStartsWith()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertStringStartsNotWith()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertStringStartsNotWith()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertStringEndsWith()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertStringEndsWith()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertStringEndsNotWith()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertStringEndsNotWith()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertXmlFileEqualsXmlFile()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertXmlFileEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertXmlFileNotEqualsXmlFile()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertXmlFileNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertXmlStringEqualsXmlFile()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertXmlStringEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertXmlStringNotEqualsXmlFile()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertXmlStringNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertXmlStringEqualsXmlString()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertXmlStringEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertXmlStringNotEqualsXmlString()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertXmlStringNotEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertEqualXMLStructure()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertEqualXMLStructure()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertSelectCount()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertSelectCount()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertSelectRegExp()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertSelectRegExp()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertSelectEquals()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertSelectEquals()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertTag()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertTag()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertNotTag()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertNotTag()</id><type>method</type></node><node><value>\Aura\Router\MapTest::assertThat()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::assertThat()</id><type>method</type></node><node><value>\Aura\Router\MapTest::logicalAnd()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::logicalAnd()</id><type>method</type></node><node><value>\Aura\Router\MapTest::logicalOr()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::logicalOr()</id><type>method</type></node><node><value>\Aura\Router\MapTest::logicalNot()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::logicalNot()</id><type>method</type></node><node><value>\Aura\Router\MapTest::logicalXor()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::logicalXor()</id><type>method</type></node><node><value>\Aura\Router\MapTest::anything()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::anything()</id><type>method</type></node><node><value>\Aura\Router\MapTest::isTrue()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::isTrue()</id><type>method</type></node><node><value>\Aura\Router\MapTest::isFalse()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::isFalse()</id><type>method</type></node><node><value>\Aura\Router\MapTest::isNull()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::isNull()</id><type>method</type></node><node><value>\Aura\Router\MapTest::attribute()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::attribute()</id><type>method</type></node><node><value>\Aura\Router\MapTest::contains()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::contains()</id><type>method</type></node><node><value>\Aura\Router\MapTest::containsOnly()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::containsOnly()</id><type>method</type></node><node><value>\Aura\Router\MapTest::arrayHasKey()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::arrayHasKey()</id><type>method</type></node><node><value>\Aura\Router\MapTest::equalTo()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::equalTo()</id><type>method</type></node><node><value>\Aura\Router\MapTest::attributeEqualTo()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::attributeEqualTo()</id><type>method</type></node><node><value>\Aura\Router\MapTest::isEmpty()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::isEmpty()</id><type>method</type></node><node><value>\Aura\Router\MapTest::fileExists()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::fileExists()</id><type>method</type></node><node><value>\Aura\Router\MapTest::greaterThan()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::greaterThan()</id><type>method</type></node><node><value>\Aura\Router\MapTest::greaterThanOrEqual()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::greaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Router\MapTest::classHasAttribute()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::classHasAttribute()</id><type>method</type></node><node><value>\Aura\Router\MapTest::classHasStaticAttribute()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::classHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Router\MapTest::objectHasAttribute()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::objectHasAttribute()</id><type>method</type></node><node><value>\Aura\Router\MapTest::identicalTo()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::identicalTo()</id><type>method</type></node><node><value>\Aura\Router\MapTest::isInstanceOf()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::isInstanceOf()</id><type>method</type></node><node><value>\Aura\Router\MapTest::isType()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::isType()</id><type>method</type></node><node><value>\Aura\Router\MapTest::lessThan()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::lessThan()</id><type>method</type></node><node><value>\Aura\Router\MapTest::lessThanOrEqual()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::lessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Router\MapTest::matchesRegularExpression()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::matchesRegularExpression()</id><type>method</type></node><node><value>\Aura\Router\MapTest::matches()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::matches()</id><type>method</type></node><node><value>\Aura\Router\MapTest::stringStartsWith()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::stringStartsWith()</id><type>method</type></node><node><value>\Aura\Router\MapTest::stringContains()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::stringContains()</id><type>method</type></node><node><value>\Aura\Router\MapTest::stringEndsWith()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::stringEndsWith()</id><type>method</type></node><node><value>\Aura\Router\MapTest::fail()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::fail()</id><type>method</type></node><node><value>\Aura\Router\MapTest::syntheticFail()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::syntheticFail()</id><type>method</type></node><node><value>\Aura\Router\MapTest::readAttribute()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::readAttribute()</id><type>method</type></node><node><value>\Aura\Router\MapTest::markTestIncomplete()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::markTestIncomplete()</id><type>method</type></node><node><value>\Aura\Router\MapTest::markTestSkipped()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::markTestSkipped()</id><type>method</type></node><node><value>\Aura\Router\MapTest::getCount()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::getCount()</id><type>method</type></node><node><value>\Aura\Router\MapTest::resetCount()</value><id>db_tests_MapTest.html#\Aura\Router\MapTest::resetCount()</id><type>method</type></node><node><value>\Aura\Router\RouteTest</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest</id><type>class</type></node><node><value>\Aura\Router\RouteTest::$factory</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::$factory</id><type>property</type></node><node><value>\Aura\Router\RouteTest::setUp()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setUp()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::tearDown()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::tearDown()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::testIsMatchOnStaticPath()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::testIsMatchOnStaticPath()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::testIsMatchOnDynamicPath()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::testIsMatchOnDynamicPath()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::testIsMethodMatch()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::testIsMethodMatch()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::testIsSecureMatch()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::testIsSecureMatch()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::testIsCustomMatchWithClosure()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::testIsCustomMatchWithClosure()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::testIsCustomMatchWithCallback()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::testIsCustomMatchWithCallback()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::callbackForIsMatchTrue()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::callbackForIsMatchTrue()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::callbackForIsMatchFalse()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::callbackForIsMatchFalse()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::testBadSubpattern()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::testBadSubpattern()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::testGenerate()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::testGenerate()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::testGenerateWithClosure()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::testGenerateWithClosure()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::testGenerateWithCallback()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::testGenerateWithCallback()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::callbackForGenerate()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::callbackForGenerate()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::testIsMatchOnDefaultAndInlineSubpatterns()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::testIsMatchOnDefaultAndInlineSubpatterns()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::testIsNotRoutable()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::testIsNotRoutable()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::testGenerateOnFullUri()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::testGenerateOnFullUri()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::__construct()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::__construct()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::toString()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::toString()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::count()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::count()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getAnnotations()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getAnnotations()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getName()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getName()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getExpectedException()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getExpectedException()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setExpectedException()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setExpectedException()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setExpectedExceptionFromAnnotation()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setExpectedExceptionFromAnnotation()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setUseErrorHandler()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setUseErrorHandler()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setUseErrorHandlerFromAnnotation()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setUseErrorHandlerFromAnnotation()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setUseOutputBuffering()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setUseOutputBuffering()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setUseOutputBufferingFromAnnotation()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setUseOutputBufferingFromAnnotation()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getStatus()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getStatus()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getStatusMessage()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getStatusMessage()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::hasFailed()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::hasFailed()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::run()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::run()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::runBare()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::runBare()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::runTest()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::runTest()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::verifyMockObjects()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::verifyMockObjects()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setName()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setName()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setDependencies()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setDependencies()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setDependencyInput()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setDependencyInput()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setBackupGlobals()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setBackupGlobals()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setBackupStaticAttributes()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setBackupStaticAttributes()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setRunTestInSeparateProcess()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setRunTestInSeparateProcess()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setPreserveGlobalState()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setPreserveGlobalState()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setInIsolation()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setInIsolation()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getResult()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getResult()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setResult()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setResult()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getTestResultObject()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getTestResultObject()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::iniSet()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::iniSet()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setLocale()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setLocale()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getMock()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getMock()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getMockBuilder()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getMockBuilder()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getMockClass()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getMockClass()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getMockForAbstractClass()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getMockForAbstractClass()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getMockFromWsdl()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getMockFromWsdl()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::addToAssertionCount()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::addToAssertionCount()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getNumAssertions()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getNumAssertions()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::any()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::any()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::never()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::never()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::atLeastOnce()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::atLeastOnce()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::once()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::once()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::exactly()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::exactly()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::at()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::at()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::returnValue()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::returnValue()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::returnArgument()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::returnArgument()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::returnCallback()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::returnCallback()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::throwException()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::throwException()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::onConsecutiveCalls()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::onConsecutiveCalls()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::dataToString()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::dataToString()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getDataSetAsString()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getDataSetAsString()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::createResult()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::createResult()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::handleDependencies()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::handleDependencies()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::setUpBeforeClass()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::setUpBeforeClass()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertPreConditions()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertPreConditions()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertPostConditions()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertPostConditions()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::tearDownAfterClass()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::tearDownAfterClass()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::onNotSuccessfulTest()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::onNotSuccessfulTest()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::prepareTemplate()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::prepareTemplate()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertArrayHasKey()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertArrayHasKey()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertArrayNotHasKey()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertArrayNotHasKey()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertContains()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertContains()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeContains()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeContains()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertNotContains()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertNotContains()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeNotContains()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeNotContains()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertContainsOnly()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertContainsOnly()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeContainsOnly()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeContainsOnly()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertNotContainsOnly()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeNotContainsOnly()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertEquals()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertEquals()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeEquals()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeEquals()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertNotEquals()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertNotEquals()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeNotEquals()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeNotEquals()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertEmpty()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertEmpty()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeEmpty()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeEmpty()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertNotEmpty()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertNotEmpty()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeNotEmpty()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeNotEmpty()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertGreaterThan()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertGreaterThan()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeGreaterThan()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeGreaterThan()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertGreaterThanOrEqual()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeGreaterThanOrEqual()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertLessThan()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertLessThan()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeLessThan()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeLessThan()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertLessThanOrEqual()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeLessThanOrEqual()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertFileEquals()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertFileEquals()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertFileNotEquals()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertFileNotEquals()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertStringEqualsFile()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertStringEqualsFile()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertStringNotEqualsFile()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertStringNotEqualsFile()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertFileExists()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertFileExists()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertFileNotExists()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertFileNotExists()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertTrue()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertTrue()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertFalse()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertFalse()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertNotNull()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertNotNull()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertNull()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertNull()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertClassHasAttribute()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertClassHasAttribute()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertClassNotHasAttribute()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertClassNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertClassHasStaticAttribute()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertClassHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertClassNotHasStaticAttribute()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertClassNotHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertObjectHasAttribute()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertObjectHasAttribute()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertObjectNotHasAttribute()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertObjectNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertSame()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertSame()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeSame()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeSame()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertNotSame()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertNotSame()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeNotSame()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeNotSame()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertInstanceOf()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertInstanceOf()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeInstanceOf()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeInstanceOf()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertNotInstanceOf()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeNotInstanceOf()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertInternalType()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertInternalType()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeInternalType()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeInternalType()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertNotInternalType()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertNotInternalType()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeNotInternalType()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeNotInternalType()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertType()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertType()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeType()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeType()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertNotType()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertNotType()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertAttributeNotType()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertAttributeNotType()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertRegExp()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertRegExp()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertNotRegExp()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertNotRegExp()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertStringMatchesFormat()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertStringMatchesFormat()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertStringNotMatchesFormat()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertStringNotMatchesFormat()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertStringMatchesFormatFile()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertStringMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertStringNotMatchesFormatFile()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertStringNotMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertStringStartsWith()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertStringStartsWith()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertStringStartsNotWith()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertStringStartsNotWith()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertStringEndsWith()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertStringEndsWith()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertStringEndsNotWith()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertStringEndsNotWith()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertXmlFileEqualsXmlFile()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertXmlFileEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertXmlFileNotEqualsXmlFile()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertXmlFileNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertXmlStringEqualsXmlFile()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertXmlStringEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertXmlStringNotEqualsXmlFile()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertXmlStringNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertXmlStringEqualsXmlString()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertXmlStringEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertXmlStringNotEqualsXmlString()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertXmlStringNotEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertEqualXMLStructure()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertEqualXMLStructure()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertSelectCount()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertSelectCount()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertSelectRegExp()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertSelectRegExp()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertSelectEquals()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertSelectEquals()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertTag()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertTag()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertNotTag()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertNotTag()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::assertThat()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::assertThat()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::logicalAnd()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::logicalAnd()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::logicalOr()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::logicalOr()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::logicalNot()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::logicalNot()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::logicalXor()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::logicalXor()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::anything()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::anything()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::isTrue()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::isTrue()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::isFalse()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::isFalse()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::isNull()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::isNull()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::attribute()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::attribute()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::contains()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::contains()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::containsOnly()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::containsOnly()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::arrayHasKey()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::arrayHasKey()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::equalTo()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::equalTo()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::attributeEqualTo()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::attributeEqualTo()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::isEmpty()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::isEmpty()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::fileExists()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::fileExists()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::greaterThan()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::greaterThan()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::greaterThanOrEqual()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::greaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::classHasAttribute()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::classHasAttribute()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::classHasStaticAttribute()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::classHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::objectHasAttribute()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::objectHasAttribute()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::identicalTo()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::identicalTo()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::isInstanceOf()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::isInstanceOf()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::isType()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::isType()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::lessThan()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::lessThan()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::lessThanOrEqual()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::lessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::matchesRegularExpression()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::matchesRegularExpression()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::matches()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::matches()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::stringStartsWith()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::stringStartsWith()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::stringContains()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::stringContains()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::stringEndsWith()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::stringEndsWith()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::fail()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::fail()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::syntheticFail()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::syntheticFail()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::readAttribute()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::readAttribute()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::markTestIncomplete()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::markTestIncomplete()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::markTestSkipped()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::markTestSkipped()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::getCount()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::getCount()</id><type>method</type></node><node><value>\Aura\Router\RouteTest::resetCount()</value><id>db_tests_RouteTest.html#\Aura\Router\RouteTest::resetCount()</id><type>method</type></node><node><value>\Aura\Router\RouteFactory</value><id>db_src_RouteFactory.html#\Aura\Router\RouteFactory</id><type>class</type></node><node><value>\Aura\Router\RouteFactory::$params</value><id>db_src_RouteFactory.html#\Aura\Router\RouteFactory::$params</id><type>property</type></node><node><value>\Aura\Router\RouteFactory::newInstance()</value><id>db_src_RouteFactory.html#\Aura\Router\RouteFactory::newInstance()</id><type>method</type></node><node><value>\Aura\Router\Route</value><id>db_src_Route.html#\Aura\Router\Route</id><type>class</type></node><node><value>\Aura\Router\Route::$name</value><id>db_src_Route.html#\Aura\Router\Route::$name</id><type>property</type></node><node><value>\Aura\Router\Route::$path</value><id>db_src_Route.html#\Aura\Router\Route::$path</id><type>property</type></node><node><value>\Aura\Router\Route::$params</value><id>db_src_Route.html#\Aura\Router\Route::$params</id><type>property</type></node><node><value>\Aura\Router\Route::$values</value><id>db_src_Route.html#\Aura\Router\Route::$values</id><type>property</type></node><node><value>\Aura\Router\Route::$method</value><id>db_src_Route.html#\Aura\Router\Route::$method</id><type>property</type></node><node><value>\Aura\Router\Route::$secure</value><id>db_src_Route.html#\Aura\Router\Route::$secure</id><type>property</type></node><node><value>\Aura\Router\Route::$is_match</value><id>db_src_Route.html#\Aura\Router\Route::$is_match</id><type>property</type></node><node><value>\Aura\Router\Route::$generate</value><id>db_src_Route.html#\Aura\Router\Route::$generate</id><type>property</type></node><node><value>\Aura\Router\Route::$routable</value><id>db_src_Route.html#\Aura\Router\Route::$routable</id><type>property</type></node><node><value>\Aura\Router\Route::$name_prefix</value><id>db_src_Route.html#\Aura\Router\Route::$name_prefix</id><type>property</type></node><node><value>\Aura\Router\Route::$path_prefix</value><id>db_src_Route.html#\Aura\Router\Route::$path_prefix</id><type>property</type></node><node><value>\Aura\Router\Route::$regex</value><id>db_src_Route.html#\Aura\Router\Route::$regex</id><type>property</type></node><node><value>\Aura\Router\Route::$matches</value><id>db_src_Route.html#\Aura\Router\Route::$matches</id><type>property</type></node><node><value>\Aura\Router\Route::__construct()</value><id>db_src_Route.html#\Aura\Router\Route::__construct()</id><type>method</type></node><node><value>\Aura\Router\Route::__get()</value><id>db_src_Route.html#\Aura\Router\Route::__get()</id><type>method</type></node><node><value>\Aura\Router\Route::isMatch()</value><id>db_src_Route.html#\Aura\Router\Route::isMatch()</id><type>method</type></node><node><value>\Aura\Router\Route::generate()</value><id>db_src_Route.html#\Aura\Router\Route::generate()</id><type>method</type></node><node><value>\Aura\Router\Route::setRegex()</value><id>db_src_Route.html#\Aura\Router\Route::setRegex()</id><type>method</type></node><node><value>\Aura\Router\Route::isMethodMatch()</value><id>db_src_Route.html#\Aura\Router\Route::isMethodMatch()</id><type>method</type></node><node><value>\Aura\Router\Route::isSecureMatch()</value><id>db_src_Route.html#\Aura\Router\Route::isSecureMatch()</id><type>method</type></node><node><value>\Aura\Router\Route::isCustomMatch()</value><id>db_src_Route.html#\Aura\Router\Route::isCustomMatch()</id><type>method</type></node><node><value>\Aura\Router\Map</value><id>db_src_Map.html#\Aura\Router\Map</id><type>class</type></node><node><value>\Aura\Router\Map::$attach_common</value><id>db_src_Map.html#\Aura\Router\Map::$attach_common</id><type>property</type></node><node><value>\Aura\Router\Map::$attach_routes</value><id>db_src_Map.html#\Aura\Router\Map::$attach_routes</id><type>property</type></node><node><value>\Aura\Router\Map::$definitions</value><id>db_src_Map.html#\Aura\Router\Map::$definitions</id><type>property</type></node><node><value>\Aura\Router\Map::$route_factory</value><id>db_src_Map.html#\Aura\Router\Map::$route_factory</id><type>property</type></node><node><value>\Aura\Router\Map::$routes</value><id>db_src_Map.html#\Aura\Router\Map::$routes</id><type>property</type></node><node><value>\Aura\Router\Map::__construct()</value><id>db_src_Map.html#\Aura\Router\Map::__construct()</id><type>method</type></node><node><value>\Aura\Router\Map::add()</value><id>db_src_Map.html#\Aura\Router\Map::add()</id><type>method</type></node><node><value>\Aura\Router\Map::attach()</value><id>db_src_Map.html#\Aura\Router\Map::attach()</id><type>method</type></node><node><value>\Aura\Router\Map::match()</value><id>db_src_Map.html#\Aura\Router\Map::match()</id><type>method</type></node><node><value>\Aura\Router\Map::generate()</value><id>db_src_Map.html#\Aura\Router\Map::generate()</id><type>method</type></node><node><value>\Aura\Router\Map::setRoutes()</value><id>db_src_Map.html#\Aura\Router\Map::setRoutes()</id><type>method</type></node><node><value>\Aura\Router\Map::getRoutes()</value><id>db_src_Map.html#\Aura\Router\Map::getRoutes()</id><type>method</type></node><node><value>\Aura\Router\Map::createNextRoute()</value><id>db_src_Map.html#\Aura\Router\Map::createNextRoute()</id><type>method</type></node><node><value>\Aura\Router\Map::getNextDefinition()</value><id>db_src_Map.html#\Aura\Router\Map::getNextDefinition()</id><type>method</type></node><node><value>\Aura\Router\Map::getNextAttach()</value><id>db_src_Map.html#\Aura\Router\Map::getNextAttach()</id><type>method</type></node><node><value>\Aura\Router\Exception</value><id>db_src_Exception.html#\Aura\Router\Exception</id><type>class</type></node><node><value>\Aura\Router\Exception::__construct()</value><id>db_src_Exception.html#\Aura\Router\Exception::__construct()</id><type>method</type></node><node><value>\Aura\Router\Exception::getMessage()</value><id>db_src_Exception.html#\Aura\Router\Exception::getMessage()</id><type>method</type></node><node><value>\Aura\Router\Exception::getCode()</value><id>db_src_Exception.html#\Aura\Router\Exception::getCode()</id><type>method</type></node><node><value>\Aura\Router\Exception::getFile()</value><id>db_src_Exception.html#\Aura\Router\Exception::getFile()</id><type>method</type></node><node><value>\Aura\Router\Exception::getLine()</value><id>db_src_Exception.html#\Aura\Router\Exception::getLine()</id><type>method</type></node><node><value>\Aura\Router\Exception::getTrace()</value><id>db_src_Exception.html#\Aura\Router\Exception::getTrace()</id><type>method</type></node><node><value>\Aura\Router\Exception::getPrevious()</value><id>db_src_Exception.html#\Aura\Router\Exception::getPrevious()</id><type>method</type></node><node><value>\Aura\Router\Exception::getTraceAsString()</value><id>db_src_Exception.html#\Aura\Router\Exception::getTraceAsString()</id><type>method</type></node><node><value>\Aura\Router\Exception::__toString()</value><id>db_src_Exception.html#\Aura\Router\Exception::__toString()</id><type>method</type></node><node><value>Closure()</value><id>db_config_default.html#::Closure()</id><type>function</type></node></nodes>
