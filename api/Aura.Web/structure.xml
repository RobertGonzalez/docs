<?xml version="1.0"?>
<<<<<<< HEAD
<project version="0.16.0" title="Aura Project for PHP: Aura.Web">
  <file path="src/Aura/Web/Exception/NoMethodForAction.php" hash="1b71fa88dc334b3eb3346bc0c99d8250" package="Default">
    <docblock>
      <description>This file is part of the Aura Project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Web/Exception/NoMethodForAction.php</error>
      <error line="10">No DocBlock was found for Class NoMethodForAction</error>
    </parse_markers>
    <class final="false" abstract="false" line="10" namespace="Aura\Web\Exception" package="Default">
      <name>NoMethodForAction</name>
      <extends>\Aura\Web\Exception</extends>
      <full_name>\Aura\Web\Exception\NoMethodForAction</full_name>
    </class>
  </file>
  <file path="src/Aura/Web/Exception/NoAcceptableLayout.php" hash="fad04d363bcf7383192f13228bf90f85" package="Default">
    <docblock>
      <description>This file is part of the Aura Project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Web/Exception/NoAcceptableLayout.php</error>
      <error line="10">No DocBlock was found for Class NoAcceptableLayout</error>
    </parse_markers>
    <class final="false" abstract="false" line="10" namespace="Aura\Web\Exception" package="Default">
      <name>NoAcceptableLayout</name>
      <extends>\Aura\Web\Exception</extends>
      <full_name>\Aura\Web\Exception\NoAcceptableLayout</full_name>
    </class>
  </file>
  <file path="src/Aura/Web/Exception/MalformedToken.php" hash="dc081c29dcd38cd79d839b20fed4a1be" package="Default">
    <docblock>
      <description>This file is part of the Aura Project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Web/Exception/MalformedToken.php</error>
      <error line="10">No DocBlock was found for Class MalformedToken</error>
      <error line="12">No DocBlock was found for Method __construct</error>
    </parse_markers>
    <class final="false" abstract="false" line="10" namespace="Aura\Web\Exception" package="Default">
      <name>MalformedToken</name>
      <extends>\Aura\Web\Exception</extends>
      <full_name>\Aura\Web\Exception\MalformedToken</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="12" package="Default">
        <name>__construct</name>
      </method>
    </class>
  </file>
  <file path="src/Aura/Web/Exception/NoAcceptableView.php" hash="d68fd117d1a5a6407e5dd85e2c539278" package="Default">
    <docblock>
      <description>This file is part of the Aura Project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Web/Exception/NoAcceptableView.php</error>
      <error line="10">No DocBlock was found for Class NoAcceptableView</error>
    </parse_markers>
    <class final="false" abstract="false" line="10" namespace="Aura\Web\Exception" package="Default">
      <name>NoAcceptableView</name>
      <extends>\Aura\Web\Exception</extends>
      <full_name>\Aura\Web\Exception\NoAcceptableView</full_name>
    </class>
  </file>
  <file path="src/Aura/Web/Exception/Context.php" hash="2f99172e74771cf46b937b409779dd44" package="Default">
    <docblock>
      <description>This file is part of the Aura Project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Web/Exception/Context.php</error>
      <error line="10">No DocBlock was found for Class Context</error>
    </parse_markers>
    <class final="false" abstract="false" line="10" namespace="Aura\Web\Exception" package="Default">
      <name>Context</name>
      <extends>\Aura\Web\Exception</extends>
      <full_name>\Aura\Web\Exception\Context</full_name>
    </class>
  </file>
  <file path="src/Aura/Web/ResponseTransfer.php" hash="aab32fa2228e67b42260a162e05a3438" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Web/ResponseTransfer.php</error>
      <notice line="531">Argument $replace is missing from the function Docblock</notice>
      <notice line="829">Name of argument $spec does not match with function Docblock</notice>
      <notice line="829">Argument $subdir is missing from the function Docblock</notice>
      <notice line="908">Name of argument $spec does not match with function Docblock</notice>
      <notice line="908">Argument $subdir is missing from the function Docblock</notice>
      <error line="926">No DocBlock was found for Method setLayoutContentVar</error>
      <error line="931">No DocBlock was found for Method getLayoutContentVar</error>
      <notice line="1117">Name of argument $value does not match with function Docblock</notice>
    </parse_markers>
    <class final="false" abstract="false" line="19" namespace="Aura\Web" package="Aura\Web">
      <name>ResponseTransfer</name>
      <extends/>
      <full_name>\Aura\Web\ResponseTransfer</full_name>
      <docblock>
        <description>Retains information about the controller results for transfer to an actual
HTTP response object.</description>
        <long-description>
</long-description>
        <tag line="11" name="package" description="Aura.Web"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$cache</name>
        <default>null</default>
        <docblock>
          <description>Should the response disable browser caching?</description>
          <long-description>&lt;p&gt;When &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;getHeaders()&lt;/code&gt; method will set these headers in its
return value (note that they are not added to &lt;code&gt;$headers&lt;/code&gt; directly):&lt;/p&gt;

&lt;p&gt;{{code:
    Pragma: no-cache
    Cache-Control: no-store, no-cache, must-revalidate
    Cache-Control: post-check=0, pre-check=0
    Expires: 1
}}&lt;/p&gt;

&lt;p&gt;When true or null, the &lt;code&gt;getHeaders()&lt;/code&gt; method will make no changes to
the existing headers.&lt;/p&gt;
</long-description>
          <tag line="21" name="var" description="" type="bool">
            <type by_reference="false">\Aura\Web\bool</type>
          </tag>
          <tag line="21" name="see" description="\Aura\Web\setCache()" refers="\Aura\Web\setCache()"/>
          <tag line="21" name="see" description="\Aura\Web\setRedirectAfterPost()" refers="\Aura\Web\setRedirectAfterPost()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" package="Default">
        <name>$content</name>
        <default>null</default>
        <docblock>
          <description>The response body content.</description>
          <long-description>
</long-description>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" package="Default">
        <name>$content_type</name>
        <default/>
        <docblock>
          <description>The Content-Type of the response.</description>
          <long-description>
</long-description>
          <tag line="56" name="var" description="" type="string">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" package="Default">
        <name>$cookies</name>
        <default>array()</default>
        <docblock>
          <description>The response cookies.</description>
          <long-description>
</long-description>
          <tag line="65" name="var" description="" type="array">
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="81" package="Default">
        <name>$cookies_httponly</name>
        <default>true</default>
        <docblock>
          <description>Whether or not cookies should default to being sent by HTTP only.</description>
          <long-description>
</long-description>
          <tag line="74" name="var" description="" type="bool">
            <type by_reference="false">\Aura\Web\bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="90" package="Default">
        <name>$format</name>
        <default/>
        <docblock>
          <description>The filename .format extension used to determine the content-type.</description>
          <long-description>
</long-description>
          <tag line="83" name="var" description="" type="bool">
            <type by_reference="false">\Aura\Web\bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="99" package="Default">
        <name>$headers</name>
        <default>array()</default>
        <docblock>
          <description>The response headers (less the cookies).</description>
          <long-description>
</long-description>
          <tag line="92" name="var" description="" type="array">
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="108" package="Default">
        <name>$redirect</name>
        <default>''</default>
        <docblock>
          <description>Redirect to this location.</description>
          <long-description>
</long-description>
          <tag line="101" name="var" description="" type="string">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="117" package="Default">
        <name>$status_code</name>
        <default>200</default>
        <docblock>
          <description>The response status code.</description>
          <long-description>
</long-description>
          <tag line="110" name="var" description="" type="int">
            <type by_reference="false">\Aura\Web\int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="126" package="Default">
        <name>$status_text</name>
        <default>null</default>
        <docblock>
          <description>The response status text.</description>
          <long-description>
</long-description>
          <tag line="119" name="var" description="" type="int">
            <type by_reference="false">\Aura\Web\int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="135" package="Default">
        <name>$version</name>
        <default>'1.1'</default>
        <docblock>
          <description>The HTTP version to send as.</description>
          <long-description>
</long-description>
          <tag line="128" name="var" description="" type="string">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="144" package="Default">
        <name>$layout</name>
        <default/>
        <docblock>
          <description>The outer layout template for use in a 2-step view.</description>
          <long-description>
</long-description>
          <tag line="137" name="var" description="" type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="153" package="Default">
        <name>$layout_content_var</name>
        <default>'layout_content'</default>
        <docblock>
          <description>The name of the content variable in the layout template.</description>
          <long-description>
</long-description>
          <tag line="146" name="var" description="" type="string">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="162" package="Default">
        <name>$layout_data</name>
        <default/>
        <docblock>
          <description>Data for the layout.</description>
          <long-description>
</long-description>
          <tag line="155" name="var" description="" type="\ArrayObject">
            <type by_reference="false">\ArrayObject</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="171" package="Default">
        <name>$layout_stack</name>
        <default>array()</default>
        <docblock>
          <description>Stack to search for layout templates.</description>
          <long-description>
</long-description>
          <tag line="164" name="var" description="" type="array">
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="180" package="Default">
        <name>$view</name>
        <default/>
        <docblock>
          <description>The inner view template options for use in a 2-step view.</description>
          <long-description>
</long-description>
          <tag line="173" name="var" description="" type="string|array">
            <type by_reference="false">\Aura\Web\string</type>
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="189" package="Default">
        <name>$view_data</name>
        <default/>
        <docblock>
          <description>Data for the view.</description>
          <long-description>
</long-description>
          <tag line="182" name="var" description="" type="\ArrayObject">
            <type by_reference="false">\ArrayObject</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="198" package="Default">
        <name>$view_stack</name>
        <default>array()</default>
        <docblock>
          <description>Stack to search for view templates.</description>
          <long-description>
</long-description>
          <tag line="191" name="var" description="" type="array">
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="207" package="Default">
        <name>$format_type</name>
        <default>array(
        '.aif'      =&gt; 'audio/x-aiff'</default>
        <docblock>
          <description>An array of `.format` extensions to Content-Type mappings.</description>
          <long-description>
</long-description>
          <tag line="200" name="var" description="" type="array">
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="299" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
          <tag line="291" name="param" description="Additional or override `.format` to Content-Type mappings." type="array" variable="$format_type">
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
        </docblock>
        <argument line="299">
          <name>$format_type</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="315" package="Default">
        <name>__get</name>
        <docblock>
          <description>Magic read to provide access to $view_data and $layout_data properties.</description>
          <long-description>
</long-description>
          <tag line="306" name="param" description="The property name." type="string" variable="$key">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="306" name="return" description="The property value." type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
        <argument line="315">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="346" package="Default">
        <name>setCache</name>
        <docblock>
          <description>Should the response disable HTTP caching?</description>
          <long-description>&lt;p&gt;When &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;getHeaders()&lt;/code&gt; method will add these headers:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Pragma: no-cache
Cache-Control: no-store, no-cache, must-revalidate
Cache-Control: post-check=0, pre-check=0
Expires: 1
&lt;/code&gt;&lt;/pre&gt;
</long-description>
          <tag line="328" name="param" description="When true, disable browser caching." type="bool" variable="$flag">
            <type by_reference="false">\Aura\Web\bool</type>
          </tag>
          <tag line="328" name="see" description="\Aura\Web\redirectPost()" refers="\Aura\Web\redirectPost()"/>
          <tag line="328" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
        </docblock>
        <argument line="346">
          <name>$flag</name>
=======
<project version="0.17.2" title="Aura Project for PHP: Aura.Web">
  <file path="src/Aura/Web/AbstractPage.php" hash="2dc345f48d56d945116bf2ae144dd390" package="Default">
    <parse_markers>
      <notice line="99">Argument $response is missing from the function Docblock</notice>
      <notice line="100">Argument $params is missing from the function Docblock</notice>
    </parse_markers>
    <class final="false" abstract="true" line="34" namespace="Aura\Web" package="Aura\Web">
      <name>AbstractPage</name>
      <extends/>
      <full_name>\Aura\Web\AbstractPage</full_name>
      <docblock>
        <description>A page controller.</description>
        <long-description>&lt;p&gt;public function actionBrowse()
     {
         // blah blah blah&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;     // now set the view
     $this-&amp;gt;response-&amp;gt;view = array(
         'text/html' =&amp;gt; 'index',
         // closure always takes one param, the response transfer object
         'application/json' =&amp;gt; function($response) {
             $response-&amp;gt;layout = null;
             return json_encode($response-&amp;gt;view_data-&amp;gt;list);
         },
         'application/xml' =&amp;gt; 'default.xml',
     );
 }
&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="11" name="package" description="Aura.Web"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$action</name>
        <default/>
        <docblock>
          <description>The action to perform, typically discovered from the params.</description>
          <long-description/>
          <tag line="36" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" package="Default">
        <name>$context</name>
        <default/>
        <docblock>
          <description>The context of the request environment.</description>
          <long-description/>
          <tag line="45" name="var" description="" type="\Aura\Web\Context">
            <type by_reference="false">\Aura\Web\Context</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="61" package="Default">
        <name>$data</name>
        <default/>
        <docblock>
          <description>Collection point for data, typically for rendering the page.</description>
          <long-description/>
          <tag line="54" name="var" description="" type="\Aura\Web\StdClass">
            <type by_reference="false">\Aura\Web\StdClass</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="70" package="Default">
        <name>$format</name>
        <default/>
        <docblock>
          <description>The page format to render, typically discovered from the params.</description>
          <long-description/>
          <tag line="63" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="79" package="Default">
        <name>$params</name>
        <default/>
        <docblock>
          <description>Path-info parameters, typically from the route.</description>
          <long-description/>
          <tag line="72" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="88" package="Default">
        <name>$response</name>
        <default/>
        <docblock>
          <description>A data transfer object for the eventual HTTP response.</description>
          <long-description/>
          <tag line="81" name="var" description="" type="\Aura\Web\Response">
            <type by_reference="false">\Aura\Web\Response</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="97" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description/>
          <tag line="90" name="param" description="The request environment." type="\Aura\Web\Context" variable="$context">
            <type by_reference="false">\Aura\Web\Context</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$context</name>
          <default/>
          <type>Context</type>
        </argument>
        <argument line="99">
          <name>$response</name>
          <default/>
          <type>Response</type>
        </argument>
        <argument line="100">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="126" package="Default">
        <name>getAction</name>
        <docblock>
          <description>Returns the action, typically discovered from the params.</description>
          <long-description/>
          <tag line="119" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="138" package="Default">
        <name>getContext</name>
        <docblock>
          <description>Returns the Context object.</description>
          <long-description/>
          <tag line="131" name="return" description="" type="\Aura\Web\Context">
            <type by_reference="false">\Aura\Web\Context</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="150" package="Default">
        <name>getData</name>
        <docblock>
          <description>Returns the data collection object.</description>
          <long-description/>
          <tag line="143" name="return" description="" type="\Aura\Web\StdClass">
            <type by_reference="false">\Aura\Web\StdClass</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="162" package="Default">
        <name>getFormat</name>
        <docblock>
          <description>Returns the page format, typically discovered from the params.</description>
          <long-description/>
          <tag line="155" name="return" description="" type="\Aura\Web\StdClass">
            <type by_reference="false">\Aura\Web\StdClass</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="174" package="Default">
        <name>getParams</name>
        <docblock>
          <description>Returns the params.</description>
          <long-description/>
          <tag line="167" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="186" package="Default">
        <name>getResponse</name>
        <docblock>
          <description>Returns the Response object.</description>
          <long-description/>
          <tag line="179" name="return" description="" type="\Aura\Web\Response">
            <type by_reference="false">\Aura\Web\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="219" package="Default">
        <name>exec</name>
        <docblock>
          <description>Executes the action and pre/post hooks:</description>
          <long-description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;preExec()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;preAction()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;action()&lt;/code&gt; to find and invoke the action method&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;postAction()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;preRender()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;render()&lt;/code&gt; to execute the RenderHandler for this page&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;postRender()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;postExec()&lt;/code&gt; and then returns the Response object&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="196" name="return" description="" type="\Aura\Web\Response">
            <type by_reference="false">\Aura\Web\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="246" package="Default">
        <name>preExec</name>
        <docblock>
          <description>Runs at the beginning of `exec()` before `preAction()`.</description>
          <long-description/>
          <tag line="239" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="257" package="Default">
        <name>preAction</name>
        <docblock>
          <description>Runs after `preExec()` and before `action()`.</description>
          <long-description/>
          <tag line="250" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="268" package="Default">
        <name>action</name>
        <docblock>
          <description>Determines the action method, then invokes it.</description>
          <long-description/>
          <tag line="261" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="286" package="Default">
        <name>invokeMethod</name>
        <docblock>
          <description>Invokes a method by name, matching method params to `$this-&gt;params`.</description>
          <long-description/>
          <tag line="277" name="param" description="The method name to execute, typcially an action." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="277" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="286">
          <name>$name</name>
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
          <default/>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" line="362" package="Default">
        <name>getCache</name>
        <docblock>
          <description>Is caching turned off?</description>
          <long-description>
</long-description>
          <tag line="355" name="return" description="Note that this is a ternary: true, false, or null." type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="376" package="Default">
        <name>setContent</name>
        <docblock>
          <description>Sets the content of the response.</description>
          <long-description>
</long-description>
          <tag line="367" name="param" description="The body content of the response." type="string" variable="$content">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="367" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
        </docblock>
        <argument line="376">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="388" package="Default">
        <name>getContent</name>
        <docblock>
          <description>Gets the content of the response.</description>
          <long-description>
</long-description>
          <tag line="381" name="return" description="The body content of the response." type="string">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="404" package="Default">
        <name>setContentType</name>
        <docblock>
          <description>Sets the Content-Type of the response.</description>
          <long-description>
</long-description>
          <tag line="393" name="param" description="The Content-Type of the response." type="string" variable="$type">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="393" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
          <tag line="393" name="see" description="\Aura\Web\negotiateContentType()" refers="\Aura\Web\negotiateContentType()"/>
        </docblock>
        <argument line="404">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="416" package="Default">
        <name>getContentType</name>
        <docblock>
          <description>Gets the Content-Type of the response.</description>
          <long-description>
</long-description>
          <tag line="409" name="return" description="The Content-Type of the response." type="string">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="447" package="Default">
        <name>setCookie</name>
        <docblock>
          <description>Sets a cookie value in `$cookies`.</description>
          <long-description>
</long-description>
          <tag line="421" name="param" description="The name of the cookie." type="string" variable="$name">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="421" name="param" description="The value of the cookie." type="string" variable="$value">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="421" name="param" description="The Unix timestamp after which the cookie expires. If non-numeric, the method uses strtotime() on the value." type="int|string" variable="$expire">
            <type by_reference="false">\Aura\Web\int</type>
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="421" name="param" description="The path on the server in which the cookie will be available on." type="string" variable="$path">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="421" name="param" description="The domain that the cookie is available on." type="string" variable="$domain">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="421" name="param" description="Indicates that the cookie should only be transmitted over a secure HTTPS connection." type="bool" variable="$secure">
            <type by_reference="false">\Aura\Web\bool</type>
          </tag>
          <tag line="421" name="param" description="When true, the cookie will be made accessible only through the HTTP protocol. This means that the cookie won't be accessible by scripting languages, such as JavaScript." type="bool" variable="$httponly">
            <type by_reference="false">\Aura\Web\bool</type>
          </tag>
          <tag line="421" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
        </docblock>
        <argument line="447">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="447">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="447">
          <name>$expire</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="448">
          <name>$path</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="448">
          <name>$domain</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="448">
          <name>$secure</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="448">
          <name>$httponly</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="469" package="Default">
        <name>getCookie</name>
        <docblock>
          <description>Gets one cookie for the response.</description>
          <long-description>
</long-description>
          <tag line="460" name="param" description="The cookie name." type="string" variable="$name">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="460" name="return" description="A cookie descriptor." type="array">
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
        </docblock>
        <argument line="469">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="496" package="Default">
        <name>getCookies</name>
        <docblock>
          <description>Gets all cookies for the response.</description>
          <long-description>
</long-description>
          <tag line="489" name="return" description="A sequential array of cookie descriptors." type="array">
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="515" package="Default">
        <name>setCookiesHttponly</name>
        <docblock>
          <description>By default, should cookies be sent by HTTP only?</description>
          <long-description>
</long-description>
          <tag line="505" name="param" description="True to send by HTTP only, false to send by any method." type="bool" variable="$flag">
            <type by_reference="false">\Aura\Web\bool</type>
          </tag>
          <tag line="505" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
        </docblock>
        <argument line="515">
          <name>$flag</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="531" package="Default">
        <name>setHeader</name>
        <docblock>
          <description>Sets a header value in `$headers`.</description>
          <long-description>
</long-description>
          <tag line="520" name="param" description="The header label." type="string" variable="$key">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="520" name="param" description="The value for the header." type="string" variable="$val">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="520" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
        </docblock>
        <argument line="531">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="531">
          <name>$val</name>
          <default/>
          <type/>
        </argument>
        <argument line="531">
          <name>$replace</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="549" package="Default">
        <name>addHeader</name>
        <docblock>
          <description>Adds to a header value in $this-&gt;headers.</description>
          <long-description>
</long-description>
          <tag line="538" name="param" description="The header label, such as &quot;Content-Type&quot;." type="string" variable="$key">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="538" name="param" description="The value for the header." type="string" variable="$val">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="538" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
        </docblock>
        <argument line="549">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="549">
          <name>$val</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="568" package="Default">
        <name>getHeader</name>
=======
      <method final="false" abstract="false" static="false" visibility="public" line="309" package="Default">
        <name>postAction</name>
        <docblock>
          <description>Runs after `action()` and before `preRender()`.</description>
          <long-description/>
          <tag line="302" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="320" package="Default">
        <name>preRender</name>
        <docblock>
          <description>Runs after `postAction()` and before `render()`.</description>
          <long-description/>
          <tag line="313" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="331" package="Default">
        <name>render</name>
        <docblock>
          <description>Renders the page into the response object.</description>
          <long-description/>
          <tag line="324" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="342" package="Default">
        <name>postRender</name>
        <docblock>
          <description>Runs after `render()` and before `postExec()`.</description>
          <long-description/>
          <tag line="335" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="353" package="Default">
        <name>postExec</name>
        <docblock>
          <description>Runs at the end of `exec()` after `postRender()`.</description>
          <long-description/>
          <tag line="346" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/Aura/Web/Context.php" hash="ff588e5b0627f84b172149a0dd588998" package="Default">
    <parse_markers>
      <notice line="208">Argument $globals is missing from the function Docblock</notice>
      <notice line="208">Argument $agents is missing from the function Docblock</notice>
      <notice line="612">Name of argument $accept does not match with function Docblock</notice>
    </parse_markers>
    <class final="false" abstract="false" line="18" namespace="Aura\Web" package="Aura\Web">
      <name>Context</name>
      <extends/>
      <full_name>\Aura\Web\Context</full_name>
      <docblock>
        <description>Collection point for information about the web environment.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Web"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="27" package="Default">
        <name>$get</name>
        <default/>
        <docblock>
          <description>Imported $_GET values.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$post</name>
        <default/>
        <docblock>
          <description>Imported $_POST values.</description>
          <long-description/>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$server</name>
        <default/>
        <docblock>
          <description>Imported $_SERVER values.</description>
          <long-description/>
          <tag line="38" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" package="Default">
        <name>$cookie</name>
        <default/>
        <docblock>
          <description>Imported $_COOKIE values.</description>
          <long-description/>
          <tag line="47" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" package="Default">
        <name>$env</name>
        <default/>
        <docblock>
          <description>Imported $_ENV values.</description>
          <long-description/>
          <tag line="56" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" package="Default">
        <name>$files</name>
        <default/>
        <docblock>
          <description>Imported $_FILES values.</description>
          <long-description/>
          <tag line="65" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="84" package="Default">
        <name>$header</name>
        <default/>
        <docblock>
          <description>Imported $_SERVER['HTTP_*'] values.</description>
          <long-description>&lt;p&gt;Header keys are normalized and lower-cased; keys and values are
filtered for control characters.&lt;/p&gt;</long-description>
          <tag line="74" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="94" package="Default">
        <name>$accept</name>
        <default/>
        <docblock>
          <description>The parsed http[accept*] headers with each header sorted
by the quality factor</description>
          <long-description/>
          <tag line="86" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="103" package="Default">
        <name>$raw_input</name>
        <default>false</default>
        <docblock>
          <description>The value of `php://input`.</description>
          <long-description/>
          <tag line="96" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="117" package="Default">
        <name>$agents</name>
        <default>array(
        'mobile'=&gt;array(
            'Android'</default>
        <docblock>
          <description>An array of http user-agents used in matching
mobile browsers and crawlers</description>
          <long-description/>
          <tag line="105" name="see" description="\Aura\Web\isMobile()" refers="\Aura\Web\isMobile()"/>
          <tag line="105" name="see" description="\Aura\Web\isCrawler()" refers="\Aura\Web\isCrawler()"/>
          <tag line="105" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="191" package="Default">
        <name>$is_mobile</name>
        <default/>
        <docblock>
          <description>A property to hold previous calls to isMobile()
so you don't have to loop through $this-&gt;agents['mobile'] again.</description>
          <long-description/>
          <tag line="183" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="201" package="Default">
        <name>$is_crawler</name>
        <default/>
        <docblock>
          <description>A property to hold previous calls to isCrawler()
so you don't have to loop through $this-&gt;agents['crawler'] again.</description>
          <long-description/>
          <tag line="193" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="208" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description/>
        </docblock>
        <argument line="208">
          <name>$globals</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="208">
          <name>$agents</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="235" package="Default">
        <name>__get</name>
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
        <docblock>
          <description>Magic get to make properties read-only.</description>
          <long-description/>
          <tag line="226" name="param" description="The property to read." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="226" name="return" description="The property value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="235">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="255" package="Default">
        <name>isGet</name>
        <docblock>
          <description>Is this a GET request?</description>
          <long-description/>
          <tag line="248" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="267" package="Default">
        <name>isPost</name>
        <docblock>
          <description>Is this a POST request?</description>
          <long-description/>
          <tag line="260" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="279" package="Default">
        <name>isPut</name>
        <docblock>
          <description>Is this a PUT request?</description>
          <long-description/>
          <tag line="272" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="291" package="Default">
        <name>isDelete</name>
        <docblock>
          <description>Is this a DELETE request?</description>
          <long-description/>
          <tag line="284" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="303" package="Default">
        <name>isHead</name>
        <docblock>
          <description>Is this a HEAD request?</description>
          <long-description/>
          <tag line="296" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="315" package="Default">
        <name>isOptions</name>
        <docblock>
          <description>Is this an OPTIONS request?</description>
          <long-description/>
          <tag line="308" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="327" package="Default">
        <name>isXhr</name>
        <docblock>
          <description>Is this an XmlHttpRequest?</description>
          <long-description/>
          <tag line="320" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="339" package="Default">
        <name>isMobile</name>
        <docblock>
          <description>Is this a mobile device?</description>
          <long-description/>
          <tag line="332" name="return" description="False if not mobile, or the matched pattern if it is." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="374" package="Default">
        <name>isCrawler</name>
        <docblock>
          <description>Is this a crawler/bot device?</description>
          <long-description/>
          <tag line="367" name="return" description="False if not a crawler, or the matched pattern if it is." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="409" package="Default">
        <name>isSsl</name>
        <docblock>
          <description>Is this an SSL request?</description>
          <long-description/>
          <tag line="402" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="428" package="Default">
        <name>getQuery</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$get` property,
or an alternate default value if that key does not exist.</description>
          <long-description/>
          <tag line="415" name="param" description="The $get key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="415" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="415" name="return" description="The value of $get[$key], or the alternate default value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="428">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="428">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="446" package="Default">
        <name>getCookie</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$cookie` property,
or an alternate default value if that key does not exist.</description>
          <long-description/>
          <tag line="433" name="param" description="The $cookie key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="433" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="433" name="param" description="The value of $cookie[$key], or the alternate default value." type="bool" variable="">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="446">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="446">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="464" package="Default">
        <name>getEnv</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$env` property,
or an alternate default value if that key does not exist.</description>
          <long-description/>
          <tag line="451" name="param" description="The $env key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="451" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="451" name="return" description="The value of $env[$key], or the alternate default value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="464">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="464">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
    </class>
  </file>
  <file path="src/Aura/Web/Page.php" hash="0898ec3c89ae4890c00ecc88fbb8cc33" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Web/Page.php</error>
      <notice line="81">Argument $response is missing from the function Docblock</notice>
      <notice line="82">Argument $params is missing from the function Docblock</notice>
    </parse_markers>
    <class final="false" abstract="true" line="34" namespace="Aura\Web" package="Aura\Web">
      <name>Page</name>
      <extends/>
      <full_name>\Aura\Web\Page</full_name>
      <docblock>
        <description>A page controller.</description>
        <long-description>&lt;p&gt;public function actionBrowse()
     {
         // blah blah blah&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;     // now set the view
     $this-&amp;gt;response-&amp;gt;view = array(
         'text/html' =&amp;gt; 'index',
         // closure always takes one param, the response transfer object
         'application/json' =&amp;gt; function($response) {
             $response-&amp;gt;layout = null;
             return json_encode($response-&amp;gt;view_data-&amp;gt;list);
         },
         'application/xml' =&amp;gt; 'default.xml',
     );
 }
&lt;/code&gt;&lt;/pre&gt;
</long-description>
        <tag line="11" name="package" description="Aura.Web"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$context</name>
        <default/>
        <docblock>
          <description>The context of the request environment.</description>
          <long-description>
</long-description>
          <tag line="36" name="var" description="" type="\Aura\Web\Context">
            <type by_reference="false">\Aura\Web\Context</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" package="Default">
        <name>$response</name>
        <default/>
        <docblock>
          <description>A data transfer object for the eventual HTTP response.</description>
          <long-description>
</long-description>
          <tag line="45" name="var" description="" type="\Aura\Web\ResponseTransfer">
            <type by_reference="false">\Aura\Web\ResponseTransfer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="61" package="Default">
        <name>$params</name>
        <default/>
        <docblock>
          <description>Path-info parameters, typically from the route.</description>
          <long-description>
</long-description>
          <tag line="54" name="var" description="" type="array">
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="70" package="Default">
        <name>$action</name>
        <default/>
        <docblock>
          <description>The action to perform.</description>
          <long-description>
</long-description>
          <tag line="63" name="var" description="" type="string">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="79" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
          <tag line="72" name="param" description="The request environment." type="\Aura\Web\Context" variable="$context">
            <type by_reference="false">\Aura\Web\Context</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$context</name>
          <default/>
          <type>Context</type>
        </argument>
        <argument line="81">
          <name>$response</name>
          <default/>
          <type>ResponseTransfer</type>
        </argument>
        <argument line="82">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="99" package="Default">
        <name>initAction</name>
        <docblock>
          <description>Initialize the action name from the params.</description>
          <long-description>
</long-description>
          <tag line="92" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="113" package="Default">
        <name>initResponseFormat</name>
        <docblock>
          <description>Initialize the response format.</description>
          <long-description>
</long-description>
          <tag line="106" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="128" package="Default">
        <name>initResponseStacks</name>
        <docblock>
          <description>Initialize the response view and layout stacks.</description>
          <long-description>
</long-description>
          <tag line="121" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="158" package="Default">
        <name>exec</name>
        <docblock>
          <description>Executes the action and pre/post hooks.</description>
          <long-description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;preExec()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;preAction()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;action()&lt;/code&gt; to find the action method to run, and runs it&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;postAction()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;postExec()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</long-description>
          <tag line="141" name="return" description="" type="\Aura\Web\ResponseTransfer">
            <type by_reference="false">\Aura\Web\ResponseTransfer</type>
=======
      <method final="false" abstract="false" static="false" visibility="public" line="482" package="Default">
        <name>getServer</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$server` property,
or an alternate default value if that key does not exist.</description>
          <long-description/>
          <tag line="469" name="param" description="The $server key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="469" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="469" name="return" description="The value of $server[$key], or the alternate default value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="482">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="482">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="508" package="Default">
        <name>getInput</name>
        <docblock>
          <description>Retrieves an **unfiltered** value from a user input.</description>
          <long-description>&lt;p&gt;A value by key from the &lt;code&gt;$post&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; &lt;code&gt;$files&lt;/code&gt; properties, or an
alternate default value if that key does not exist in either location.
Files takes precedence over post.&lt;/p&gt;

&lt;p&gt;If the key is null and the content type isn't &lt;code&gt;multipart/form-data&lt;/code&gt; and
&lt;code&gt;$post&lt;/code&gt; and &lt;code&gt;$files&lt;/code&gt; are empty, the raw data from the request body
is returned.&lt;/p&gt;</long-description>
          <tag line="487" name="param" description="The $post and $files key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="487" name="param" description="The value to return if the key does not exist in either $post or $files." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="487" name="return" description="The value of $post[$key] combined with $files[$key], or the raw request body, or the alternate default value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="508">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="508">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="593" package="Default">
        <name>getHeader</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$header` property,
or an alternate default value if that key does not exist.</description>
          <long-description/>
          <tag line="580" name="param" description="The $http key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="580" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="580" name="return" description="The value of $header[$key], or the alternate default value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="593">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="593">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="612" package="Default">
        <name>parseAccept</name>
        <docblock>
          <description>Parse an HTTP `Accept*` header and sort by the quality factor, the
highest being first in the returned array. The returned data is
unfiltered.</description>
          <long-description/>
          <tag line="599" name="param" description="The name of the accept header to parse." type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="599" name="param" description="The value to return if the key does not exist." type="mixed" variable="$alt">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="599" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="612">
          <name>$accept</name>
          <default/>
          <type/>
        </argument>
        <argument line="612">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="647" package="Default">
        <name>getAccept</name>
        <docblock>
          <description>Gets an `Accept` header.  If you want the content-type, ask for
`'type'`; otherwise, if you want (e.g.) `'Accept-Language'`, ask for
`'language'`.</description>
          <long-description/>
          <tag line="633" name="param" description="The `$accept` key to return; if null, returns the entire `$accept` property." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="633" name="param" description="The value to return if the key does not exist." type="mixed" variable="$alt">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="633" name="return" description="" type="array">
            <type by_reference="false">array</type>
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
          </tag>
        </docblock>
        <argument line="647">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="647">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" line="175" package="Default">
        <name>preExec</name>
        <docblock>
          <description>Runs at the beginning of `exec()` before `preAction()`.</description>
          <long-description>
</long-description>
          <tag line="168" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="186" package="Default">
        <name>preAction</name>
        <docblock>
          <description>Runs after `preExec()` but before `action()`.</description>
          <long-description>
</long-description>
          <tag line="179" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="197" package="Default">
        <name>action</name>
        <docblock>
          <description>Determines the action method, then invokes it.</description>
          <long-description>
</long-description>
          <tag line="190" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="213" package="Default">
        <name>postAction</name>
        <docblock>
          <description>Runs after `action()` but before `postExec()`.</description>
          <long-description>
</long-description>
          <tag line="206" name="return" description="" type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="224" package="Default">
        <name>postExec</name>
        <docblock>
          <description>Runs at the end of `exec()` after `postAction()`.</description>
          <long-description>
</long-description>
          <tag line="217" name="return" description="" type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
=======
      <method final="false" abstract="false" static="false" visibility="protected" line="690" package="Default">
        <name>setHeader</name>
        <docblock>
          <description>Set the "fake" `$header` property.</description>
          <long-description/>
          <tag line="683" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="728" package="Default">
        <name>httpMethodOverride</name>
        <docblock>
          <description>Overrides the REQUEST_METHOD with X-HTTP-Method-Override header or
$_POST value.</description>
          <long-description/>
          <tag line="720" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="765" package="Default">
        <name>rebuildFiles</name>
        <docblock>
          <description>Recursive method to rebuild $_FILES structure to be more like $_POST.</description>
          <long-description/>
          <tag line="752" name="param" description="The source $_FILES array, perhaps from a sub- element of that array/" type="array" variable="$src">
            <type by_reference="false">array</type>
          </tag>
          <tag line="752" name="param" description="&amp;$tgt Where we will store the restructured data when we find it." type="array" variable="$tgt">
            <type by_reference="false">array</type>
          </tag>
          <tag line="752" name="return" description="" type="void">
            <type by_reference="false">void</type>
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
          </tag>
        </docblock>
        <argument line="765">
          <name>$src</name>
          <default/>
          <type/>
        </argument>
        <argument line="765">
          <name>$tgt</name>
          <default/>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="protected" line="237" package="Default">
        <name>invokeMethod</name>
        <docblock>
          <description>Invokes a method by name, matching method params to `$this-&gt;params`.</description>
          <long-description>
</long-description>
          <tag line="228" name="param" description="The method name to execute, typcially an action." type="string" variable="$name">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="228" name="return" description="The return from the executed method." type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
        <argument line="237">
          <name>$name</name>
=======
      <method final="false" abstract="false" static="false" visibility="protected" line="820" package="Default">
        <name>getValue</name>
        <docblock>
          <description>Common method to get a property value and return it.</description>
          <long-description/>
          <tag line="804" name="param" description="The property variable to fetch from: get, post, etc." type="string" variable="$var">
            <type by_reference="false">string</type>
          </tag>
          <tag line="804" name="param" description="The array key, if any, to get the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="804" name="param" description="The alternative default value to return if the requested key does not exist." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="804" name="return" description="The requested value, or the alternative default value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="820">
          <name>$var</name>
          <default/>
          <type/>
        </argument>
        <argument line="820">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="820">
          <name>$alt</name>
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
<<<<<<< HEAD
  <file path="src/Aura/Web/Context.php" hash="ff588e5b0627f84b172149a0dd588998" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Web/Context.php</error>
      <notice line="208">Argument $globals is missing from the function Docblock</notice>
      <notice line="208">Argument $agents is missing from the function Docblock</notice>
      <notice line="612">Name of argument $accept does not match with function Docblock</notice>
=======
  <file path="src/Aura/Web/Exception/Context.php" hash="e0f9cf78a42511379fdcf190e4bc5fe1" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Web\Exception" package="Aura\Web">
      <name>Context</name>
      <extends>\Aura\Web\Exception</extends>
      <full_name>\Aura\Web\Exception\Context</full_name>
      <docblock>
        <description>Context Exception</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Web"/>
      </docblock>
    </class>
  </file>
  <file path="src/Aura/Web/Exception/NoMethodForAction.php" hash="3efd58cf98066dd47bc379011e08e21d" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Web\Exception" package="Aura\Web">
      <name>NoMethodForAction</name>
      <extends>\Aura\Web\Exception</extends>
      <full_name>\Aura\Web\Exception\NoMethodForAction</full_name>
      <docblock>
        <description>No method for action exception</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Web"/>
      </docblock>
    </class>
  </file>
  <file path="src/Aura/Web/Exception.php" hash="436782b65850a2b76669e55a6a1bda60" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Web" package="Aura\Web">
      <name>Exception</name>
      <extends>\Exception</extends>
      <full_name>\Aura\Web\Exception</full_name>
      <docblock>
        <description>Package-specific exception.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Web"/>
      </docblock>
    </class>
  </file>
  <file path="src/Aura/Web/Response.php" hash="d5d3ea8e267a49215252e12745f59a0a" package="Default">
    <parse_markers>
      <notice line="331">Argument $replace is missing from the function Docblock</notice>
      <notice line="594">Name of argument $value does not match with function Docblock</notice>
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
    </parse_markers>
    <class final="false" abstract="false" line="19" namespace="Aura\Web" package="Aura\Web">
      <name>Response</name>
      <extends/>
      <full_name>\Aura\Web\Response</full_name>
      <docblock>
        <description>Retains information about the controller results for transfer to an actual
HTTP response object.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Web"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$cache</name>
        <default>null</default>
        <docblock>
          <description>Should the response disable browser caching?</description>
          <long-description>&lt;p&gt;When &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;getHeaders()&lt;/code&gt; method will set these headers in its
return value (note that they are not added to &lt;code&gt;$headers&lt;/code&gt; directly):&lt;/p&gt;

&lt;p&gt;{{code:
    Pragma: no-cache
    Cache-Control: no-store, no-cache, must-revalidate
    Cache-Control: post-check=0, pre-check=0
    Expires: 1
}}&lt;/p&gt;

&lt;p&gt;When true or null, the &lt;code&gt;getHeaders()&lt;/code&gt; method will make no changes to
the existing headers.&lt;/p&gt;</long-description>
          <tag line="21" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="21" name="see" description="\Aura\Web\setCache()" refers="\Aura\Web\setCache()"/>
          <tag line="21" name="see" description="\Aura\Web\setRedirectAfterPost()" refers="\Aura\Web\setRedirectAfterPost()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" package="Default">
        <name>$content</name>
        <default>null</default>
        <docblock>
          <description>The response body content.</description>
          <long-description/>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" package="Default">
        <name>$content_type</name>
        <default>null</default>
        <docblock>
          <description>The Content-Type of the response.</description>
          <long-description/>
          <tag line="56" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" package="Default">
        <name>$cookies</name>
        <default>array()</default>
        <docblock>
          <description>The response cookies.</description>
          <long-description/>
          <tag line="65" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="81" package="Default">
        <name>$cookies_httponly</name>
        <default>true</default>
        <docblock>
          <description>Whether or not cookies should default to being sent by HTTP only.</description>
          <long-description/>
          <tag line="74" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="90" package="Default">
        <name>$headers</name>
        <default>array()</default>
        <docblock>
          <description>The response headers (less the cookies).</description>
          <long-description/>
          <tag line="83" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
<<<<<<< HEAD
      <property final="false" static="false" visibility="protected" line="117" package="Default">
        <name>$agents</name>
        <default>array(
        'mobile'=&gt;array(
            'Android'</default>
        <docblock>
          <description>An array of http user-agents used in matching
mobile browsers and crawlers</description>
          <long-description>
</long-description>
          <tag line="105" name="see" description="\Aura\Web\isMobile()" refers="\Aura\Web\isMobile()"/>
          <tag line="105" name="see" description="\Aura\Web\isCrawler()" refers="\Aura\Web\isCrawler()"/>
          <tag line="105" name="var" description="" type="array">
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="191" package="Default">
        <name>$is_mobile</name>
        <default/>
        <docblock>
          <description>A property to hold previous calls to isMobile()
so you don't have to loop through $this-&gt;agents['mobile'] again.</description>
          <long-description>
</long-description>
          <tag line="183" name="var" description="" type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="201" package="Default">
        <name>$is_crawler</name>
        <default/>
        <docblock>
          <description>A property to hold previous calls to isCrawler()
so you don't have to loop through $this-&gt;agents['crawler'] again.</description>
          <long-description>
</long-description>
          <tag line="193" name="var" description="" type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="208" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
        </docblock>
        <argument line="208">
          <name>$globals</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="208">
          <name>$agents</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="235" package="Default">
        <name>__get</name>
        <docblock>
          <description>Magic get to make properties read-only.</description>
          <long-description>
</long-description>
          <tag line="226" name="param" description="The property to read." type="string" variable="$key">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="226" name="return" description="The property value." type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
        <argument line="235">
          <name>$key</name>
=======
      <property final="false" static="false" visibility="protected" line="99" package="Default">
        <name>$redirect</name>
        <default>''</default>
        <docblock>
          <description>Redirect to this location.</description>
          <long-description/>
          <tag line="92" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="108" package="Default">
        <name>$status_code</name>
        <default>200</default>
        <docblock>
          <description>The response status code.</description>
          <long-description/>
          <tag line="101" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="117" package="Default">
        <name>$status_text</name>
        <default>null</default>
        <docblock>
          <description>The response status text.</description>
          <long-description/>
          <tag line="110" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="126" package="Default">
        <name>$version</name>
        <default>'1.1'</default>
        <docblock>
          <description>The HTTP version to send as.</description>
          <long-description/>
          <tag line="119" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="146" package="Default">
        <name>setCache</name>
        <docblock>
          <description>Should the response disable HTTP caching?</description>
          <long-description>&lt;p&gt;When &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;getHeaders()&lt;/code&gt; method will add these headers:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Pragma: no-cache
Cache-Control: no-store, no-cache, must-revalidate
Cache-Control: post-check=0, pre-check=0
Expires: 1
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="128" name="param" description="When true, disable browser caching." type="bool" variable="$flag">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="128" name="see" description="\Aura\Web\redirectPost()" refers="\Aura\Web\redirectPost()"/>
          <tag line="128" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$flag</name>
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
          <default/>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" line="255" package="Default">
        <name>isGet</name>
        <docblock>
          <description>Is this a GET request?</description>
          <long-description>
</long-description>
          <tag line="248" name="return" description="" type="boolean">
            <type by_reference="false">\Aura\Web\boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="267" package="Default">
        <name>isPost</name>
        <docblock>
          <description>Is this a POST request?</description>
          <long-description>
</long-description>
          <tag line="260" name="return" description="" type="boolean">
            <type by_reference="false">\Aura\Web\boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="279" package="Default">
        <name>isPut</name>
        <docblock>
          <description>Is this a PUT request?</description>
          <long-description>
</long-description>
          <tag line="272" name="return" description="" type="boolean">
            <type by_reference="false">\Aura\Web\boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="291" package="Default">
        <name>isDelete</name>
        <docblock>
          <description>Is this a DELETE request?</description>
          <long-description>
</long-description>
          <tag line="284" name="return" description="" type="boolean">
            <type by_reference="false">\Aura\Web\boolean</type>
=======
      <method final="false" abstract="false" static="false" visibility="public" line="162" package="Default">
        <name>getCache</name>
        <docblock>
          <description>Is caching turned off?</description>
          <long-description/>
          <tag line="155" name="return" description="Note that this is a ternary: true, false, or null." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="176" package="Default">
        <name>setContent</name>
        <docblock>
          <description>Sets the content of the response.</description>
          <long-description/>
          <tag line="167" name="param" description="The body content of the response." type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="return" description="" type="void">
            <type by_reference="false">void</type>
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
          </tag>
        </docblock>
        <argument line="176">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" line="303" package="Default">
        <name>isHead</name>
        <docblock>
          <description>Is this a HEAD request?</description>
          <long-description>
</long-description>
          <tag line="296" name="return" description="" type="boolean">
            <type by_reference="false">\Aura\Web\boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="315" package="Default">
        <name>isOptions</name>
        <docblock>
          <description>Is this an OPTIONS request?</description>
          <long-description>
</long-description>
          <tag line="308" name="return" description="" type="boolean">
            <type by_reference="false">\Aura\Web\boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="327" package="Default">
        <name>isXhr</name>
        <docblock>
          <description>Is this an XmlHttpRequest?</description>
          <long-description>
</long-description>
          <tag line="320" name="return" description="" type="boolean">
            <type by_reference="false">\Aura\Web\boolean</type>
=======
      <method final="false" abstract="false" static="false" visibility="public" line="188" package="Default">
        <name>getContent</name>
        <docblock>
          <description>Gets the content of the response.</description>
          <long-description/>
          <tag line="181" name="return" description="The body content of the response." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="204" package="Default">
        <name>setContentType</name>
        <docblock>
          <description>Sets the Content-Type of the response.</description>
          <long-description/>
          <tag line="193" name="param" description="The Content-Type of the response." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="return" description="" type="void">
            <type by_reference="false">void</type>
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
          </tag>
          <tag line="193" name="see" description="\Aura\Web\negotiateContentType()" refers="\Aura\Web\negotiateContentType()"/>
        </docblock>
        <argument line="204">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" line="339" package="Default">
        <name>isMobile</name>
        <docblock>
          <description>Is this a mobile device?</description>
          <long-description>
</long-description>
          <tag line="332" name="return" description="False if not mobile, or the matched pattern if it is." type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="374" package="Default">
        <name>isCrawler</name>
        <docblock>
          <description>Is this a crawler/bot device?</description>
          <long-description>
</long-description>
          <tag line="367" name="return" description="False if not a crawler, or the matched pattern if it is." type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="409" package="Default">
        <name>isSsl</name>
        <docblock>
          <description>Is this an SSL request?</description>
          <long-description>
</long-description>
          <tag line="402" name="return" description="" type="boolean">
            <type by_reference="false">\Aura\Web\boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="428" package="Default">
        <name>getQuery</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$get` property,
or an alternate default value if that key does not exist.</description>
          <long-description>
</long-description>
          <tag line="415" name="param" description="The $get key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="415" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="415" name="return" description="The value of $get[$key], or the alternate default value." type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
        <argument line="428">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="428">
          <name>$alt</name>
=======
      <method final="false" abstract="false" static="false" visibility="public" line="216" package="Default">
        <name>getContentType</name>
        <docblock>
          <description>Gets the Content-Type of the response.</description>
          <long-description/>
          <tag line="209" name="return" description="The Content-Type of the response." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="247" package="Default">
        <name>setCookie</name>
        <docblock>
          <description>Sets a cookie value in `$cookies`.</description>
          <long-description/>
          <tag line="221" name="param" description="The name of the cookie." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="param" description="The value of the cookie." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="param" description="The Unix timestamp after which the cookie expires. If non-numeric, the method uses strtotime() on the value." type="int|string" variable="$expire">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="param" description="The path on the server in which the cookie will be available on." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="param" description="The domain that the cookie is available on." type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="param" description="Indicates that the cookie should only be transmitted over a secure HTTPS connection." type="bool" variable="$secure">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="221" name="param" description="When true, the cookie will be made accessible only through the HTTP protocol. This means that the cookie won't be accessible by scripting languages, such as JavaScript." type="bool" variable="$httponly">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="221" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="247">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="247">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="247">
          <name>$expire</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="248">
          <name>$path</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="248">
          <name>$domain</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="248">
          <name>$secure</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="248">
          <name>$httponly</name>
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
          <default>null</default>
          <type/>
        </argument>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="public" line="446" package="Default">
        <name>getCookie</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$cookie` property,
or an alternate default value if that key does not exist.</description>
          <long-description>
</long-description>
          <tag line="433" name="param" description="The $cookie key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="433" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="433" name="param" description="The value of $cookie[$key], or the alternate default value." type="bool" variable="">
            <type by_reference="false">\Aura\Web\bool</type>
          </tag>
        </docblock>
        <argument line="446">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="446">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="464" package="Default">
        <name>getEnv</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$env` property,
or an alternate default value if that key does not exist.</description>
          <long-description>
</long-description>
          <tag line="451" name="param" description="The $env key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="451" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="451" name="return" description="The value of $env[$key], or the alternate default value." type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
        <argument line="464">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="464">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="482" package="Default">
        <name>getServer</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$server` property,
or an alternate default value if that key does not exist.</description>
          <long-description>
</long-description>
          <tag line="469" name="param" description="The $server key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="469" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="469" name="return" description="The value of $server[$key], or the alternate default value." type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
        <argument line="482">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="482">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="508" package="Default">
        <name>getInput</name>
        <docblock>
          <description>Retrieves an **unfiltered** value from a user input.</description>
          <long-description>&lt;p&gt;A value by key from the &lt;code&gt;$post&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; &lt;code&gt;$files&lt;/code&gt; properties, or an
alternate default value if that key does not exist in either location.
Files takes precedence over post.&lt;/p&gt;

&lt;p&gt;If the key is null and the content type isn't &lt;code&gt;multipart/form-data&lt;/code&gt; and
&lt;code&gt;$post&lt;/code&gt; and &lt;code&gt;$files&lt;/code&gt; are empty, the raw data from the request body
is returned.&lt;/p&gt;
</long-description>
          <tag line="487" name="param" description="The $post and $files key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="487" name="param" description="The value to return if the key does not exist in either $post or $files." type="string" variable="$alt">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="487" name="return" description="The value of $post[$key] combined with $files[$key], or the raw request body, or the alternate default value." type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
        <argument line="508">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="508">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="593" package="Default">
        <name>getHeader</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$header` property,
or an alternate default value if that key does not exist.</description>
          <long-description>
</long-description>
          <tag line="580" name="param" description="The $http key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="580" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="580" name="return" description="The value of $header[$key], or the alternate default value." type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
        <argument line="593">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="593">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="612" package="Default">
        <name>parseAccept</name>
        <docblock>
          <description>Parse an HTTP `Accept*` header and sort by the quality factor, the
highest being first in the returned array. The returned data is
unfiltered.</description>
          <long-description>
</long-description>
          <tag line="599" name="param" description="The name of the accept header to parse." type="string" variable="$header">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="599" name="param" description="The value to return if the key does not exist." type="mixed" variable="$alt">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
          <tag line="599" name="return" description="" type="array">
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
        </docblock>
        <argument line="612">
          <name>$accept</name>
          <default/>
          <type/>
        </argument>
        <argument line="612">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="647" package="Default">
        <name>getAccept</name>
        <docblock>
          <description>Gets an `Accept` header.  If you want the content-type, ask for
`'type'`; otherwise, if you want (e.g.) `'Accept-Language'`, ask for
`'language'`.</description>
          <long-description>
</long-description>
          <tag line="633" name="param" description="The `$accept` key to return; if null, returns the entire `$accept` property." type="string" variable="$key">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="633" name="param" description="The value to return if the key does not exist." type="mixed" variable="$alt">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
          <tag line="633" name="return" description="" type="array">
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
        </docblock>
        <argument line="647">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="647">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="690" package="Default">
        <name>setHeader</name>
        <docblock>
          <description>Set the "fake" `$header` property.</description>
          <long-description>
</long-description>
          <tag line="683" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
=======
      <method final="false" abstract="false" static="false" visibility="public" line="269" package="Default">
        <name>getCookie</name>
        <docblock>
          <description>Gets one cookie for the response.</description>
          <long-description/>
          <tag line="260" name="param" description="The cookie name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="260" name="return" description="A cookie descriptor." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="269">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="296" package="Default">
        <name>getCookies</name>
        <docblock>
          <description>Gets all cookies for the response.</description>
          <long-description/>
          <tag line="289" name="return" description="A sequential array of cookie descriptors." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="315" package="Default">
        <name>setCookiesHttponly</name>
        <docblock>
          <description>By default, should cookies be sent by HTTP only?</description>
          <long-description/>
          <tag line="305" name="param" description="True to send by HTTP only, false to send by any method." type="bool" variable="$flag">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="305" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="315">
          <name>$flag</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="331" package="Default">
        <name>setHeader</name>
        <docblock>
          <description>Sets a header value in `$headers`.</description>
          <long-description/>
          <tag line="320" name="param" description="The header label." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="320" name="param" description="The value for the header." type="string" variable="$val">
            <type by_reference="false">string</type>
          </tag>
          <tag line="320" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="331">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="331">
          <name>$val</name>
          <default/>
          <type/>
        </argument>
        <argument line="331">
          <name>$replace</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="349" package="Default">
        <name>addHeader</name>
        <docblock>
          <description>Adds to a header value in $this-&gt;headers.</description>
          <long-description/>
          <tag line="338" name="param" description="The header label, such as &quot;Content-Type&quot;." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="338" name="param" description="The value for the header." type="string" variable="$val">
            <type by_reference="false">string</type>
          </tag>
          <tag line="338" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="349">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="349">
          <name>$val</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="368" package="Default">
        <name>getHeader</name>
        <docblock>
          <description>Returns the value of a single header.</description>
          <long-description/>
          <tag line="357" name="param" description="The header name." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="357" name="return" description="A string if the header has only one value, or an array if the header has multiple values, or null if the header does not exist." type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="368">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="386" package="Default">
        <name>getHeaders</name>
        <docblock>
          <description>Returns the array of all headers to be sent with the response.</description>
          <long-description/>
          <tag line="377" name="return" description="" type="array">
            <type by_reference="false">array</type>
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
          </tag>
          <tag line="377" name="todo" description="Add case for cache === true (hm, or cache === array)."/>
        </docblock>
      </method>
<<<<<<< HEAD
      <method final="false" abstract="false" static="false" visibility="protected" line="728" package="Default">
        <name>httpMethodOverride</name>
        <docblock>
          <description>Overrides the REQUEST_METHOD with X-HTTP-Method-Override header or
$_POST value.</description>
          <long-description>
</long-description>
          <tag line="720" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="765" package="Default">
        <name>rebuildFiles</name>
        <docblock>
          <description>Recursive method to rebuild $_FILES structure to be more like $_POST.</description>
          <long-description>
</long-description>
          <tag line="752" name="param" description="The source $_FILES array, perhaps from a sub- element of that array/" type="array" variable="$src">
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
          <tag line="752" name="param" description="&amp;$tgt Where we will store the restructured data when we find it." type="array" variable="$tgt">
            <type by_reference="false">\Aura\Web\array</type>
          </tag>
          <tag line="752" name="return" description="" type="void">
            <type by_reference="false">\Aura\Web\void</type>
          </tag>
        </docblock>
        <argument line="765">
          <name>$src</name>
          <default/>
          <type/>
        </argument>
        <argument line="765">
          <name>$tgt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="820" package="Default">
        <name>getValue</name>
        <docblock>
          <description>Common method to get a property value and return it.</description>
          <long-description>
</long-description>
          <tag line="804" name="param" description="The property variable to fetch from: get, post, etc." type="string" variable="$var">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="804" name="param" description="The array key, if any, to get the value of." type="string" variable="$key">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="804" name="param" description="The alternative default value to return if the requested key does not exist." type="string" variable="$alt">
            <type by_reference="false">\Aura\Web\string</type>
          </tag>
          <tag line="804" name="return" description="The requested value, or the alternative default value." type="mixed">
            <type by_reference="false">\Aura\Web\mixed</type>
          </tag>
        </docblock>
        <argument line="820">
          <name>$var</name>
          <default/>
          <type/>
        </argument>
        <argument line="820">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="820">
          <name>$alt</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Web/Exception.php" hash="7bf57799f0bc7fc67cd847f0389f51d3" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Web/Exception.php</error>
      <error line="10">No DocBlock was found for Class Exception</error>
    </parse_markers>
    <class final="false" abstract="false" line="10" namespace="Aura\Web" package="Default">
      <name>Exception</name>
      <extends>\Exception</extends>
      <full_name>\Aura\Web\Exception</full_name>
=======
      <method final="false" abstract="false" static="false" visibility="public" line="425" package="Default">
        <name>setRedirect</name>
        <docblock>
          <description>Set a location that the response should redirect to, along with a
a status code and status text.</description>
          <long-description/>
          <tag line="410" name="param" description="The URI to redirect to." type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="410" name="param" description="The HTTP status code to redirect with; default is `302`." type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="410" name="param" description="The HTTP status text; default is `'Found'`." type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="410" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="425">
          <name>$uri</name>
          <default/>
          <type/>
        </argument>
        <argument line="425">
          <name>$code</name>
          <default>'302'</default>
          <type/>
        </argument>
        <argument line="425">
          <name>$text</name>
          <default>'Found'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="447" package="Default">
        <name>setRedirectAfterPost</name>
        <docblock>
          <description>Set a location that the response should redirect to, along with a
a status code and status text, *and* sets caching to false.</description>
          <long-description/>
          <tag line="432" name="param" description="The URI to redirect to." type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="432" name="param" description="The HTTP status code to redirect with; default is `303`." type="int|string" variable="$code">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="432" name="param" description="The HTTP status text; default is `'See Other'`." type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="432" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="447">
          <name>$uri</name>
          <default/>
          <type/>
        </argument>
        <argument line="447">
          <name>$code</name>
          <default>'303'</default>
          <type/>
        </argument>
        <argument line="447">
          <name>$text</name>
          <default>'See Other'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="460" package="Default">
        <name>isRedirect</name>
        <docblock>
          <description>Is the response set to issue a redirect?</description>
          <long-description/>
          <tag line="453" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="472" package="Default">
        <name>getRedirect</name>
        <docblock>
          <description>Returns the redirect location, if any.</description>
          <long-description/>
          <tag line="465" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="486" package="Default">
        <name>setStatusCode</name>
        <docblock>
          <description>Sets the HTTP status code to for the response.</description>
          <long-description>&lt;p&gt;Automatically resets the status text to null.&lt;/p&gt;</long-description>
          <tag line="477" name="param" description="An HTTP status code, such as 200, 302, 404, etc." type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="486">
          <name>$code</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="504" package="Default">
        <name>getStatusCode</name>
        <docblock>
          <description>Returns the HTTP status code for the response.</description>
          <long-description/>
          <tag line="497" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="518" package="Default">
        <name>setStatusText</name>
        <docblock>
          <description>Sets the HTTP status text for the response.</description>
          <long-description/>
          <tag line="509" name="param" description="The status text." type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="509" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="518">
          <name>$text</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="532" package="Default">
        <name>getStatusText</name>
        <docblock>
          <description>Returns the HTTP status text for the response.</description>
          <long-description/>
          <tag line="525" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="546" package="Default">
        <name>setVersion</name>
        <docblock>
          <description>Sets the HTTP version for the response to '1.0' or '1.1'.</description>
          <long-description/>
          <tag line="537" name="param" description="The HTTP version to use for this response." type="string" variable="$version">
            <type by_reference="false">string</type>
          </tag>
          <tag line="537" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="546">
          <name>$version</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="563" package="Default">
        <name>getVersion</name>
        <docblock>
          <description>Returns the HTTP version for the response.</description>
          <long-description/>
          <tag line="556" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="577" package="Default">
        <name>headerLabel</name>
        <docblock>
          <description>Normalizes and sanitizes a header label.</description>
          <long-description/>
          <tag line="568" name="param" description="The header label to be sanitized." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="568" name="return" description="The sanitized header label." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="577">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="594" package="Default">
        <name>headerValue</name>
        <docblock>
          <description>Sanitizes a header value.</description>
          <long-description/>
          <tag line="585" name="param" description="The header value to be sanitized." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="585" name="return" description="The sanitized header value." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="594">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
>>>>>>> fa8a0514a038bbcbc2d5b9b4b2049b2763773a05
    </class>
  </file>
  <package name="Aura">
    <package name="Web"/>
  </package>
  <package name="Default"/>
  <namespace name="Aura">
    <namespace name="Web">
      <namespace name="Exception"/>
    </namespace>
  </namespace>
  <marker>todo</marker>
  <marker>fixme</marker>
</project>
