<?xml version="1.0"?>
<nodes><node><value>\Aura\Signal\ResultTest</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest</id><type>class</type></node><node><value>\Aura\Signal\ResultTest::$factory</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::$factory</id><type>property</type></node><node><value>\Aura\Signal\ResultTest::setUp()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setUp()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::tearDown()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::tearDown()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::testResult()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::testResult()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::__construct()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::__construct()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::toString()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::toString()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::count()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::count()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getAnnotations()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getAnnotations()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getName()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getName()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getExpectedException()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getExpectedException()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setExpectedException()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setExpectedException()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setExpectedExceptionFromAnnotation()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setExpectedExceptionFromAnnotation()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setUseErrorHandler()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setUseErrorHandler()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setUseErrorHandlerFromAnnotation()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setUseErrorHandlerFromAnnotation()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setUseOutputBuffering()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setUseOutputBuffering()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setUseOutputBufferingFromAnnotation()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setUseOutputBufferingFromAnnotation()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getStatus()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getStatus()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getStatusMessage()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getStatusMessage()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::hasFailed()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::hasFailed()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::run()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::run()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::runBare()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::runBare()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::runTest()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::runTest()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::verifyMockObjects()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::verifyMockObjects()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setName()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setName()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setDependencies()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setDependencies()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setDependencyInput()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setDependencyInput()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setBackupGlobals()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setBackupGlobals()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setBackupStaticAttributes()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setBackupStaticAttributes()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setRunTestInSeparateProcess()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setRunTestInSeparateProcess()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setPreserveGlobalState()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setPreserveGlobalState()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setInIsolation()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setInIsolation()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getResult()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getResult()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setResult()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setResult()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getTestResultObject()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getTestResultObject()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::iniSet()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::iniSet()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setLocale()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setLocale()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getMock()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getMock()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getMockBuilder()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getMockBuilder()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getMockClass()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getMockClass()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getMockForAbstractClass()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getMockForAbstractClass()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getMockFromWsdl()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getMockFromWsdl()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::addToAssertionCount()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::addToAssertionCount()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getNumAssertions()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getNumAssertions()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::any()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::any()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::never()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::never()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::atLeastOnce()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::atLeastOnce()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::once()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::once()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::exactly()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::exactly()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::at()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::at()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::returnValue()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::returnValue()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::returnArgument()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::returnArgument()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::returnCallback()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::returnCallback()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::throwException()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::throwException()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::onConsecutiveCalls()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::onConsecutiveCalls()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::dataToString()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::dataToString()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getDataSetAsString()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getDataSetAsString()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::createResult()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::createResult()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::handleDependencies()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::handleDependencies()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::setUpBeforeClass()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::setUpBeforeClass()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertPreConditions()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertPreConditions()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertPostConditions()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertPostConditions()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::tearDownAfterClass()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::tearDownAfterClass()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::onNotSuccessfulTest()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::onNotSuccessfulTest()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::prepareTemplate()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::prepareTemplate()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertArrayHasKey()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertArrayHasKey()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertArrayNotHasKey()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertArrayNotHasKey()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertContains()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertContains()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeContains()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeContains()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertNotContains()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertNotContains()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeNotContains()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeNotContains()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertContainsOnly()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeContainsOnly()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertNotContainsOnly()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeNotContainsOnly()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertEquals()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertEquals()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeEquals()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeEquals()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertNotEquals()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertNotEquals()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeNotEquals()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeNotEquals()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertEmpty()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeEmpty()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertNotEmpty()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertNotEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeNotEmpty()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeNotEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertGreaterThan()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertGreaterThan()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeGreaterThan()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeGreaterThan()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertGreaterThanOrEqual()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeGreaterThanOrEqual()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertLessThan()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertLessThan()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeLessThan()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeLessThan()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertLessThanOrEqual()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeLessThanOrEqual()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertFileEquals()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertFileEquals()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertFileNotEquals()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertFileNotEquals()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertStringEqualsFile()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertStringEqualsFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertStringNotEqualsFile()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertStringNotEqualsFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertFileExists()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertFileExists()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertFileNotExists()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertFileNotExists()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertTrue()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertTrue()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertFalse()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertFalse()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertNotNull()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertNotNull()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertNull()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertNull()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertClassHasAttribute()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertClassHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertClassNotHasAttribute()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertClassNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertClassHasStaticAttribute()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertClassHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertClassNotHasStaticAttribute()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertClassNotHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertObjectHasAttribute()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertObjectHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertObjectNotHasAttribute()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertObjectNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertSame()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertSame()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeSame()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeSame()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertNotSame()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertNotSame()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeNotSame()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeNotSame()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertInstanceOf()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeInstanceOf()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertNotInstanceOf()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeNotInstanceOf()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertInternalType()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertInternalType()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeInternalType()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeInternalType()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertNotInternalType()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertNotInternalType()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeNotInternalType()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeNotInternalType()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertType()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertType()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeType()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeType()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertNotType()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertNotType()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertAttributeNotType()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertAttributeNotType()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertRegExp()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertRegExp()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertNotRegExp()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertNotRegExp()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertStringMatchesFormat()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertStringMatchesFormat()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertStringNotMatchesFormat()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertStringNotMatchesFormat()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertStringMatchesFormatFile()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertStringMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertStringNotMatchesFormatFile()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertStringNotMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertStringStartsWith()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertStringStartsWith()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertStringStartsNotWith()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertStringStartsNotWith()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertStringEndsWith()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertStringEndsWith()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertStringEndsNotWith()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertStringEndsNotWith()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertXmlFileEqualsXmlFile()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertXmlFileEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertXmlFileNotEqualsXmlFile()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertXmlFileNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertXmlStringEqualsXmlFile()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertXmlStringEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertXmlStringNotEqualsXmlFile()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertXmlStringNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertXmlStringEqualsXmlString()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertXmlStringEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertXmlStringNotEqualsXmlString()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertXmlStringNotEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertEqualXMLStructure()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertEqualXMLStructure()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertSelectCount()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertSelectCount()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertSelectRegExp()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertSelectRegExp()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertSelectEquals()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertSelectEquals()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertTag()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertTag()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertNotTag()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertNotTag()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::assertThat()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::assertThat()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::logicalAnd()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::logicalAnd()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::logicalOr()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::logicalOr()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::logicalNot()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::logicalNot()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::logicalXor()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::logicalXor()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::anything()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::anything()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::isTrue()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::isTrue()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::isFalse()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::isFalse()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::isNull()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::isNull()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::attribute()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::attribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::contains()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::contains()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::containsOnly()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::containsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::arrayHasKey()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::arrayHasKey()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::equalTo()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::equalTo()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::attributeEqualTo()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::attributeEqualTo()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::isEmpty()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::isEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::fileExists()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::fileExists()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::greaterThan()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::greaterThan()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::greaterThanOrEqual()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::greaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::classHasAttribute()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::classHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::classHasStaticAttribute()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::classHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::objectHasAttribute()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::objectHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::identicalTo()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::identicalTo()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::isInstanceOf()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::isInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::isType()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::isType()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::lessThan()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::lessThan()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::lessThanOrEqual()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::lessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::matchesRegularExpression()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::matchesRegularExpression()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::matches()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::matches()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::stringStartsWith()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::stringStartsWith()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::stringContains()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::stringContains()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::stringEndsWith()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::stringEndsWith()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::fail()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::fail()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::syntheticFail()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::syntheticFail()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::readAttribute()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::readAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::markTestIncomplete()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::markTestIncomplete()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::markTestSkipped()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::markTestSkipped()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::getCount()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::getCount()</id><type>method</type></node><node><value>\Aura\Signal\ResultTest::resetCount()</value><id>db_tests_ResultTest.html#\Aura\Signal\ResultTest::resetCount()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest</id><type>class</type></node><node><value>\Aura\Signal\ResultCollectionTest::$collection</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::$collection</id><type>property</type></node><node><value>\Aura\Signal\ResultCollectionTest::$factory</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::$factory</id><type>property</type></node><node><value>\Aura\Signal\ResultCollectionTest::setUp()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setUp()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::newCollection()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::newCollection()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::tearDown()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::tearDown()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::testGetLast()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::testGetLast()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::testIsStopped()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::testIsStopped()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::__construct()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::__construct()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::toString()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::toString()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::count()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::count()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getAnnotations()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getAnnotations()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getName()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getName()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getExpectedException()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getExpectedException()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setExpectedException()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setExpectedException()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setExpectedExceptionFromAnnotation()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setExpectedExceptionFromAnnotation()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setUseErrorHandler()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setUseErrorHandler()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setUseErrorHandlerFromAnnotation()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setUseErrorHandlerFromAnnotation()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setUseOutputBuffering()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setUseOutputBuffering()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setUseOutputBufferingFromAnnotation()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setUseOutputBufferingFromAnnotation()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getStatus()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getStatus()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getStatusMessage()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getStatusMessage()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::hasFailed()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::hasFailed()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::run()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::run()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::runBare()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::runBare()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::runTest()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::runTest()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::verifyMockObjects()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::verifyMockObjects()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setName()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setName()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setDependencies()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setDependencies()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setDependencyInput()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setDependencyInput()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setBackupGlobals()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setBackupGlobals()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setBackupStaticAttributes()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setBackupStaticAttributes()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setRunTestInSeparateProcess()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setRunTestInSeparateProcess()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setPreserveGlobalState()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setPreserveGlobalState()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setInIsolation()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setInIsolation()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getResult()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getResult()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setResult()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setResult()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getTestResultObject()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getTestResultObject()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::iniSet()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::iniSet()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setLocale()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setLocale()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getMock()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getMock()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getMockBuilder()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getMockBuilder()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getMockClass()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getMockClass()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getMockForAbstractClass()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getMockForAbstractClass()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getMockFromWsdl()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getMockFromWsdl()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::addToAssertionCount()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::addToAssertionCount()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getNumAssertions()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getNumAssertions()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::any()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::any()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::never()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::never()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::atLeastOnce()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::atLeastOnce()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::once()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::once()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::exactly()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::exactly()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::at()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::at()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::returnValue()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::returnValue()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::returnArgument()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::returnArgument()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::returnCallback()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::returnCallback()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::throwException()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::throwException()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::onConsecutiveCalls()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::onConsecutiveCalls()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::dataToString()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::dataToString()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getDataSetAsString()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getDataSetAsString()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::createResult()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::createResult()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::handleDependencies()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::handleDependencies()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::setUpBeforeClass()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::setUpBeforeClass()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertPreConditions()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertPreConditions()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertPostConditions()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertPostConditions()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::tearDownAfterClass()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::tearDownAfterClass()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::onNotSuccessfulTest()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::onNotSuccessfulTest()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::prepareTemplate()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::prepareTemplate()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertArrayHasKey()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertArrayHasKey()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertArrayNotHasKey()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertArrayNotHasKey()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertContains()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertContains()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeContains()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeContains()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertNotContains()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertNotContains()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeNotContains()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeNotContains()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertContainsOnly()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeContainsOnly()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertNotContainsOnly()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeNotContainsOnly()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertEquals()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertEquals()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeEquals()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeEquals()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertNotEquals()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertNotEquals()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeNotEquals()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeNotEquals()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertEmpty()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeEmpty()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertNotEmpty()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertNotEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeNotEmpty()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeNotEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertGreaterThan()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertGreaterThan()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeGreaterThan()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeGreaterThan()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertGreaterThanOrEqual()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeGreaterThanOrEqual()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertLessThan()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertLessThan()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeLessThan()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeLessThan()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertLessThanOrEqual()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeLessThanOrEqual()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertFileEquals()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertFileEquals()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertFileNotEquals()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertFileNotEquals()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertStringEqualsFile()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertStringEqualsFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertStringNotEqualsFile()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertStringNotEqualsFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertFileExists()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertFileExists()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertFileNotExists()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertFileNotExists()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertTrue()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertTrue()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertFalse()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertFalse()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertNotNull()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertNotNull()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertNull()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertNull()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertClassHasAttribute()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertClassHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertClassNotHasAttribute()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertClassNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertClassHasStaticAttribute()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertClassHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertClassNotHasStaticAttribute()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertClassNotHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertObjectHasAttribute()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertObjectHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertObjectNotHasAttribute()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertObjectNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertSame()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertSame()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeSame()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeSame()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertNotSame()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertNotSame()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeNotSame()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeNotSame()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertInstanceOf()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeInstanceOf()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertNotInstanceOf()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeNotInstanceOf()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertInternalType()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertInternalType()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeInternalType()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeInternalType()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertNotInternalType()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertNotInternalType()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeNotInternalType()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeNotInternalType()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertType()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertType()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeType()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeType()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertNotType()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertNotType()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertAttributeNotType()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertAttributeNotType()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertRegExp()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertRegExp()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertNotRegExp()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertNotRegExp()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertStringMatchesFormat()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertStringMatchesFormat()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertStringNotMatchesFormat()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertStringNotMatchesFormat()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertStringMatchesFormatFile()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertStringMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertStringNotMatchesFormatFile()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertStringNotMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertStringStartsWith()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertStringStartsWith()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertStringStartsNotWith()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertStringStartsNotWith()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertStringEndsWith()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertStringEndsWith()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertStringEndsNotWith()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertStringEndsNotWith()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertXmlFileEqualsXmlFile()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertXmlFileEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertXmlFileNotEqualsXmlFile()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertXmlFileNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertXmlStringEqualsXmlFile()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertXmlStringEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertXmlStringNotEqualsXmlFile()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertXmlStringNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertXmlStringEqualsXmlString()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertXmlStringEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertXmlStringNotEqualsXmlString()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertXmlStringNotEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertEqualXMLStructure()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertEqualXMLStructure()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertSelectCount()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertSelectCount()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertSelectRegExp()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertSelectRegExp()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertSelectEquals()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertSelectEquals()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertTag()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertTag()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertNotTag()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertNotTag()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::assertThat()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::assertThat()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::logicalAnd()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::logicalAnd()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::logicalOr()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::logicalOr()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::logicalNot()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::logicalNot()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::logicalXor()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::logicalXor()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::anything()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::anything()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::isTrue()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::isTrue()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::isFalse()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::isFalse()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::isNull()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::isNull()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::attribute()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::attribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::contains()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::contains()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::containsOnly()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::containsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::arrayHasKey()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::arrayHasKey()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::equalTo()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::equalTo()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::attributeEqualTo()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::attributeEqualTo()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::isEmpty()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::isEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::fileExists()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::fileExists()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::greaterThan()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::greaterThan()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::greaterThanOrEqual()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::greaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::classHasAttribute()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::classHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::classHasStaticAttribute()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::classHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::objectHasAttribute()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::objectHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::identicalTo()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::identicalTo()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::isInstanceOf()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::isInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::isType()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::isType()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::lessThan()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::lessThan()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::lessThanOrEqual()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::lessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::matchesRegularExpression()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::matchesRegularExpression()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::matches()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::matches()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::stringStartsWith()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::stringStartsWith()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::stringContains()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::stringContains()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::stringEndsWith()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::stringEndsWith()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::fail()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::fail()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::syntheticFail()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::syntheticFail()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::readAttribute()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::readAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::markTestIncomplete()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::markTestIncomplete()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::markTestSkipped()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::markTestSkipped()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::getCount()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::getCount()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollectionTest::resetCount()</value><id>db_tests_ResultCollectionTest.html#\Aura\Signal\ResultCollectionTest::resetCount()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest</id><type>class</type></node><node><value>\Aura\Signal\ManagerTest::setUp()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setUp()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::newManager()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::newManager()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::tearDown()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::tearDown()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::testHandlerAndGetHandlers()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::testHandlerAndGetHandlers()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::testSend()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::testSend()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::__construct()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::__construct()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::toString()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::toString()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::count()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::count()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getAnnotations()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getAnnotations()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getName()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getName()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getExpectedException()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getExpectedException()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setExpectedException()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setExpectedException()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setExpectedExceptionFromAnnotation()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setExpectedExceptionFromAnnotation()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setUseErrorHandler()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setUseErrorHandler()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setUseErrorHandlerFromAnnotation()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setUseErrorHandlerFromAnnotation()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setUseOutputBuffering()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setUseOutputBuffering()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setUseOutputBufferingFromAnnotation()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setUseOutputBufferingFromAnnotation()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getStatus()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getStatus()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getStatusMessage()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getStatusMessage()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::hasFailed()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::hasFailed()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::run()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::run()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::runBare()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::runBare()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::runTest()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::runTest()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::verifyMockObjects()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::verifyMockObjects()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setName()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setName()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setDependencies()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setDependencies()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setDependencyInput()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setDependencyInput()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setBackupGlobals()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setBackupGlobals()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setBackupStaticAttributes()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setBackupStaticAttributes()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setRunTestInSeparateProcess()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setRunTestInSeparateProcess()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setPreserveGlobalState()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setPreserveGlobalState()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setInIsolation()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setInIsolation()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getResult()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getResult()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setResult()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setResult()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getTestResultObject()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getTestResultObject()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::iniSet()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::iniSet()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setLocale()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setLocale()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getMock()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getMock()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getMockBuilder()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getMockBuilder()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getMockClass()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getMockClass()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getMockForAbstractClass()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getMockForAbstractClass()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getMockFromWsdl()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getMockFromWsdl()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::addToAssertionCount()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::addToAssertionCount()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getNumAssertions()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getNumAssertions()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::any()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::any()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::never()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::never()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::atLeastOnce()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::atLeastOnce()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::once()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::once()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::exactly()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::exactly()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::at()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::at()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::returnValue()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::returnValue()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::returnArgument()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::returnArgument()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::returnCallback()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::returnCallback()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::throwException()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::throwException()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::onConsecutiveCalls()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::onConsecutiveCalls()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::dataToString()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::dataToString()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getDataSetAsString()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getDataSetAsString()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::createResult()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::createResult()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::handleDependencies()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::handleDependencies()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::setUpBeforeClass()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::setUpBeforeClass()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertPreConditions()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertPreConditions()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertPostConditions()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertPostConditions()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::tearDownAfterClass()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::tearDownAfterClass()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::onNotSuccessfulTest()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::onNotSuccessfulTest()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::prepareTemplate()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::prepareTemplate()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertArrayHasKey()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertArrayHasKey()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertArrayNotHasKey()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertArrayNotHasKey()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertContains()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertContains()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeContains()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeContains()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertNotContains()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertNotContains()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeNotContains()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeNotContains()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertContainsOnly()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeContainsOnly()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertNotContainsOnly()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeNotContainsOnly()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertEquals()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertEquals()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeEquals()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeEquals()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertNotEquals()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertNotEquals()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeNotEquals()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeNotEquals()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertEmpty()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeEmpty()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertNotEmpty()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertNotEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeNotEmpty()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeNotEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertGreaterThan()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertGreaterThan()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeGreaterThan()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeGreaterThan()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertGreaterThanOrEqual()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeGreaterThanOrEqual()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertLessThan()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertLessThan()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeLessThan()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeLessThan()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertLessThanOrEqual()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeLessThanOrEqual()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertFileEquals()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertFileEquals()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertFileNotEquals()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertFileNotEquals()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertStringEqualsFile()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertStringEqualsFile()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertStringNotEqualsFile()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertStringNotEqualsFile()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertFileExists()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertFileExists()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertFileNotExists()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertFileNotExists()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertTrue()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertTrue()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertFalse()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertFalse()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertNotNull()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertNotNull()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertNull()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertNull()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertClassHasAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertClassHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertClassNotHasAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertClassNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertClassHasStaticAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertClassHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertClassNotHasStaticAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertClassNotHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertObjectHasAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertObjectHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertObjectNotHasAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertObjectNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertSame()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertSame()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeSame()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeSame()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertNotSame()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertNotSame()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeNotSame()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeNotSame()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertInstanceOf()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeInstanceOf()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertNotInstanceOf()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeNotInstanceOf()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertInternalType()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertInternalType()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeInternalType()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeInternalType()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertNotInternalType()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertNotInternalType()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeNotInternalType()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeNotInternalType()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertType()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertType()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeType()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeType()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertNotType()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertNotType()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertAttributeNotType()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertAttributeNotType()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertRegExp()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertRegExp()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertNotRegExp()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertNotRegExp()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertStringMatchesFormat()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertStringMatchesFormat()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertStringNotMatchesFormat()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertStringNotMatchesFormat()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertStringMatchesFormatFile()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertStringMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertStringNotMatchesFormatFile()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertStringNotMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertStringStartsWith()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertStringStartsWith()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertStringStartsNotWith()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertStringStartsNotWith()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertStringEndsWith()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertStringEndsWith()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertStringEndsNotWith()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertStringEndsNotWith()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertXmlFileEqualsXmlFile()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertXmlFileEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertXmlFileNotEqualsXmlFile()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertXmlFileNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertXmlStringEqualsXmlFile()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertXmlStringEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertXmlStringNotEqualsXmlFile()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertXmlStringNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertXmlStringEqualsXmlString()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertXmlStringEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertXmlStringNotEqualsXmlString()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertXmlStringNotEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertEqualXMLStructure()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertEqualXMLStructure()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertSelectCount()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertSelectCount()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertSelectRegExp()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertSelectRegExp()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertSelectEquals()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertSelectEquals()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertTag()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertTag()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertNotTag()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertNotTag()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::assertThat()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::assertThat()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::logicalAnd()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::logicalAnd()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::logicalOr()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::logicalOr()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::logicalNot()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::logicalNot()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::logicalXor()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::logicalXor()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::anything()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::anything()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::isTrue()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::isTrue()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::isFalse()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::isFalse()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::isNull()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::isNull()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::attribute()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::attribute()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::contains()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::contains()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::containsOnly()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::containsOnly()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::arrayHasKey()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::arrayHasKey()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::equalTo()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::equalTo()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::attributeEqualTo()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::attributeEqualTo()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::isEmpty()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::isEmpty()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::fileExists()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::fileExists()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::greaterThan()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::greaterThan()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::greaterThanOrEqual()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::greaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::classHasAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::classHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::classHasStaticAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::classHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::objectHasAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::objectHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::identicalTo()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::identicalTo()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::isInstanceOf()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::isInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::isType()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::isType()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::lessThan()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::lessThan()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::lessThanOrEqual()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::lessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::matchesRegularExpression()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::matchesRegularExpression()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::matches()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::matches()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::stringStartsWith()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::stringStartsWith()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::stringContains()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::stringContains()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::stringEndsWith()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::stringEndsWith()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::fail()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::fail()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::syntheticFail()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::syntheticFail()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::readAttribute()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::readAttribute()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::markTestIncomplete()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::markTestIncomplete()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::markTestSkipped()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::markTestSkipped()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::getCount()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::getCount()</id><type>method</type></node><node><value>\Aura\Signal\ManagerTest::resetCount()</value><id>db_tests_ManagerTest.html#\Aura\Signal\ManagerTest::resetCount()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest</id><type>class</type></node><node><value>\Aura\Signal\HandlerTest::$handler</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::$handler</id><type>property</type></node><node><value>\Aura\Signal\HandlerTest::setUp()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setUp()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::newHandler()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::newHandler()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::tearDown()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::tearDown()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::testExecOnSenderClassAndParent()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::testExecOnSenderClassAndParent()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::testExecOnSenderObject()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::testExecOnSenderObject()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::testExecOnEveryClass()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::testExecOnEveryClass()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::__construct()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::__construct()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::toString()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::toString()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::count()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::count()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getAnnotations()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getAnnotations()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getName()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getName()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getExpectedException()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getExpectedException()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setExpectedException()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setExpectedException()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setExpectedExceptionFromAnnotation()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setExpectedExceptionFromAnnotation()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setUseErrorHandler()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setUseErrorHandler()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setUseErrorHandlerFromAnnotation()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setUseErrorHandlerFromAnnotation()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setUseOutputBuffering()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setUseOutputBuffering()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setUseOutputBufferingFromAnnotation()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setUseOutputBufferingFromAnnotation()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getStatus()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getStatus()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getStatusMessage()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getStatusMessage()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::hasFailed()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::hasFailed()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::run()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::run()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::runBare()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::runBare()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::runTest()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::runTest()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::verifyMockObjects()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::verifyMockObjects()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setName()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setName()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setDependencies()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setDependencies()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setDependencyInput()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setDependencyInput()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setBackupGlobals()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setBackupGlobals()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setBackupStaticAttributes()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setBackupStaticAttributes()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setRunTestInSeparateProcess()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setRunTestInSeparateProcess()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setPreserveGlobalState()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setPreserveGlobalState()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setInIsolation()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setInIsolation()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getResult()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getResult()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setResult()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setResult()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getTestResultObject()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getTestResultObject()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::iniSet()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::iniSet()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setLocale()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setLocale()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getMock()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getMock()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getMockBuilder()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getMockBuilder()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getMockClass()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getMockClass()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getMockForAbstractClass()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getMockForAbstractClass()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getMockFromWsdl()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getMockFromWsdl()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::addToAssertionCount()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::addToAssertionCount()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getNumAssertions()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getNumAssertions()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::any()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::any()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::never()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::never()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::atLeastOnce()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::atLeastOnce()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::once()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::once()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::exactly()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::exactly()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::at()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::at()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::returnValue()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::returnValue()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::returnArgument()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::returnArgument()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::returnCallback()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::returnCallback()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::throwException()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::throwException()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::onConsecutiveCalls()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::onConsecutiveCalls()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::dataToString()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::dataToString()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getDataSetAsString()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getDataSetAsString()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::createResult()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::createResult()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::handleDependencies()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::handleDependencies()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::setUpBeforeClass()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::setUpBeforeClass()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertPreConditions()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertPreConditions()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertPostConditions()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertPostConditions()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::tearDownAfterClass()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::tearDownAfterClass()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::onNotSuccessfulTest()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::onNotSuccessfulTest()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::prepareTemplate()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::prepareTemplate()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertArrayHasKey()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertArrayHasKey()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertArrayNotHasKey()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertArrayNotHasKey()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertContains()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertContains()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeContains()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeContains()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertNotContains()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertNotContains()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeNotContains()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeNotContains()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertContainsOnly()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeContainsOnly()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertNotContainsOnly()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeNotContainsOnly()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeNotContainsOnly()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertEquals()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertEquals()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeEquals()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeEquals()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertNotEquals()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertNotEquals()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeNotEquals()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeNotEquals()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertEmpty()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertEmpty()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeEmpty()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeEmpty()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertNotEmpty()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertNotEmpty()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeNotEmpty()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeNotEmpty()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertGreaterThan()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertGreaterThan()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeGreaterThan()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeGreaterThan()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertGreaterThanOrEqual()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeGreaterThanOrEqual()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeGreaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertLessThan()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertLessThan()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeLessThan()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeLessThan()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertLessThanOrEqual()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeLessThanOrEqual()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeLessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertFileEquals()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertFileEquals()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertFileNotEquals()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertFileNotEquals()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertStringEqualsFile()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertStringEqualsFile()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertStringNotEqualsFile()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertStringNotEqualsFile()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertFileExists()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertFileExists()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertFileNotExists()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertFileNotExists()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertTrue()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertTrue()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertFalse()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertFalse()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertNotNull()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertNotNull()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertNull()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertNull()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertClassHasAttribute()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertClassHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertClassNotHasAttribute()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertClassNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertClassHasStaticAttribute()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertClassHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertClassNotHasStaticAttribute()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertClassNotHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertObjectHasAttribute()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertObjectHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertObjectNotHasAttribute()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertObjectNotHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertSame()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertSame()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeSame()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeSame()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertNotSame()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertNotSame()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeNotSame()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeNotSame()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertInstanceOf()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeInstanceOf()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertNotInstanceOf()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeNotInstanceOf()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeNotInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertInternalType()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertInternalType()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeInternalType()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeInternalType()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertNotInternalType()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertNotInternalType()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeNotInternalType()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeNotInternalType()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertType()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertType()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeType()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeType()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertNotType()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertNotType()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertAttributeNotType()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertAttributeNotType()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertRegExp()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertRegExp()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertNotRegExp()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertNotRegExp()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertStringMatchesFormat()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertStringMatchesFormat()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertStringNotMatchesFormat()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertStringNotMatchesFormat()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertStringMatchesFormatFile()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertStringMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertStringNotMatchesFormatFile()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertStringNotMatchesFormatFile()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertStringStartsWith()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertStringStartsWith()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertStringStartsNotWith()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertStringStartsNotWith()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertStringEndsWith()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertStringEndsWith()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertStringEndsNotWith()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertStringEndsNotWith()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertXmlFileEqualsXmlFile()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertXmlFileEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertXmlFileNotEqualsXmlFile()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertXmlFileNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertXmlStringEqualsXmlFile()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertXmlStringEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertXmlStringNotEqualsXmlFile()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertXmlStringNotEqualsXmlFile()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertXmlStringEqualsXmlString()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertXmlStringEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertXmlStringNotEqualsXmlString()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertXmlStringNotEqualsXmlString()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertEqualXMLStructure()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertEqualXMLStructure()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertSelectCount()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertSelectCount()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertSelectRegExp()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertSelectRegExp()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertSelectEquals()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertSelectEquals()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertTag()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertTag()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertNotTag()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertNotTag()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::assertThat()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::assertThat()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::logicalAnd()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::logicalAnd()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::logicalOr()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::logicalOr()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::logicalNot()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::logicalNot()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::logicalXor()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::logicalXor()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::anything()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::anything()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::isTrue()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::isTrue()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::isFalse()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::isFalse()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::isNull()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::isNull()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::attribute()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::attribute()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::contains()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::contains()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::containsOnly()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::containsOnly()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::arrayHasKey()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::arrayHasKey()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::equalTo()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::equalTo()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::attributeEqualTo()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::attributeEqualTo()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::isEmpty()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::isEmpty()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::fileExists()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::fileExists()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::greaterThan()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::greaterThan()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::greaterThanOrEqual()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::greaterThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::classHasAttribute()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::classHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::classHasStaticAttribute()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::classHasStaticAttribute()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::objectHasAttribute()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::objectHasAttribute()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::identicalTo()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::identicalTo()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::isInstanceOf()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::isInstanceOf()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::isType()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::isType()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::lessThan()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::lessThan()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::lessThanOrEqual()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::lessThanOrEqual()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::matchesRegularExpression()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::matchesRegularExpression()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::matches()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::matches()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::stringStartsWith()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::stringStartsWith()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::stringContains()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::stringContains()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::stringEndsWith()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::stringEndsWith()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::fail()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::fail()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::syntheticFail()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::syntheticFail()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::readAttribute()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::readAttribute()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::markTestIncomplete()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::markTestIncomplete()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::markTestSkipped()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::markTestSkipped()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::getCount()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::getCount()</id><type>method</type></node><node><value>\Aura\Signal\HandlerTest::resetCount()</value><id>db_tests_HandlerTest.html#\Aura\Signal\HandlerTest::resetCount()</id><type>method</type></node><node><value>\Aura\Signal\Manager</value><id>db_src_Manager.html#\Aura\Signal\Manager</id><type>class</type></node><node><value>\Aura\Signal\Manager::STOP</value><id>db_src_Manager.html#\Aura\Signal\Manager::STOP</id><type>constant</type></node><node><value>\Aura\Signal\Manager::$handler_factory</value><id>db_src_Manager.html#\Aura\Signal\Manager::$handler_factory</id><type>property</type></node><node><value>\Aura\Signal\Manager::$handlers</value><id>db_src_Manager.html#\Aura\Signal\Manager::$handlers</id><type>property</type></node><node><value>\Aura\Signal\Manager::$result_collection</value><id>db_src_Manager.html#\Aura\Signal\Manager::$result_collection</id><type>property</type></node><node><value>\Aura\Signal\Manager::$result_factory</value><id>db_src_Manager.html#\Aura\Signal\Manager::$result_factory</id><type>property</type></node><node><value>\Aura\Signal\Manager::$results</value><id>db_src_Manager.html#\Aura\Signal\Manager::$results</id><type>property</type></node><node><value>\Aura\Signal\Manager::$sorted</value><id>db_src_Manager.html#\Aura\Signal\Manager::$sorted</id><type>property</type></node><node><value>\Aura\Signal\Manager::__construct()</value><id>db_src_Manager.html#\Aura\Signal\Manager::__construct()</id><type>method</type></node><node><value>\Aura\Signal\Manager::handler()</value><id>db_src_Manager.html#\Aura\Signal\Manager::handler()</id><type>method</type></node><node><value>\Aura\Signal\Manager::getHandlers()</value><id>db_src_Manager.html#\Aura\Signal\Manager::getHandlers()</id><type>method</type></node><node><value>\Aura\Signal\Manager::send()</value><id>db_src_Manager.html#\Aura\Signal\Manager::send()</id><type>method</type></node><node><value>\Aura\Signal\Manager::process()</value><id>db_src_Manager.html#\Aura\Signal\Manager::process()</id><type>method</type></node><node><value>\Aura\Signal\Manager::getResults()</value><id>db_src_Manager.html#\Aura\Signal\Manager::getResults()</id><type>method</type></node><node><value>\Aura\Signal\Result</value><id>db_src_Result.html#\Aura\Signal\Result</id><type>class</type></node><node><value>\Aura\Signal\Result::$origin</value><id>db_src_Result.html#\Aura\Signal\Result::$origin</id><type>property</type></node><node><value>\Aura\Signal\Result::$sender</value><id>db_src_Result.html#\Aura\Signal\Result::$sender</id><type>property</type></node><node><value>\Aura\Signal\Result::$signal</value><id>db_src_Result.html#\Aura\Signal\Result::$signal</id><type>property</type></node><node><value>\Aura\Signal\Result::$value</value><id>db_src_Result.html#\Aura\Signal\Result::$value</id><type>property</type></node><node><value>\Aura\Signal\Result::__construct()</value><id>db_src_Result.html#\Aura\Signal\Result::__construct()</id><type>method</type></node><node><value>\Aura\Signal\Result::__get()</value><id>db_src_Result.html#\Aura\Signal\Result::__get()</id><type>method</type></node><node><value>\Aura\Signal\Handler</value><id>db_src_Handler.html#\Aura\Signal\Handler</id><type>class</type></node><node><value>\Aura\Signal\Handler::$sender</value><id>db_src_Handler.html#\Aura\Signal\Handler::$sender</id><type>property</type></node><node><value>\Aura\Signal\Handler::$signal</value><id>db_src_Handler.html#\Aura\Signal\Handler::$signal</id><type>property</type></node><node><value>\Aura\Signal\Handler::$callback</value><id>db_src_Handler.html#\Aura\Signal\Handler::$callback</id><type>property</type></node><node><value>\Aura\Signal\Handler::__construct()</value><id>db_src_Handler.html#\Aura\Signal\Handler::__construct()</id><type>method</type></node><node><value>\Aura\Signal\Handler::__get()</value><id>db_src_Handler.html#\Aura\Signal\Handler::__get()</id><type>method</type></node><node><value>\Aura\Signal\Handler::exec()</value><id>db_src_Handler.html#\Aura\Signal\Handler::exec()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection</id><type>class</type></node><node><value>\Aura\Signal\ResultCollection::getLast()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::getLast()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::isStopped()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::isStopped()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::__construct()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::__construct()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::offsetExists()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::offsetExists()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::offsetGet()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::offsetGet()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::offsetSet()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::offsetSet()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::offsetUnset()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::offsetUnset()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::append()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::append()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::getArrayCopy()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::getArrayCopy()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::count()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::count()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::getFlags()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::getFlags()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::setFlags()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::setFlags()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::asort()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::asort()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::ksort()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::ksort()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::uasort()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::uasort()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::uksort()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::uksort()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::natsort()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::natsort()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::natcasesort()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::natcasesort()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::unserialize()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::unserialize()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::serialize()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::serialize()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::getIterator()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::getIterator()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::exchangeArray()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::exchangeArray()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::setIteratorClass()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::setIteratorClass()</id><type>method</type></node><node><value>\Aura\Signal\ResultCollection::getIteratorClass()</value><id>db_src_ResultCollection.html#\Aura\Signal\ResultCollection::getIteratorClass()</id><type>method</type></node><node><value>\Aura\Signal\ResultFactory</value><id>db_src_ResultFactory.html#\Aura\Signal\ResultFactory</id><type>class</type></node><node><value>\Aura\Signal\ResultFactory::$params</value><id>db_src_ResultFactory.html#\Aura\Signal\ResultFactory::$params</id><type>property</type></node><node><value>\Aura\Signal\ResultFactory::newInstance()</value><id>db_src_ResultFactory.html#\Aura\Signal\ResultFactory::newInstance()</id><type>method</type></node><node><value>\Aura\Signal\HandlerFactory</value><id>db_src_HandlerFactory.html#\Aura\Signal\HandlerFactory</id><type>class</type></node><node><value>\Aura\Signal\HandlerFactory::$params</value><id>db_src_HandlerFactory.html#\Aura\Signal\HandlerFactory::$params</id><type>property</type></node><node><value>\Aura\Signal\HandlerFactory::newInstance()</value><id>db_src_HandlerFactory.html#\Aura\Signal\HandlerFactory::newInstance()</id><type>method</type></node><node><value>\Aura\Signal\Exception</value><id>db_src_Exception.html#\Aura\Signal\Exception</id><type>class</type></node><node><value>\Aura\Signal\Exception::__construct()</value><id>db_src_Exception.html#\Aura\Signal\Exception::__construct()</id><type>method</type></node><node><value>\Aura\Signal\Exception::getMessage()</value><id>db_src_Exception.html#\Aura\Signal\Exception::getMessage()</id><type>method</type></node><node><value>\Aura\Signal\Exception::getCode()</value><id>db_src_Exception.html#\Aura\Signal\Exception::getCode()</id><type>method</type></node><node><value>\Aura\Signal\Exception::getFile()</value><id>db_src_Exception.html#\Aura\Signal\Exception::getFile()</id><type>method</type></node><node><value>\Aura\Signal\Exception::getLine()</value><id>db_src_Exception.html#\Aura\Signal\Exception::getLine()</id><type>method</type></node><node><value>\Aura\Signal\Exception::getTrace()</value><id>db_src_Exception.html#\Aura\Signal\Exception::getTrace()</id><type>method</type></node><node><value>\Aura\Signal\Exception::getPrevious()</value><id>db_src_Exception.html#\Aura\Signal\Exception::getPrevious()</id><type>method</type></node><node><value>\Aura\Signal\Exception::getTraceAsString()</value><id>db_src_Exception.html#\Aura\Signal\Exception::getTraceAsString()</id><type>method</type></node><node><value>\Aura\Signal\Exception::__toString()</value><id>db_src_Exception.html#\Aura\Signal\Exception::__toString()</id><type>method</type></node><node><value>Closure()</value><id>db_config_default.html#::Closure()</id><type>function</type></node></nodes>
