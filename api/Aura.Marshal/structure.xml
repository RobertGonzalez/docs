<?xml version="1.0"?>
<project version="0.16.0" title="Aura Project for PHP: Aura.Marshal">
  <file path="scripts/instance.php" hash="77a3aeecd98ab55078198d5e0e0c3e70" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File scripts/instance.php</error>
    </parse_markers>
    <include type="Require Once" line="3">
      <name>/src.php</name>
    </include>
  </file>
  <file path="tests/TypeTest.php" hash="93e3c7324e52e9a46aec55466f773c78" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File tests/TypeTest.php</error>
      <critical line="17">No short description for property $type</critical>
      <error line="49">No DocBlock was found for Method testSetAndGetIdentityField</error>
      <error line="57">No DocBlock was found for Method testSetAndGetRecordBuilder</error>
      <error line="65">No DocBlock was found for Method testSetAndGetCollectionBuilder</error>
      <error line="73">No DocBlock was found for Method testLoadAndGetStorage</error>
      <error line="83">No DocBlock was found for Method testGetIdentityValues</error>
      <error line="93">No DocBlock was found for Method testGetFieldValues</error>
      <error line="102">No DocBlock was found for Method testGetRecord</error>
      <error line="119">No DocBlock was found for Method testGetRecordByField</error>
      <error line="133">No DocBlock was found for Method testGetRecordByField_identity</error>
      <error line="147">No DocBlock was found for Method testGetRecordByField_none</error>
      <error line="158">No DocBlock was found for Method getCollection</error>
      <error line="177">No DocBlock was found for Method testGetCollectionByField</error>
      <error line="196">No DocBlock was found for Method testGetCollectionByField_many</error>
      <error line="215">No DocBlock was found for Method testGetCollectionByField_identity</error>
      <error line="234">No DocBlock was found for Method testAddAndGetRelation</error>
      <error line="255">No DocBlock was found for Method testTypeBuilder_noIdentityField</error>
    </parse_markers>
    <namespace-alias name="CollectionBuilder">Aura\Marshal\Collection\Builder</namespace-alias>
    <namespace-alias name="RecordBuilder">Aura\Marshal\Record\Builder</namespace-alias>
    <namespace-alias name="GenericCollection">Aura\Marshal\Record\GenericCollection</namespace-alias>
    <namespace-alias name="GenericRecord">Aura\Marshal\Record\GenericRecord</namespace-alias>
    <namespace-alias name="RelationBuilder">Aura\Marshal\Relation\Builder</namespace-alias>
    <namespace-alias name="TypeBuilder">Aura\Marshal\Type\Builder</namespace-alias>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="false" line="15" namespace="Aura\Marshal" package="Default">
      <name>TypeTest</name>
      <extends>\PHPUnit_Framework_TestCase</extends>
      <full_name>\Aura\Marshal\TypeTest</full_name>
      <docblock>
        <description>Test class for Type.</description>
        <long-description>&lt;p&gt;Generated by PHPUnit on 2011-11-21 at 18:02:55.&lt;/p&gt;
</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="20" package="Default">
        <name>$type</name>
        <default/>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="17" name="var" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" line="26" package="Default">
        <name>setUp</name>
        <docblock>
          <description>Sets up the fixture, for example, opens a network connection.</description>
          <long-description>&lt;p&gt;This method is called before a test is executed.&lt;/p&gt;
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="44" package="Default">
        <name>tearDown</name>
        <docblock>
          <description>Tears down the fixture, for example, closes a network connection.</description>
          <long-description>&lt;p&gt;This method is called after a test is executed.&lt;/p&gt;
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="49" package="Default">
        <name>testSetAndGetIdentityField</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="57" package="Default">
        <name>testSetAndGetRecordBuilder</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="65" package="Default">
        <name>testSetAndGetCollectionBuilder</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="73" package="Default">
        <name>testLoadAndGetStorage</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="83" package="Default">
        <name>testGetIdentityValues</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="93" package="Default">
        <name>testGetFieldValues</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="102" package="Default">
        <name>testGetRecord</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="119" package="Default">
        <name>testGetRecordByField</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="133" package="Default">
        <name>testGetRecordByField_identity</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="147" package="Default">
        <name>testGetRecordByField_none</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="158" package="Default">
        <name>getCollection</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="177" package="Default">
        <name>testGetCollectionByField</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="196" package="Default">
        <name>testGetCollectionByField_many</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="215" package="Default">
        <name>testGetCollectionByField_identity</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="234" package="Default">
        <name>testAddAndGetRelation</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="255" package="Default">
        <name>testTypeBuilder_noIdentityField</name>
      </method>
    </class>
  </file>
  <file path="tests/RelationTest.php" hash="2a39705e9124eded9ff6d5e145d3595d" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File tests/RelationTest.php</error>
      <critical line="12">No short description for property $manager</critical>
      <error line="44">No DocBlock was found for Method testNoRelationship</error>
      <error line="58">No DocBlock was found for Method testNoForeignType</error>
      <error line="72">No DocBlock was found for Method testNoNativeField</error>
      <error line="86">No DocBlock was found for Method testNoForeignField</error>
      <error line="100">No DocBlock was found for Method testNoThroughType</error>
      <error line="114">No DocBlock was found for Method testNoThroughNativeField</error>
      <error line="128">No DocBlock was found for Method testNoThroughForeignField</error>
      <error line="142">No DocBlock was found for Method testBelongsTo</error>
      <error line="149">No DocBlock was found for Method testHasOne</error>
      <error line="157">No DocBlock was found for Method testHasMany</error>
      <error line="176">No DocBlock was found for Method testHasManyThrough</error>
    </parse_markers>
    <namespace-alias name="RelationBuilder">Aura\Marshal\Relation\Builder</namespace-alias>
    <namespace-alias name="TypeBuilder">Aura\Marshal\Type\Builder</namespace-alias>
    <class final="false" abstract="false" line="10" namespace="Aura\Marshal" package="Default">
      <name>RelationTest</name>
      <extends>\PHPUnit_Framework_TestCase</extends>
      <full_name>\Aura\Marshal\RelationTest</full_name>
      <docblock>
        <description>Test class for Manager.</description>
        <long-description>&lt;p&gt;Generated by PHPUnit on 2011-11-21 at 11:28:20.&lt;/p&gt;
</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="15" package="Default">
        <name>$manager</name>
        <default/>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="12" name="var" description="" type="\Aura\Marshal\Manager">
            <type by_reference="false">\Aura\Marshal\Manager</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" line="21" package="Default">
        <name>setUp</name>
        <docblock>
          <description>Sets up the fixture, for example, opens a network connection.</description>
          <long-description>&lt;p&gt;This method is called before a test is executed.&lt;/p&gt;
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="39" package="Default">
        <name>tearDown</name>
        <docblock>
          <description>Tears down the fixture, for example, closes a network connection.</description>
          <long-description>&lt;p&gt;This method is called after a test is executed.&lt;/p&gt;
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="44" package="Default">
        <name>testNoRelationship</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="58" package="Default">
        <name>testNoForeignType</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="72" package="Default">
        <name>testNoNativeField</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="86" package="Default">
        <name>testNoForeignField</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="100" package="Default">
        <name>testNoThroughType</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="114" package="Default">
        <name>testNoThroughNativeField</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="128" package="Default">
        <name>testNoThroughForeignField</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="142" package="Default">
        <name>testBelongsTo</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="149" package="Default">
        <name>testHasOne</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="157" package="Default">
        <name>testHasMany</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="176" package="Default">
        <name>testHasManyThrough</name>
      </method>
    </class>
  </file>
  <file path="tests/DataTest.php" hash="1226869ae23f88333e144649512d97c1" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File tests/DataTest.php</error>
      <critical line="11">No short description for property $object</critical>
      <error line="39">No DocBlock was found for Method testOffsetExistsAndUnset</error>
      <error line="46">No DocBlock was found for Method testOffsetSetAndGet</error>
      <error line="52">No DocBlock was found for Method testCount</error>
      <error line="57">No DocBlock was found for Method testGetIterator</error>
    </parse_markers>
    <class final="false" abstract="false" line="9" namespace="Aura\Marshal" package="Default">
      <name>DataTest</name>
      <extends>\PHPUnit_Framework_TestCase</extends>
      <full_name>\Aura\Marshal\DataTest</full_name>
      <docblock>
        <description>Test class for Data.</description>
        <long-description>&lt;p&gt;Generated by PHPUnit on 2011-11-26 at 14:22:58.&lt;/p&gt;
</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="14" package="Default">
        <name>$object</name>
        <default/>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="11" name="var" description="" type="\Aura\Marshal\Data">
            <type by_reference="false">\Aura\Marshal\Data</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" line="20" package="Default">
        <name>setUp</name>
        <docblock>
          <description>Sets up the fixture, for example, opens a network connection.</description>
          <long-description>&lt;p&gt;This method is called before a test is executed.&lt;/p&gt;
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="34" package="Default">
        <name>tearDown</name>
        <docblock>
          <description>Tears down the fixture, for example, closes a network connection.</description>
          <long-description>&lt;p&gt;This method is called after a test is executed.&lt;/p&gt;
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="39" package="Default">
        <name>testOffsetExistsAndUnset</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="46" package="Default">
        <name>testOffsetSetAndGet</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="52" package="Default">
        <name>testCount</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="57" package="Default">
        <name>testGetIterator</name>
      </method>
    </class>
  </file>
  <file path="tests/fixture_types.php" hash="83c6c3b49d3063af92a0ca0b8a50ccdd" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File tests/fixture_types.php</error>
    </parse_markers>
  </file>
  <file path="tests/RecordTest.php" hash="2db186a1f67f8f29b87b89a908b7520f" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File tests/RecordTest.php</error>
      <critical line="12">No short description for property $record</critical>
      <error line="42">No DocBlock was found for Method testSetAndGet</error>
      <error line="48">No DocBlock was found for Method testIssetAndUnset</error>
    </parse_markers>
    <namespace-alias name="GenericRecord">Aura\Marshal\Record\GenericRecord</namespace-alias>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="false" line="10" namespace="Aura\Marshal" package="Default">
      <name>RecordTest</name>
      <extends>\PHPUnit_Framework_TestCase</extends>
      <full_name>\Aura\Marshal\RecordTest</full_name>
      <docblock>
        <description>Test class for Record.</description>
        <long-description>&lt;p&gt;Generated by PHPUnit on 2011-11-26 at 14:30:57.&lt;/p&gt;
</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="15" package="Default">
        <name>$record</name>
        <default/>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="12" name="var" description="" type="\Aura\Marshal\Record\GenericRecord">
            <type by_reference="false">\Aura\Marshal\Record\GenericRecord</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" line="21" package="Default">
        <name>setUp</name>
        <docblock>
          <description>Sets up the fixture, for example, opens a network connection.</description>
          <long-description>&lt;p&gt;This method is called before a test is executed.&lt;/p&gt;
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="37" package="Default">
        <name>tearDown</name>
        <docblock>
          <description>Tears down the fixture, for example, closes a network connection.</description>
          <long-description>&lt;p&gt;This method is called after a test is executed.&lt;/p&gt;
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="42" package="Default">
        <name>testSetAndGet</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="48" package="Default">
        <name>testIssetAndUnset</name>
      </method>
    </class>
  </file>
  <file path="tests/fixture_data.php" hash="d271573a5b19aa7780b002e7c1f843cf" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File tests/fixture_data.php</error>
    </parse_markers>
  </file>
  <file path="tests/ManagerTest.php" hash="2d00ffc6cc16308168dedfb5532ca246" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File tests/ManagerTest.php</error>
      <critical line="12">No short description for property $manager</critical>
      <error line="43">No DocBlock was found for Method test__get</error>
      <error line="50">No DocBlock was found for Method test__getNoSuchType</error>
      <error line="56">No DocBlock was found for Method testGetTypes</error>
      <error line="71">No DocBlock was found for Method testSetType_alreadySet</error>
    </parse_markers>
    <namespace-alias name="RelationBuilder">Aura\Marshal\Relation\Builder</namespace-alias>
    <namespace-alias name="TypeBuilder">Aura\Marshal\Type\Builder</namespace-alias>
    <class final="false" abstract="false" line="10" namespace="Aura\Marshal" package="Default">
      <name>ManagerTest</name>
      <extends>\PHPUnit_Framework_TestCase</extends>
      <full_name>\Aura\Marshal\ManagerTest</full_name>
      <docblock>
        <description>Test class for Manager.</description>
        <long-description>&lt;p&gt;Generated by PHPUnit on 2011-11-21 at 11:28:20.&lt;/p&gt;
</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="15" package="Default">
        <name>$manager</name>
        <default/>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="12" name="var" description="" type="\Aura\Marshal\Manager">
            <type by_reference="false">\Aura\Marshal\Manager</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" line="21" package="Default">
        <name>setUp</name>
        <docblock>
          <description>Sets up the fixture, for example, opens a network connection.</description>
          <long-description>&lt;p&gt;This method is called before a test is executed.&lt;/p&gt;
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="38" package="Default">
        <name>tearDown</name>
        <docblock>
          <description>Tears down the fixture, for example, closes a network connection.</description>
          <long-description>&lt;p&gt;This method is called after a test is executed.&lt;/p&gt;
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="43" package="Default">
        <name>test__get</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="50" package="Default">
        <name>test__getNoSuchType</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="56" package="Default">
        <name>testGetTypes</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="71" package="Default">
        <name>testSetType_alreadySet</name>
      </method>
    </class>
  </file>
  <file path="tests/CollectionTest.php" hash="de773403e111c12fb82d48ac2f1199d7" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File tests/CollectionTest.php</error>
      <error line="14">No DocBlock was found for Property $collection</error>
      <error line="16">No DocBlock was found for Property $empty_collection</error>
      <error line="50">No DocBlock was found for Method testGetIdentityValues</error>
      <error line="57">No DocBlock was found for Method testIsEmpty</error>
      <error line="63">No DocBlock was found for Method testObjectsInCollectionAreInIdentityMap</error>
    </parse_markers>
    <namespace-alias name="GenericCollection">Aura\Marshal\Collection\GenericCollection</namespace-alias>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <namespace-alias name="RecordBuilder">Aura\Marshal\Record\Builder</namespace-alias>
    <namespace-alias name="CollectionBuilder">Aura\Marshal\Collection\Builder</namespace-alias>
    <class final="false" abstract="false" line="12" namespace="Aura\Marshal" package="Default">
      <name>CollectionTest</name>
      <extends>\PHPUnit_Framework_TestCase</extends>
      <full_name>\Aura\Marshal\CollectionTest</full_name>
      <docblock>
        <description>Test class for Collection.</description>
        <long-description>&lt;p&gt;Generated by PHPUnit on 2011-11-26 at 16:38:42.&lt;/p&gt;
</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="14" package="Default">
        <name>$collection</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="16" package="Default">
        <name>$empty_collection</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" line="22" package="Default">
        <name>setUp</name>
        <docblock>
          <description>Sets up the fixture, for example, opens a network connection.</description>
          <long-description>&lt;p&gt;This method is called before a test is executed.&lt;/p&gt;
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="45" package="Default">
        <name>tearDown</name>
        <docblock>
          <description>Tears down the fixture, for example, closes a network connection.</description>
          <long-description>&lt;p&gt;This method is called after a test is executed.&lt;/p&gt;
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="50" package="Default">
        <name>testGetIdentityValues</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="57" package="Default">
        <name>testIsEmpty</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="63" package="Default">
        <name>testObjectsInCollectionAreInIdentityMap</name>
      </method>
    </class>
  </file>
  <file path="src/Manager.php" hash="14abb1c67d586cd3198d5a577c59b428" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Manager.php</error>
      <error line="172">No DocBlock was found for Method setRelation</error>
    </parse_markers>
    <namespace-alias name="TypeBuilder">Aura\Marshal\Type\Builder</namespace-alias>
    <namespace-alias name="RelationBuilder">Aura\Marshal\Relation\Builder</namespace-alias>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="false" line="21" namespace="Aura\Marshal" package="Aura\Marshal">
      <name>Manager</name>
      <extends/>
      <full_name>\Aura\Marshal\Manager</full_name>
      <docblock>
        <description>A manager for the types in the domain model.</description>
        <long-description>
</long-description>
        <tag line="14" name="package" description="Aura.Marshal"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="30" package="Default">
        <name>$type_builder</name>
        <default/>
        <docblock>
          <description>A builder for type objects.</description>
          <long-description>
</long-description>
          <tag line="23" name="var" description="" type="\Aura\Marshal\Type\Builder">
            <type by_reference="false">\Aura\Marshal\Type\Builder</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="39" package="Default">
        <name>$relation_builder</name>
        <default/>
        <docblock>
          <description>A builder for relation objects.</description>
          <long-description>
</long-description>
          <tag line="32" name="var" description="" type="\Aura\Marshal\Relation\Builder">
            <type by_reference="false">\Aura\Marshal\Relation\Builder</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" package="Default">
        <name>$types</name>
        <default/>
        <docblock>
          <description>An array of type definition arrays, which are converted to type
objects as you request them.</description>
          <long-description>
</long-description>
          <tag line="41" name="var" description="" type="array">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="142" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>&lt;p&gt;The type definitions array looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; $types = array(

     // the name to use for this type in the manager
     'some_type_name' =&amp;gt; array(

         // the identity field in each record
         'identity_field' =&amp;gt; 'id',

         // the record class generated by the record builder
         'record_class' =&amp;gt; 'Aura\Domain\Record',

         // a record builder for the type
         'record_builder' =&amp;gt; new \Aura\Domain\RecordBuilder,

         // a collection builder for the type
         'collection_builder' =&amp;gt; new \Aura\Domain\CollectionBuilder,

         // relationship definitons
         'relation_names' =&amp;gt; array(
             // discussed below
         ),
     ),

     'next_type_name' =&amp;gt; array(
         // ...
     ),

     // ...
 );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The relationship defitions portion looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; $relation_names = array(

     'name_for_relation_1' =&amp;gt; array(

         // the relationship to the native (parent) type: the parent
         // belongs_to, has_one, has_many, or has_many_through
         // of the foreign type. required.
         'relationship' =&amp;gt; 'has_many',

         // the name of the foreign (related) type in the manager.
         // optional; by default, uses the relation name as the
         // foreign type.
         'foreign_type' =&amp;gt; 'another_type_name',

         // the name of the native (parent) record field to use
         // when matching foreign (related) records. required.
         'native_field' =&amp;gt; 'native_field_name',

         // the name of the foreign (related) record field to use
         // when matching the native (parent) record. required.
         'foreign_field' =&amp;gt; 'foreign_field_name',

         // -------------------------------------------------------
         // if you have a has_many_through relationship, add the
         // following three keys to set up the association mapping.

         // the name of the type through which the native
         // and foreign types are mapped to each other.
         'through_type' =&amp;gt; 'mapping_type_name',

         // in the "through" record, the name of the field that
         // maps to the 'native_field' value
         'through_native_field' =&amp;gt; 'mapping_native_field_name',

         // in the "through" record, the name of the field that
         // maps to the 'foreign_field' value
         'through_foreign_field' =&amp;gt; 'mapping_foreign_field_name',
     ),

     'name_for_relation_2' =&amp;gt; array(
         // ...
     ),

     // ...
 );
&lt;/code&gt;&lt;/pre&gt;
</long-description>
          <tag line="51" name="param" description="A builder for type objects." type="\Aura\Marshal\Type\Builder" variable="$type_builder">
            <type by_reference="false">\Aura\Marshal\Type\Builder</type>
          </tag>
          <tag line="51" name="param" description="A builder for relation objects." type="\Aura\Marshal\Relation\Builder" variable="$relation_builder">
            <type by_reference="false">\Aura\Marshal\Relation\Builder</type>
          </tag>
          <tag line="51" name="param" description="Type definitions." type="array" variable="$types">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
        </docblock>
        <argument line="143">
          <name>$type_builder</name>
          <default/>
          <type>TypeBuilder</type>
        </argument>
        <argument line="144">
          <name>$relation_builder</name>
          <default/>
          <type>RelationBuilder</type>
        </argument>
        <argument line="145">
          <name>$types</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="163" package="Default">
        <name>setType</name>
        <docblock>
          <description>Sets one type in the manager.</description>
          <long-description>
</long-description>
          <tag line="152" name="param" description="The name to use for the type." type="string" variable="$name">
            <type by_reference="false">\Aura\Marshal\string</type>
          </tag>
          <tag line="152" name="param" description="An array of type definition information." type="array" variable="$info">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
          <tag line="152" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\void</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="163">
          <name>$info</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="172" package="Default">
        <name>setRelation</name>
        <argument line="172">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="172">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="172">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="202" package="Default">
        <name>__get</name>
        <docblock>
          <description>Gets a type by name, creating a type object for it as needed.</description>
          <long-description>
</long-description>
          <tag line="193" name="param" description="The type name to retrieve." type="string" variable="$name">
            <type by_reference="false">\Aura\Marshal\string</type>
          </tag>
          <tag line="193" name="return" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
        <argument line="202">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="234" package="Default">
        <name>buildType</name>
        <docblock>
          <description>Builds a type object from a type definition.</description>
          <long-description>&lt;p&gt;The build process happens in two stages:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use the $type_builder to create the type object.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add relationships from the type definition.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The two-stage process helps avoid race conditions where a type may
have relationships to other type object that might not be in the
manager yet.&lt;/p&gt;
</long-description>
          <tag line="215" name="param" description="The type name to build." type="string" variable="$name">
            <type by_reference="false">\Aura\Marshal\string</type>
          </tag>
          <tag line="215" name="return" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="256" package="Default">
        <name>getTypes</name>
        <docblock>
          <description>Returns the names of all types in the manager.</description>
          <long-description>
</long-description>
          <tag line="249" name="return" description="" type="array">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/Data.php" hash="c689d3f8829449df24b5f630c45407ce" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Data.php</error>
    </parse_markers>
    <class final="false" abstract="false" line="27" namespace="Aura\Marshal" package="Aura\Marshal">
      <name>Data</name>
      <extends/>
      <full_name>\Aura\Marshal\Data</full_name>
      <docblock>
        <description>Represents a data set. This is similar to the SPL ArrayObject, but allows
you easier access to the underlying data itself. This class serves as a
base for ...</description>
        <long-description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;the generic type object, where $data represents an IdentityMap;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the generic record object, where $data represents the record fields; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the generic collection object, where $data represents an array of
records.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</long-description>
        <tag line="11" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\ArrayAccess</implements>
      <implements>\Countable</implements>
      <implements>\IteratorAggregate</implements>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$data</name>
        <default>array()</default>
        <docblock>
          <description>Key-value pairs of data.</description>
          <long-description>
</long-description>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="45" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
          <tag line="38" name="param" description="The data for this object." type="array" variable="$data">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="59" package="Default">
        <name>offsetExists</name>
        <docblock>
          <description>ArrayAccess: does the requested key exist?</description>
          <long-description>
</long-description>
          <tag line="50" name="param" description="The requested key." type="int|string" variable="$key">
            <type by_reference="false">\Aura\Marshal\int</type>
            <type by_reference="false">\Aura\Marshal\string</type>
          </tag>
          <tag line="50" name="return" description="" type="bool">
            <type by_reference="false">\Aura\Marshal\bool</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="73" package="Default">
        <name>offsetGet</name>
        <docblock>
          <description>ArrayAccess: get a key value.</description>
          <long-description>
</long-description>
          <tag line="64" name="param" description="The requested key." type="int|string" variable="$key">
            <type by_reference="false">\Aura\Marshal\int</type>
            <type by_reference="false">\Aura\Marshal\string</type>
          </tag>
          <tag line="64" name="return" description="" type="mixed">
            <type by_reference="false">\Aura\Marshal\mixed</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="89" package="Default">
        <name>offsetSet</name>
        <docblock>
          <description>ArrayAccess: set a key value.</description>
          <long-description>
</long-description>
          <tag line="78" name="param" description="The requested key." type="int|string" variable="$key">
            <type by_reference="false">\Aura\Marshal\int</type>
            <type by_reference="false">\Aura\Marshal\string</type>
          </tag>
          <tag line="78" name="param" description="The value to set it to." type="mixed" variable="$val">
            <type by_reference="false">\Aura\Marshal\mixed</type>
          </tag>
          <tag line="78" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\void</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="89">
          <name>$val</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="103" package="Default">
        <name>offsetUnset</name>
        <docblock>
          <description>ArrayAccess: unset a key.</description>
          <long-description>
</long-description>
          <tag line="94" name="param" description="The requested key." type="int|string" variable="$key">
            <type by_reference="false">\Aura\Marshal\int</type>
            <type by_reference="false">\Aura\Marshal\string</type>
          </tag>
          <tag line="94" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\void</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="115" package="Default">
        <name>count</name>
        <docblock>
          <description>Countable: how many keys are there?</description>
          <long-description>
</long-description>
          <tag line="108" name="return" description="" type="int">
            <type by_reference="false">\Aura\Marshal\int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="127" package="Default">
        <name>getIterator</name>
        <docblock>
          <description>IteratorAggregate: returns an external iterator for this struct.</description>
          <long-description>
</long-description>
          <tag line="120" name="return" description="" type="\Aura\Marshal\DataIterator">
            <type by_reference="false">\Aura\Marshal\DataIterator</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/DataIterator.php" hash="3cd60b26fff48d0663430bf25a2054d6" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/DataIterator.php</error>
    </parse_markers>
    <class final="false" abstract="false" line="18" namespace="Aura\Marshal" package="Aura\Marshal">
      <name>DataIterator</name>
      <extends/>
      <full_name>\Aura\Marshal\DataIterator</full_name>
      <docblock>
        <description>An object to allow iteration over the elements of a Data object.</description>
        <long-description>
</long-description>
        <tag line="11" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\Iterator</implements>
      <property final="false" static="false" visibility="protected" line="27" package="Default">
        <name>$data</name>
        <default/>
        <docblock>
          <description>The Data over which we are iterating.</description>
          <long-description>
</long-description>
          <tag line="20" name="var" description="" type="\Aura\Marshal\Data">
            <type by_reference="false">\Aura\Marshal\Data</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$keys</name>
        <default/>
        <docblock>
          <description>The keys to iterate over in the Data object.</description>
          <long-description>
</long-description>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$valid</name>
        <default/>
        <docblock>
          <description>Is the current iterator position valid?</description>
          <long-description>
</long-description>
          <tag line="38" name="var" description="" type="bool">
            <type by_reference="false">\Aura\Marshal\bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="56" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
          <tag line="47" name="param" description="The Data object over which to iterate." type="\Aura\Marshal\Data" variable="$data">
            <type by_reference="false">\Aura\Marshal\Data</type>
          </tag>
          <tag line="47" name="param" description="The keys in the Data object." type="array" variable="$keys">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$data</name>
          <default/>
          <type>Data</type>
        </argument>
        <argument line="56">
          <name>$keys</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="69" package="Default">
        <name>current</name>
        <docblock>
          <description>Returns the value at the current iterator position.</description>
          <long-description>
</long-description>
          <tag line="62" name="return" description="" type="mixed">
            <type by_reference="false">\Aura\Marshal\mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="81" package="Default">
        <name>key</name>
        <docblock>
          <description>Returns the current iterator position.</description>
          <long-description>
</long-description>
          <tag line="74" name="return" description="" type="mixed">
            <type by_reference="false">\Aura\Marshal\mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="93" package="Default">
        <name>next</name>
        <docblock>
          <description>Moves the iterator to the next position.</description>
          <long-description>
</long-description>
          <tag line="86" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="105" package="Default">
        <name>rewind</name>
        <docblock>
          <description>Moves the iterator to the first position.</description>
          <long-description>
</long-description>
          <tag line="98" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="117" package="Default">
        <name>valid</name>
        <docblock>
          <description>Is the current iterator position valid?</description>
          <long-description>
</long-description>
          <tag line="110" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/Collection/GenericCollection.php" hash="d3fdfa2338bfa0e842d26604addde518" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Collection/GenericCollection.php</error>
    </parse_markers>
    <namespace-alias name="Data">Aura\Marshal\Data</namespace-alias>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="false" line="20" namespace="Aura\Marshal\Collection" package="Aura\Marshal">
      <name>GenericCollection</name>
      <extends>\Aura\Marshal\Data</extends>
      <full_name>\Aura\Marshal\Collection\GenericCollection</full_name>
      <docblock>
        <description>Represents a generic collection of records.</description>
        <long-description>
</long-description>
        <tag line="13" name="package" description="Aura.Marshal"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="29" package="Default">
        <name>$type</name>
        <default/>
        <docblock>
          <description>The type for this collection.</description>
          <long-description>
</long-description>
          <tag line="22" name="var" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="40" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
          <tag line="31" name="param" description="An array of records for this collection." type="array" variable="$data">
            <type by_reference="false">\Aura\Marshal\Collection\array</type>
          </tag>
          <tag line="31" name="param" description="The type for this collection." type="\Aura\Marshal\Type\GenericType" variable="$type">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="40">
          <name>$type</name>
          <default/>
          <type>GenericType</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="58" package="Default">
        <name>offsetGet</name>
        <docblock>
          <description>ArrayAccess: Get a key value.</description>
          <long-description>&lt;p&gt;This override from the parent::offsetGet() lets us convert records
lazily using the IdentityMap for the type.&lt;/p&gt;
</long-description>
          <tag line="46" name="param" description="The requested key." type="string" variable="$key">
            <type by_reference="false">\Aura\Marshal\Collection\string</type>
          </tag>
          <tag line="46" name="return" description="" type="mixed">
            <type by_reference="false">\Aura\Marshal\Collection\mixed</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="81" package="Default">
        <name>getIdentityValues</name>
        <docblock>
          <description>Returns an array of all the identity values for the collection.</description>
          <long-description>&lt;p&gt;This will not convert the collection elements to record objects.&lt;/p&gt;
</long-description>
          <tag line="70" name="param" description="The field name to retrieve values for." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Collection\string</type>
          </tag>
          <tag line="70" name="return" description="" type="array">
            <type by_reference="false">\Aura\Marshal\Collection\array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="98" package="Default">
        <name>getFieldValues</name>
        <docblock>
          <description>Returns an array of all values for a single field in the collection.</description>
          <long-description>&lt;p&gt;This will not convert the collection elements to record objects.&lt;/p&gt;
</long-description>
          <tag line="87" name="param" description="The field name to retrieve values for." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Collection\string</type>
          </tag>
          <tag line="87" name="return" description="" type="array">
            <type by_reference="false">\Aura\Marshal\Collection\array</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="114" package="Default">
        <name>isEmpty</name>
        <docblock>
          <description>Is the collection empty?</description>
          <long-description>
</long-description>
          <tag line="107" name="return" description="" type="bool">
            <type by_reference="false">\Aura\Marshal\Collection\bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/Collection/BuilderInterface.php" hash="e97e74fae22d03bb2606ca3e922ada92" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Collection/BuilderInterface.php</error>
    </parse_markers>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <interface namespace="Aura\Marshal\Collection" line="19" package="Aura\Marshal">
      <name>BuilderInterface</name>
      <extends/>
      <full_name>\Aura\Marshal\Collection\BuilderInterface</full_name>
      <docblock>
        <description>An inteface for collection builder objects.</description>
        <long-description>
</long-description>
        <tag line="12" name="package" description="Aura.Marshal"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="30" package="Default">
        <name>newInstance</name>
        <docblock>
          <description>Creates a new collection object.</description>
          <long-description>
</long-description>
          <tag line="21" name="param" description="The type for this collection." type="\Aura\Marshal\Type\GenericType" variable="$type">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
          <tag line="21" name="param" description="Data to load into the collection." type="array" variable="$data">
            <type by_reference="false">\Aura\Marshal\Collection\array</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$type</name>
          <default/>
          <type>GenericType</type>
        </argument>
        <argument line="30">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
    </interface>
  </file>
  <file path="src/Collection/Builder.php" hash="ef481e6dfb733b9f12b81e9e317a698f" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Collection/Builder.php</error>
    </parse_markers>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="false" line="19" namespace="Aura\Marshal\Collection" package="Aura\Marshal">
      <name>Builder</name>
      <extends/>
      <full_name>\Aura\Marshal\Collection\Builder</full_name>
      <docblock>
        <description>Creates a new collection object for a type.</description>
        <long-description>
</long-description>
        <tag line="12" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\Aura\Marshal\Collection\BuilderInterface</implements>
      <method final="false" abstract="false" static="false" visibility="public" line="32" package="Default">
        <name>newInstance</name>
        <docblock>
          <description>Creates a new collection object.</description>
          <long-description>
</long-description>
          <tag line="21" name="param" description="The type for this collection." type="\Aura\Marshal\Type\GenericType" variable="$type">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
          <tag line="21" name="param" description="Data to load into the collection." type="array" variable="$data">
            <type by_reference="false">\Aura\Marshal\Collection\array</type>
          </tag>
          <tag line="21" name="return" description="" type="\Aura\Marshal\Collection\GenericCollection">
            <type by_reference="false">\Aura\Marshal\Collection\GenericCollection</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$type</name>
          <default/>
          <type>GenericType</type>
        </argument>
        <argument line="32">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Record/BuilderInterface.php" hash="7bff1cac163a0fdeb8d84e1c061f8e43" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Record/BuilderInterface.php</error>
    </parse_markers>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <interface namespace="Aura\Marshal\Record" line="19" package="Aura\Marshal">
      <name>BuilderInterface</name>
      <extends/>
      <full_name>\Aura\Marshal\Record\BuilderInterface</full_name>
      <docblock>
        <description>An inteface for RecordBuilder objects.</description>
        <long-description>
</long-description>
        <tag line="12" name="package" description="Aura.Marshal"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="31" package="Default">
        <name>newInstance</name>
        <docblock>
          <description>Creates a new record object.</description>
          <long-description>
</long-description>
          <tag line="21" name="param" description="The type for this record." type="\Aura\Marshal\Type\GenericType" variable="$type">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
          <tag line="21" name="param" description="Data to load into the record. Note that the interface doesn't care what the data looks like." type="mixed" variable="$data">
            <type by_reference="false">\Aura\Marshal\Record\mixed</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$type</name>
          <default/>
          <type>GenericType</type>
        </argument>
        <argument line="31">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="src/Record/Builder.php" hash="36d7a4d797fddfdbdffefaa9e5018159" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Record/Builder.php</error>
    </parse_markers>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="false" line="19" namespace="Aura\Marshal\Record" package="Aura\Marshal">
      <name>Builder</name>
      <extends/>
      <full_name>\Aura\Marshal\Record\Builder</full_name>
      <docblock>
        <description>Creates a new record object for a type.</description>
        <long-description>
</long-description>
        <tag line="12" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\Aura\Marshal\Record\BuilderInterface</implements>
      <method final="false" abstract="false" static="false" visibility="public" line="32" package="Default">
        <name>newInstance</name>
        <docblock>
          <description>Creates a new record object.</description>
          <long-description>
</long-description>
          <tag line="21" name="param" description="The type for this record." type="\Aura\Marshal\Type\GenericType" variable="$type">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
          <tag line="21" name="param" description="Data to load into the record." type="array|object" variable="$data">
            <type by_reference="false">\Aura\Marshal\Record\array</type>
            <type by_reference="false">\Aura\Marshal\Record\object</type>
          </tag>
          <tag line="21" name="return" description="" type="\Aura\Marshal\Record\GenericRecord">
            <type by_reference="false">\Aura\Marshal\Record\GenericRecord</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$type</name>
          <default/>
          <type>GenericType</type>
        </argument>
        <argument line="32">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Record/GenericRecord.php" hash="a8c3de5ce5dc70a6f552c4208aff2918" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Record/GenericRecord.php</error>
    </parse_markers>
    <namespace-alias name="Data">Aura\Marshal\Data</namespace-alias>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="false" line="20" namespace="Aura\Marshal\Record" package="Aura\Marshal">
      <name>GenericRecord</name>
      <extends>\Aura\Marshal\Data</extends>
      <full_name>\Aura\Marshal\Record\GenericRecord</full_name>
      <docblock>
        <description>Represents a single record.</description>
        <long-description>
</long-description>
        <tag line="13" name="package" description="Aura.Marshal"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="29" package="Default">
        <name>$type</name>
        <default/>
        <docblock>
          <description>The type for this record.</description>
          <long-description>
</long-description>
          <tag line="22" name="var" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="40" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
          <tag line="31" name="param" description="An array of fields for this record." type="array" variable="$data">
            <type by_reference="false">\Aura\Marshal\Record\array</type>
          </tag>
          <tag line="31" name="param" description="The type for this record." type="\Aura\Marshal\Type\GenericType" variable="$type">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="40">
          <name>$type</name>
          <default/>
          <type>GenericType</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="55" package="Default">
        <name>__get</name>
        <docblock>
          <description>Gets the value of a field by name.</description>
          <long-description>
</long-description>
          <tag line="46" name="param" description="The requested field name." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Record\string</type>
          </tag>
          <tag line="46" name="return" description="The field value." type="mixed">
            <type by_reference="false">\Aura\Marshal\Record\mixed</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="71" package="Default">
        <name>__set</name>
        <docblock>
          <description>Sets a the value of a field by name.</description>
          <long-description>
</long-description>
          <tag line="60" name="param" description="The requested field name." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Record\string</type>
          </tag>
          <tag line="60" name="param" description="The value to set the field to." type="mixed" variable="$value">
            <type by_reference="false">\Aura\Marshal\Record\mixed</type>
          </tag>
          <tag line="60" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Record\void</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
        <argument line="71">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="85" package="Default">
        <name>__isset</name>
        <docblock>
          <description>Does a certain field exist in the record?</description>
          <long-description>
</long-description>
          <tag line="76" name="param" description="The requested field name." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Record\string</type>
          </tag>
          <tag line="76" name="return" description="" type="bool">
            <type by_reference="false">\Aura\Marshal\Record\bool</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="99" package="Default">
        <name>__unset</name>
        <docblock>
          <description>Unsets a field in the record.</description>
          <long-description>
</long-description>
          <tag line="90" name="param" description="The requested field name." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Record\string</type>
          </tag>
          <tag line="90" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Record\void</type>
          </tag>
        </docblock>
        <argument line="99">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="115" package="Default">
        <name>offsetGet</name>
        <docblock>
          <description>ArrayAccess: Gets a field value by name; if the field is based on a
relation to a foreign type, this will get the related record or
collection.</description>
          <long-description>
</long-description>
          <tag line="104" name="param" description="The requested field name." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Record\string</type>
          </tag>
          <tag line="104" name="return" description="The field value." type="mixed">
            <type by_reference="false">\Aura\Marshal\Record\mixed</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="141" package="Default">
        <name>offsetUnset</name>
        <docblock>
          <description>ArrayAccess: Unsets a field in the record; this leaves the array key
in place and sets it to null.</description>
          <long-description>
</long-description>
          <tag line="131" name="param" description="The requested field name." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Record\string</type>
          </tag>
          <tag line="131" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Record\void</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Relation/HasManyThrough.php" hash="611a52b87990d094e1c28ab2dcd0ed3a" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Relation/HasManyThrough.php</error>
      <notice line="63">Name of argument $type does not match with function Docblock</notice>
      <notice line="63">Name of argument $name does not match with function Docblock</notice>
      <notice line="63">Argument $info is missing from the function Docblock</notice>
      <notice line="63">Argument $manager is missing from the function Docblock</notice>
    </parse_markers>
    <namespace-alias name="Exception">Aura\Marshal\Exception</namespace-alias>
    <namespace-alias name="Manager">Aura\Marshal\Manager</namespace-alias>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="false" line="22" namespace="Aura\Marshal\Relation" package="Aura\Marshal">
      <name>HasManyThrough</name>
      <extends>\Aura\Marshal\Relation\AbstractRelation</extends>
      <full_name>\Aura\Marshal\Relation\HasManyThrough</full_name>
      <docblock>
        <description>Represents a relationship where a native record has many foreign records
(i.e., a foreign collection) mapped through an association type.</description>
        <long-description>
</long-description>
        <tag line="14" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\Aura\Marshal\Relation\RelationInterface</implements>
      <property final="false" static="false" visibility="protected" line="32" package="Default">
        <name>$through_type</name>
        <default/>
        <docblock>
          <description>Native and foreign records are mapped to each other through this
association type.</description>
          <long-description>
</long-description>
          <tag line="24" name="var" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="42" package="Default">
        <name>$through_native_field</name>
        <default/>
        <docblock>
          <description>The field name for the native side of the association mapping in the
"through" type.</description>
          <long-description>
</long-description>
          <tag line="34" name="var" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Relation\string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" package="Default">
        <name>$through_foreign_field</name>
        <default/>
        <docblock>
          <description>The field name for the foreign side of the association mapping in the
"through" type.</description>
          <long-description>
</long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Relation\string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="63" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
          <tag line="54" name="param" description="An array of relationship definition information." type="array" variable="$info">
            <type by_reference="false">\Aura\Marshal\Relation\array</type>
          </tag>
          <tag line="54" name="param" description="The type manager." type="\Aura\Marshal\Manager" variable="$manager">
            <type by_reference="false">\Aura\Marshal\Manager</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$manager</name>
          <default/>
          <type>Manager</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="93" package="Default">
        <name>getForRecord</name>
        <docblock>
          <description>Returns the related foreign collection for a native record.</description>
          <long-description>
</long-description>
          <tag line="84" name="param" description="The native record." type="mixed" variable="$record">
            <type by_reference="false">\Aura\Marshal\Relation\mixed</type>
          </tag>
          <tag line="84" name="return" description="" type="\Aura\Marshal\Relation\GenericCollection">
            <type by_reference="false">\Aura\Marshal\Relation\GenericCollection</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$record</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Relation/Builder.php" hash="fcf40a2305e5c83bbbda6b289c085d6c" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Relation/Builder.php</error>
      <notice line="50">Name of argument $type does not match with function Docblock</notice>
      <notice line="50">Name of argument $name does not match with function Docblock</notice>
      <notice line="50">Name of argument $info does not match with function Docblock</notice>
      <notice line="50">Argument $manager is missing from the function Docblock</notice>
    </parse_markers>
    <namespace-alias name="Exception">Aura\Marshal\Exception</namespace-alias>
    <namespace-alias name="Manager">Aura\Marshal\Manager</namespace-alias>
    <class final="false" abstract="false" line="20" namespace="Aura\Marshal\Relation" package="Aura\Marshal">
      <name>Builder</name>
      <extends/>
      <full_name>\Aura\Marshal\Relation\Builder</full_name>
      <docblock>
        <description>A builder to create relationship definition objects.</description>
        <long-description>
</long-description>
        <tag line="13" name="package" description="Aura.Marshal"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="29" package="Default">
        <name>$relationship_class</name>
        <default>array(
        'belongs_to'       =&gt; 'Aura\Marshal\Relation\BelongsTo'</default>
        <docblock>
          <description>A map of relationships to classes.</description>
          <long-description>
</long-description>
          <tag line="22" name="var" description="" type="array">
            <type by_reference="false">\Aura\Marshal\Relation\array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="50" package="Default">
        <name>newInstance</name>
        <docblock>
          <description>Builds and returns a relation object.</description>
          <long-description>
</long-description>
          <tag line="36" name="param" description="The name of the record field where the related data will be placed." type="string" variable="$name">
            <type by_reference="false">\Aura\Marshal\Relation\string</type>
          </tag>
          <tag line="36" name="param" description="An array of relationship definition information." type="array" variable="$info">
            <type by_reference="false">\Aura\Marshal\Relation\array</type>
          </tag>
          <tag line="36" name="param" description="An type manager." type="\Aura\Marshal\Manager" variable="$manager">
            <type by_reference="false">\Aura\Marshal\Manager</type>
          </tag>
          <tag line="36" name="return" description="" type="\Aura\Marshal\Relation\AbstractRelation">
            <type by_reference="false">\Aura\Marshal\Relation\AbstractRelation</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$manager</name>
          <default/>
          <type>Manager</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Relation/HasOne.php" hash="6013c50a45ba19cd2095c4aedfb8f97e" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Relation/HasOne.php</error>
    </parse_markers>
    <class final="false" abstract="false" line="19" namespace="Aura\Marshal\Relation" package="Aura\Marshal">
      <name>HasOne</name>
      <extends>\Aura\Marshal\Relation\AbstractRelation</extends>
      <full_name>\Aura\Marshal\Relation\HasOne</full_name>
      <docblock>
        <description>Represents a relationship where the native entity has one of the foreign
entity.</description>
        <long-description>
</long-description>
        <tag line="11" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\Aura\Marshal\Relation\RelationInterface</implements>
      <method final="false" abstract="false" static="false" visibility="public" line="30" package="Default">
        <name>getForRecord</name>
        <docblock>
          <description>Returns the related foreign record for a native record.</description>
          <long-description>
</long-description>
          <tag line="21" name="param" description="The native record." type="mixed" variable="$record">
            <type by_reference="false">\Aura\Marshal\Relation\mixed</type>
          </tag>
          <tag line="21" name="return" description="" type="\Aura\Marshal\Relation\GenericRecord">
            <type by_reference="false">\Aura\Marshal\Relation\GenericRecord</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$record</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Relation/BelongsTo.php" hash="04ff0d1dcf7682f4ea8091657dd95178" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Relation/BelongsTo.php</error>
    </parse_markers>
    <class final="false" abstract="false" line="19" namespace="Aura\Marshal\Relation" package="Aura\Marshal">
      <name>BelongsTo</name>
      <extends>\Aura\Marshal\Relation\AbstractRelation</extends>
      <full_name>\Aura\Marshal\Relation\BelongsTo</full_name>
      <docblock>
        <description>Represents a relationship where the native record belongs to a foreign
record.</description>
        <long-description>
</long-description>
        <tag line="11" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\Aura\Marshal\Relation\RelationInterface</implements>
      <method final="false" abstract="false" static="false" visibility="public" line="30" package="Default">
        <name>getForRecord</name>
        <docblock>
          <description>Returns the related foreign record for a native record.</description>
          <long-description>
</long-description>
          <tag line="21" name="param" description="The native record." type="mixed" variable="$record">
            <type by_reference="false">\Aura\Marshal\Relation\mixed</type>
          </tag>
          <tag line="21" name="return" description="" type="\Aura\Marshal\Relation\GenericRecord">
            <type by_reference="false">\Aura\Marshal\Relation\GenericRecord</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$record</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Relation/RelationInterface.php" hash="b1bc3a313a302aca8a1b0937ae2f9025" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Relation/RelationInterface.php</error>
    </parse_markers>
    <interface namespace="Aura\Marshal\Relation" line="18" package="Aura\Marshal">
      <name>RelationInterface</name>
      <extends/>
      <full_name>\Aura\Marshal\Relation\RelationInterface</full_name>
      <docblock>
        <description>An interface for relationship description objects.</description>
        <long-description>
</long-description>
        <tag line="11" name="package" description="Aura.Marshal"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="30" package="Default">
        <name>getForRecord</name>
        <docblock>
          <description>Returns the foreign record or collection for a native record.</description>
          <long-description>
</long-description>
          <tag line="20" name="param" description="The record to get the related record or collection for." type="mixed" variable="$record">
            <type by_reference="false">\Aura\Marshal\Relation\mixed</type>
          </tag>
          <tag line="20" name="return" description="" type="\Aura\Marshal\Relation\GenericRecord|\Aura\Marshal\Relation\GenericCollection">
            <type by_reference="false">\Aura\Marshal\Relation\GenericRecord</type>
            <type by_reference="false">\Aura\Marshal\Relation\GenericCollection</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$record</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="src/Relation/AbstractRelation.php" hash="a1ffa0609df7b7a5cd0813a7509280d6" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Relation/AbstractRelation.php</error>
      <notice line="68">Name of argument $type does not match with function Docblock</notice>
      <notice line="68">Name of argument $name does not match with function Docblock</notice>
      <notice line="68">Argument $info is missing from the function Docblock</notice>
      <notice line="68">Argument $manager is missing from the function Docblock</notice>
    </parse_markers>
    <namespace-alias name="Exception">Aura\Marshal\Exception</namespace-alias>
    <namespace-alias name="Manager">Aura\Marshal\Manager</namespace-alias>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="true" line="21" namespace="Aura\Marshal\Relation" package="Aura\Marshal">
      <name>AbstractRelation</name>
      <extends/>
      <full_name>\Aura\Marshal\Relation\AbstractRelation</full_name>
      <docblock>
        <description>Represents a relationship definition between two types.</description>
        <long-description>
</long-description>
        <tag line="14" name="package" description="Aura.Marshal"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="30" package="Default">
        <name>$manager</name>
        <default/>
        <docblock>
          <description>The type manager object.</description>
          <long-description>
</long-description>
          <tag line="23" name="var" description="" type="\Aura\Marshal\Manager">
            <type by_reference="false">\Aura\Marshal\Manager</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="39" package="Default">
        <name>$foreign_type</name>
        <default/>
        <docblock>
          <description>The foreign type object.</description>
          <long-description>
</long-description>
          <tag line="32" name="var" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" package="Default">
        <name>$native_field</name>
        <default/>
        <docblock>
          <description>The field in the native record to match against.</description>
          <long-description>
</long-description>
          <tag line="41" name="var" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Relation\string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="57" package="Default">
        <name>$foreign_field</name>
        <default/>
        <docblock>
          <description>The field in the foreign record to match against.</description>
          <long-description>
</long-description>
          <tag line="50" name="var" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Relation\string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="68" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
          <tag line="59" name="param" description="An array of relationship definition information." type="array" variable="$info">
            <type by_reference="false">\Aura\Marshal\Relation\array</type>
          </tag>
          <tag line="59" name="param" description="The type manager." type="\Aura\Marshal\Manager" variable="$manager">
            <type by_reference="false">\Aura\Marshal\Manager</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="68">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="68">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
        <argument line="68">
          <name>$manager</name>
          <default/>
          <type>Manager</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Relation/HasMany.php" hash="300247b0feb79e93efeee2fff34fd3b8" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Relation/HasMany.php</error>
    </parse_markers>
    <class final="false" abstract="false" line="19" namespace="Aura\Marshal\Relation" package="Aura\Marshal">
      <name>HasMany</name>
      <extends>\Aura\Marshal\Relation\AbstractRelation</extends>
      <full_name>\Aura\Marshal\Relation\HasMany</full_name>
      <docblock>
        <description>Represents a relationship where a native record has many foreign records
(i.e., a foreign collection).</description>
        <long-description>
</long-description>
        <tag line="11" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\Aura\Marshal\Relation\RelationInterface</implements>
      <method final="false" abstract="false" static="false" visibility="public" line="30" package="Default">
        <name>getForRecord</name>
        <docblock>
          <description>Returns the related foreign collection for a native record.</description>
          <long-description>
</long-description>
          <tag line="21" name="param" description="The native record." type="mixed" variable="$record">
            <type by_reference="false">\Aura\Marshal\Relation\mixed</type>
          </tag>
          <tag line="21" name="return" description="" type="\Aura\Marshal\Relation\GenericCollection">
            <type by_reference="false">\Aura\Marshal\Relation\GenericCollection</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$record</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Type/GenericType.php" hash="b427854efd36827d41f96da67f503061" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Type/GenericType.php</error>
      <notice line="164">Name of argument $collection_builder does not match with function Docblock</notice>
      <notice line="417">Argument $name is missing from the function Docblock</notice>
    </parse_markers>
    <namespace-alias name="CollectionBuilderInterface">Aura\Marshal\Collection\BuilderInterface</namespace-alias>
    <namespace-alias name="Data">Aura\Marshal\Data</namespace-alias>
    <namespace-alias name="Exception">Aura\Marshal\Exception</namespace-alias>
    <namespace-alias name="RecordBuilderInterface">Aura\Marshal\Record\BuilderInterface</namespace-alias>
    <namespace-alias name="RelationInterface">Aura\Marshal\Relation\RelationInterface</namespace-alias>
    <class final="false" abstract="false" line="24" namespace="Aura\Marshal\Type" package="Aura\Marshal">
      <name>GenericType</name>
      <extends>\Aura\Marshal\Data</extends>
      <full_name>\Aura\Marshal\Type\GenericType</full_name>
      <docblock>
        <description>Describes a particular type within the domain, and retains an IdentityMap
of records for the type. Converts loaded data to record objects lazily.</description>
        <long-description>
</long-description>
        <tag line="16" name="package" description="Aura.Marshal"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" package="Default">
        <name>$collection_builder</name>
        <default/>
        <docblock>
          <description>A builder to create collection objects for this type.</description>
          <long-description>
</long-description>
          <tag line="26" name="var" description="" type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$identity_field</name>
        <default/>
        <docblock>
          <description>The record field representing its unique identifier value. The
IdentityMap will be keyed on these values.</description>
          <long-description>
</long-description>
          <tag line="35" name="var" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" package="Default">
        <name>$record_builder</name>
        <default/>
        <docblock>
          <description>A builder to create record objects for this type.</description>
          <long-description>
</long-description>
          <tag line="45" name="var" description="" type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="62" package="Default">
        <name>$record_class</name>
        <default/>
        <docblock>
          <description>The class expected from the record builder. This is used to determine
if elements in the IdentityMap have been converted to record objects.</description>
          <long-description>
</long-description>
          <tag line="54" name="var" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" package="Default">
        <name>$relation</name>
        <default>array()</default>
        <docblock>
          <description>An array of relationship descriptions, where the key is a
field name for the record and the value is a relation object.</description>
          <long-description>
</long-description>
          <tag line="64" name="var" description="" type="array">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="84" package="Default">
        <name>setIdentityField</name>
        <docblock>
          <description>Sets the name of the field that uniquely identifies each record for
this type.</description>
          <long-description>
</long-description>
          <tag line="74" name="param" description="The identity field name." type="string" variable="$identity_field">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
          <tag line="74" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Type\void</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$identity_field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="97" package="Default">
        <name>getIdentityField</name>
        <docblock>
          <description>Returns the name of the field that uniquely identifies each record of
this type.</description>
          <long-description>
</long-description>
          <tag line="89" name="return" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="112" package="Default">
        <name>setRecordClass</name>
        <docblock>
          <description>Sets the name of the expected record class; this is used to determine
if elements in the IdentityMap have been converted to record objects.</description>
          <long-description>
</long-description>
          <tag line="102" name="param" description="The identity field name." type="string" variable="$record_class">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
          <tag line="102" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Type\void</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$record_class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="124" package="Default">
        <name>getRecordClass</name>
        <docblock>
          <description>Returns the name of the expected record class.</description>
          <long-description>
</long-description>
          <tag line="117" name="return" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="138" package="Default">
        <name>setRecordBuilder</name>
        <docblock>
          <description>Sets the builder object to create record objects.</description>
          <long-description>
</long-description>
          <tag line="129" name="param" description="The builder object." type="\Aura\Marshal\Record\BuilderInterface" variable="$record_builder">
            <type by_reference="false">\Aura\Marshal\Record\BuilderInterface</type>
          </tag>
          <tag line="129" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Type\void</type>
          </tag>
        </docblock>
        <argument line="138">
          <name>$record_builder</name>
          <default/>
          <type>RecordBuilderInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="150" package="Default">
        <name>getRecordBuilder</name>
        <docblock>
          <description>Returns the builder that creates record objects.</description>
          <long-description>
</long-description>
          <tag line="143" name="return" description="" type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="164" package="Default">
        <name>setCollectionBuilder</name>
        <docblock>
          <description>Sets the builder object to create collection objects.</description>
          <long-description>
</long-description>
          <tag line="155" name="param" description="The builder object." type="\Aura\Marshal\Collection\BuilderInterface" variable="$collectionBuilder">
            <type by_reference="false">\Aura\Marshal\Collection\BuilderInterface</type>
          </tag>
          <tag line="155" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Type\void</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$collection_builder</name>
          <default/>
          <type>CollectionBuilderInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="176" package="Default">
        <name>getCollectionBuilder</name>
        <docblock>
          <description>Returns the builder that creates collection objects.</description>
          <long-description>
</long-description>
          <tag line="169" name="return" description="" type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="207" package="Default">
        <name>load</name>
        <docblock>
          <description>Loads the IdentityMap for this type with data for record objects.</description>
          <long-description>&lt;p&gt;Typically, the $data value is a sequential array of associative arrays.
As long as the $data value can be iterated over and accessed as an
array, you can pass in any kind of $data.&lt;/p&gt;

&lt;p&gt;The elements from $data will be placed into the IdentityMap; the
IdentityMap key will be the value of the identity field in the element.&lt;/p&gt;

&lt;p&gt;You can call load() multiple times, but records already in the
IdentityMap will not be overwritten.&lt;/p&gt;

&lt;p&gt;The loaded elements are cast to objects; this allows consistent
addressing of elements before and after conversion to record objects.&lt;/p&gt;

&lt;p&gt;The loaded elements will be converted to record objects by the
record builder only as you request them from the IdentityMap.&lt;/p&gt;
</long-description>
          <tag line="181" name="param" description="Record data to load into the IdentityMap." type="array" variable="$data">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
          <tag line="181" name="return" description="The identity values from the data elements, regardless of whether they were loaded or not." type="array">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
        </docblock>
        <argument line="207">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="232" package="Default">
        <name>getIdentityValues</name>
        <docblock>
          <description>Returns the array keys for the for the records in the IdentityMap;
the keys were generated at load() time from the identity field values.</description>
          <long-description>&lt;p&gt;This will not create record objects.&lt;/p&gt;
</long-description>
          <tag line="222" name="return" description="" type="array">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="250" package="Default">
        <name>getFieldValues</name>
        <docblock>
          <description>Returns the values for a particular field for all the records in the
IdentityMap.</description>
          <long-description>&lt;p&gt;This will not create record objects.&lt;/p&gt;
</long-description>
          <tag line="237" name="param" description="The field name to get values for." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
          <tag line="237" name="return" description="An array of key-value pairs where the key is the identity value and the value is the requested field value." type="array">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
        </docblock>
        <argument line="250">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="271" package="Default">
        <name>getRecord</name>
        <docblock>
          <description>Retrieves a single entity from the IdentityMap by the value of its
identity field; the entity will be converted to a record object if it
is not already an object of the proper class.</description>
          <long-description>
</long-description>
          <tag line="259" name="param" description="The idenitty value of the record to be retrieved." type="int" variable="$identity_value">
            <type by_reference="false">\Aura\Marshal\Type\int</type>
          </tag>
          <tag line="259" name="return" description="A record object via the record builder." type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
        <argument line="271">
          <name>$identity_value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="300" package="Default">
        <name>getRecordByField</name>
        <docblock>
          <description>Retrieves the first entity from the IdentityMap that matches the value
of an arbitrary field; the entity will be converted to a record object
if it is not already an object of the proper class.</description>
          <long-description>&lt;p&gt;N.b.: This is not performant for large sets; it performs a loop through
each entity in the IdentityMap and checks the field value.&lt;/p&gt;
</long-description>
          <tag line="284" name="param" description="The field to match on." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
          <tag line="284" name="param" description="The value of the field to match on." type="mixed" variable="$value">
            <type by_reference="false">\Aura\Marshal\Type\mixed</type>
          </tag>
          <tag line="284" name="return" description="A record object via the record builder." type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
        <argument line="300">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
        <argument line="300">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="331" package="Default">
        <name>getCollection</name>
        <docblock>
          <description>Retrieves a collection of elements from the IdentityMap by the values
of their identity fields; each entity will be converted to a record
object if it is not already an object of the proper class.</description>
          <long-description>
</long-description>
          <tag line="320" name="param" description="An array of identity values to retrieve." type="array" variable="$identity_values">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
          <tag line="320" name="return" description="A collection object via the collection builder." type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
        <argument line="331">
          <name>$identity_values</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="362" package="Default">
        <name>getCollectionByField</name>
        <docblock>
          <description>Retrieves a collection of objects from the IdentityMap matching the
value of an arbitrary field; these will be converted to records
if they are not already objects of the proper class.</description>
          <long-description>&lt;p&gt;N.b.: This is not performant for large sets; it performs a loop through
each entity in the IdentityMap and checks the field value.&lt;/p&gt;

&lt;p&gt;N.b.: The value to be matched can be an array of values, so that you
can get many values of the field being matched.&lt;/p&gt;
</long-description>
          <tag line="342" name="param" description="The field to match on." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
          <tag line="342" name="param" description="The value of the field to match on; if an array, any value in the array will be counted as a match." type="mixed" variable="$values">
            <type by_reference="false">\Aura\Marshal\Type\mixed</type>
          </tag>
          <tag line="342" name="return" description="A collection object via the collection builder." type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
        <argument line="362">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
        <argument line="362">
          <name>$values</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="402" package="Default">
        <name>setRelation</name>
        <docblock>
          <description>Sets a relationship to another entity type, assigning it to a field
name to be used in record objects.</description>
          <long-description>
</long-description>
          <tag line="389" name="param" description="The field name to use for the related record or collection." type="string" variable="$name">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
          <tag line="389" name="param" description="The relationship definition object." type="\Aura\Marshal\Relation\RelationInterface" variable="$relation">
            <type by_reference="false">\Aura\Marshal\Relation\RelationInterface</type>
          </tag>
          <tag line="389" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Type\void</type>
          </tag>
        </docblock>
        <argument line="402">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="402">
          <name>$relation</name>
          <default/>
          <type>RelationInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="417" package="Default">
        <name>getRelation</name>
        <docblock>
          <description>Returns a relationship definition object by name.</description>
          <long-description>
</long-description>
          <tag line="410" name="return" description="" type="\Aura\Marshal\Type\AbstractRelation">
            <type by_reference="false">\Aura\Marshal\Type\AbstractRelation</type>
          </tag>
        </docblock>
        <argument line="417">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="429" package="Default">
        <name>getRelationNames</name>
        <docblock>
          <description>Returns all the names of the relationship definition objects.</description>
          <long-description>
</long-description>
          <tag line="422" name="return" description="" type="array">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/Type/Builder.php" hash="f603f22b444ec5c9a661f4d1c9b8b9d8" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Type/Builder.php</error>
    </parse_markers>
    <namespace-alias name="CollectionBuilder">Aura\Marshal\Collection\Builder</namespace-alias>
    <namespace-alias name="Exception">Aura\Marshal\Exception</namespace-alias>
    <namespace-alias name="RecordBuilder">Aura\Marshal\Record\Builder</namespace-alias>
    <class final="false" abstract="false" line="21" namespace="Aura\Marshal\Type" package="Aura\Marshal">
      <name>Builder</name>
      <extends/>
      <full_name>\Aura\Marshal\Type\Builder</full_name>
      <docblock>
        <description>Builds a type object from an array of description information.</description>
        <long-description>
</long-description>
        <tag line="14" name="package" description="Aura.Marshal"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="49" package="Default">
        <name>newInstance</name>
        <docblock>
          <description>Returns a new type instance.</description>
          <long-description>&lt;p&gt;The &lt;code&gt;$info&lt;/code&gt; array should have four keys:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;'identity_field'&lt;/code&gt; (string): The name of the identity field for
records of this type. This key is required.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;record_class&lt;/code&gt; (string): The name of the record class returned by the
record Builder. This key is optional, and defaults to
&lt;code&gt;Aura\Marshal\Record&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;record_builder&lt;/code&gt; (Record\BuilderInterface): A builder to create
record objects for the type. This key is optional, and defaults to a
new Record\Builder object.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;collection_builder&lt;/code&gt; (Collection\BuilderInterface): A
A builder to create collection objects for the type. This key
is optional, and defaults to a new Collection\Builder object.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</long-description>
          <tag line="23" name="param" description="An array of information about the type." type="array" variable="$info">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
          <tag line="23" name="return" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Exception.php" hash="c01fbedfa526bb4d25d0f42c52ddd428" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Exception.php</error>
    </parse_markers>
    <class final="false" abstract="false" line="18" namespace="Aura\Marshal" package="Aura\Marshal">
      <name>Exception</name>
      <extends>\Exception</extends>
      <full_name>\Aura\Marshal\Exception</full_name>
      <docblock>
        <description>A package-level exception.</description>
        <long-description>
</long-description>
        <tag line="11" name="package" description="Aura.Marshal"/>
      </docblock>
    </class>
  </file>
  <file path="config/default.php" hash="98a9de80a61e6b13ccc6f26e0aac4c9f" package="Default">
    <docblock>
      <description>Package prefix for autoloader.</description>
      <long-description>
</long-description>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file config/default.php</error>
    </parse_markers>
    <function namespace="default" line="7" package="Default">
      <name>Closure</name>
      <type>closure</type>
    </function>
  </file>
  <file path="src.php" hash="d06879b4a109af7e58ea92e170d27448" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File src.php</error>
    </parse_markers>
    <include type="Require" line="2">
      <name>/src/Data.php</name>
    </include>
    <include type="Require" line="3">
      <name>/src/DataIterator.php</name>
    </include>
    <include type="Require" line="4">
      <name>/src/Collection/BuilderInterface.php</name>
    </include>
    <include type="Require" line="5">
      <name>/src/Collection/Builder.php</name>
    </include>
    <include type="Require" line="6">
      <name>/src/Collection/GenericCollection.php</name>
    </include>
    <include type="Require" line="7">
      <name>/src/Exception.php</name>
    </include>
    <include type="Require" line="8">
      <name>/src/Manager.php</name>
    </include>
    <include type="Require" line="9">
      <name>/src/Record/BuilderInterface.php</name>
    </include>
    <include type="Require" line="10">
      <name>/src/Record/Builder.php</name>
    </include>
    <include type="Require" line="11">
      <name>/src/Record/GenericRecord.php</name>
    </include>
    <include type="Require" line="12">
      <name>/src/Relation/RelationInterface.php</name>
    </include>
    <include type="Require" line="13">
      <name>/src/Relation/AbstractRelation.php</name>
    </include>
    <include type="Require" line="14">
      <name>/src/Relation/BelongsTo.php</name>
    </include>
    <include type="Require" line="15">
      <name>/src/Relation/Builder.php</name>
    </include>
    <include type="Require" line="16">
      <name>/src/Relation/HasMany.php</name>
    </include>
    <include type="Require" line="17">
      <name>/src/Relation/HasManyThrough.php</name>
    </include>
    <include type="Require" line="18">
      <name>/src/Relation/HasOne.php</name>
    </include>
    <include type="Require" line="19">
      <name>/src/Type/Builder.php</name>
    </include>
    <include type="Require" line="20">
      <name>/src/Type/GenericType.php</name>
    </include>
  </file>
  <package name="Aura">
    <package name="Marshal"/>
  </package>
  <package name="Default"/>
  <namespace name="Aura">
    <namespace name="Marshal">
      <namespace name="Collection"/>
      <namespace name="Record"/>
      <namespace name="Relation"/>
      <namespace name="Type"/>
    </namespace>
  </namespace>
  <namespace name="default"/>
  <marker>todo</marker>
  <marker>fixme</marker>
</project>
