<?xml version="1.0"?>
<project version="0.17.2" title="Aura Project for PHP: Aura.Autoload">
  <file path="src/Aura/Autoload/Exception/AlreadyLoaded.php" hash="7e3cab95b603b3c2af2c0fcc9759aa48" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Autoload\Exception" package="Aura\Autoload">
      <name>AlreadyLoaded</name>
      <extends>\Aura\Autoload\Exception</extends>
      <full_name>\Aura\Autoload\Exception\AlreadyLoaded</full_name>
      <docblock>
        <description>Indicates a class has already been loaded.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Autoload"/>
      </docblock>
    </class>
  </file>
  <file path="src/Aura/Autoload/Exception/NotFound.php" hash="721d933ab441ac8683fe52dd87d9f6a1" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Autoload\Exception" package="Aura\Autoload">
      <name>NotFound</name>
      <extends>\Aura\Autoload\Exception</extends>
      <full_name>\Aura\Autoload\Exception\NotFound</full_name>
      <docblock>
        <description>Indicates the Loader failed to find a class file.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Autoload"/>
      </docblock>
    </class>
  </file>
  <file path="src/Aura/Autoload/Exception.php" hash="eb49f0026d17f9266c6d255329b881a4" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Autoload" package="Aura\Autoload">
      <name>Exception</name>
      <extends>\Exception</extends>
      <full_name>\Aura\Autoload\Exception</full_name>
      <docblock>
        <description>Generic package exception.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Autoload"/>
      </docblock>
    </class>
  </file>
  <file path="src/Aura/Autoload/Loader.php" hash="7716690d8d9d73cdb0b2974e4abc8075" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Autoload" package="Default">
      <name>Loader</name>
      <extends/>
      <full_name>\Aura\Autoload\Loader</full_name>
      <docblock>
        <description>An SPL autoloader adhering to [PSR-0](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md).</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="28" package="Default">
        <name>$loaded</name>
        <default>array()</default>
        <docblock>
          <description>Classes and interfaces loaded by the autoloader; the key is the class
name and the value is the file name.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="37" package="Default">
        <name>$prefixes</name>
        <default>array()</default>
        <docblock>
          <description>A map of class name prefixes to directory names.</description>
          <long-description/>
          <tag line="30" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="46" package="Default">
        <name>$classes</name>
        <default>array()</default>
        <docblock>
          <description>A map of exact class names to their file paths.</description>
          <long-description/>
          <tag line="39" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="55" package="Default">
        <name>register</name>
        <docblock>
          <description>Registers this autoloader with SPL.</description>
          <long-description/>
          <tag line="48" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="67" package="Default">
        <name>unregister</name>
        <docblock>
          <description>Unregisters this autoloader from SPL.</description>
          <long-description/>
          <tag line="60" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="87" package="Default">
        <name>addPrefix</name>
        <docblock>
          <description>Adds a directory path for a class name prefix.</description>
          <long-description/>
          <tag line="72" name="param" description="The class name prefix, e.g. 'Aura\Framework\\' or 'Zend_'." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="72" name="param" description="The absolute path leading to the classes for that prefix, e.g. `'/path/to/system/package/Aura.Framework-dev/src'`. Note that the classes must thereafter be in subdirectories of their own, e.g. `'/Aura/Framework/'." type="array|string" variable="$paths">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="72" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="87">
          <name>$paths</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="118" package="Default">
        <name>addPrefixes</name>
        <docblock>
          <description>Add an array of prefixed name spaces</description>
          <long-description>&lt;p&gt;An array of associative name and paths.&lt;/p&gt;

&lt;p&gt;paths can also be an array or a string&lt;/p&gt;

&lt;p&gt;Eg :&lt;/p&gt;

&lt;p&gt;$loader-&gt;addPrefixes(array(
     'Zend_'=&gt; '/path/to/zend/library',
     'Aura' =&gt; array(
         '/path/to/project/Aura.Router/src/',
         '/path/to/project/Aura.Di/src/'
     ),
     'Vendor' =&gt; array(
         '/path/to/project/Vendor.Package/src/',
     ),
     'Symfony/Component' =&gt; 'path/to/Symfony/Component',
 ));&lt;/p&gt;</long-description>
          <tag line="94" name="param" description="" type="array" variable="$prefixes">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$prefixes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="132" package="Default">
        <name>getPrefixes</name>
        <docblock>
          <description>Returns the list of all class name prefixes and their paths.</description>
          <long-description/>
          <tag line="125" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="148" package="Default">
        <name>setClass</name>
        <docblock>
          <description>Sets the file path for an exact class name.</description>
          <long-description/>
          <tag line="137" name="param" description="The exact class name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="param" description="The file path to that class." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="148">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="163" package="Default">
        <name>setClasses</name>
        <docblock>
          <description>Sets all file paths for all class names.</description>
          <long-description/>
          <tag line="153" name="param" description="An array of class-to-file mappings where the key is the class name and the value is the file path." type="array" variable="$classes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="153" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$classes</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="175" package="Default">
        <name>getClasses</name>
        <docblock>
          <description>Returns the list of exact class names and their paths.</description>
          <long-description/>
          <tag line="168" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="188" package="Default">
        <name>getLoaded</name>
        <docblock>
          <description>Returns the list of classes and interfaces loaded by the autoloader.</description>
          <long-description/>
          <tag line="180" name="return" description="An array of key-value pairs where the key is the class or interface name and the value is the file name." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="206" package="Default">
        <name>load</name>
        <docblock>
          <description>Loads a class or interface using the class name prefix and path,
falling back to the include-path if not found.</description>
          <long-description/>
          <tag line="193" name="param" description="The class or interface to load." type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="193" name="throws" description="when the file for the class or interface is not found." type="\Exception\NotFound">
            <type by_reference="false">\Exception\NotFound</type>
          </tag>
        </docblock>
        <argument line="206">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="230" package="Default">
        <name>find</name>
        <docblock>
          <description>Finds the path to a class or interface using the prefixes and
include-path.</description>
          <long-description/>
          <tag line="220" name="param" description="The class or interface to find." type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="220" name="return" description="absolute path to the class or interface." type="\Aura\Autoload\The">
            <type by_reference="false">\Aura\Autoload\The</type>
          </tag>
        </docblock>
        <argument line="230">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="288" package="Default">
        <name>classToFile</name>
        <docblock>
          <description>PSR-0 compliant class-to-file inflector.</description>
          <long-description/>
          <tag line="279" name="param" description="The name of the class or interface to load." type="string" variable="$spec">
            <type by_reference="false">string</type>
          </tag>
          <tag line="279" name="return" description="The filename version of the class or interface." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="288">
          <name>$spec</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <package name="Aura">
    <package name="Autoload"/>
  </package>
  <package name="Default"/>
  <namespace name="Aura">
    <namespace name="Autoload">
      <namespace name="Exception"/>
    </namespace>
  </namespace>
  <marker>todo</marker>
  <marker>fixme</marker>
</project>
