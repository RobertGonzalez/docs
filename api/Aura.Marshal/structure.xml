<?xml version="1.0"?>
<project version="0.16.0" title="Aura Project for PHP: Aura.Marshal">
  <file path="src/Aura/Marshal/Manager.php" hash="12b620ef66e2321733266ce712660ff7" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Manager.php</error>
      <error line="175">No DocBlock was found for Method setRelation</error>
    </parse_markers>
    <namespace-alias name="TypeBuilder">Aura\Marshal\Type\Builder</namespace-alias>
    <namespace-alias name="RelationBuilder">Aura\Marshal\Relation\Builder</namespace-alias>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="false" line="21" namespace="Aura\Marshal" package="Aura\Marshal">
      <name>Manager</name>
      <extends/>
      <full_name>\Aura\Marshal\Manager</full_name>
      <docblock>
        <description>A manager for the types in the domain model.</description>
        <long-description>
</long-description>
        <tag line="14" name="package" description="Aura.Marshal"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="30" package="Default">
        <name>$type_builder</name>
        <default/>
        <docblock>
          <description>A builder for type objects.</description>
          <long-description>
</long-description>
          <tag line="23" name="var" description="" type="\Aura\Marshal\Type\Builder">
            <type by_reference="false">\Aura\Marshal\Type\Builder</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="39" package="Default">
        <name>$relation_builder</name>
        <default/>
        <docblock>
          <description>A builder for relation objects.</description>
          <long-description>
</long-description>
          <tag line="32" name="var" description="" type="\Aura\Marshal\Relation\Builder">
            <type by_reference="false">\Aura\Marshal\Relation\Builder</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" package="Default">
        <name>$types</name>
        <default/>
        <docblock>
          <description>An array of type definition arrays, which are converted to type
objects as you request them.</description>
          <long-description>
</long-description>
          <tag line="41" name="var" description="" type="array">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="145" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>&lt;p&gt;The $types definition array looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; $types = array(

     // the name to use for this type in the manager
     'some_type_name' =&amp;gt; array(

         // the identity field in each record
         'identity_field' =&amp;gt; 'id',

         // fields to index against
         'index_fields' =&amp;gt; array('field1', 'field2),

         // the record class generated by the record builder
         'record_class' =&amp;gt; 'Aura\Domain\Record',

         // a record builder for the type
         'record_builder' =&amp;gt; new \Aura\Domain\RecordBuilder,

         // a collection builder for the type
         'collection_builder' =&amp;gt; new \Aura\Domain\CollectionBuilder,

         // relationship definitons
         'relation_names' =&amp;gt; array(
             // discussed below
         ),
     ),

     'next_type_name' =&amp;gt; array(
         // ...
     ),

     // ...
 );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The relationship definitions portion looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; $relation_names = array(

     'name_for_relation_1' =&amp;gt; array(

         // the relationship to the native (parent) type: the parent
         // belongs_to, has_one, has_many, or has_many_through
         // of the foreign type. required.
         'relationship' =&amp;gt; 'has_many',

         // the name of the foreign (related) type in the manager.
         // optional; by default, uses the relation name as the
         // foreign type.
         'foreign_type' =&amp;gt; 'another_type_name',

         // the name of the native (parent) record field to use
         // when matching foreign (related) records. required.
         'native_field' =&amp;gt; 'native_field_name',

         // the name of the foreign (related) record field to use
         // when matching the native (parent) record. required.
         'foreign_field' =&amp;gt; 'foreign_field_name',

         // -------------------------------------------------------
         // if you have a has_many_through relationship, add the
         // following three keys to set up the association mapping.

         // the name of the type through which the native
         // and foreign types are mapped to each other.
         'through_type' =&amp;gt; 'mapping_type_name',

         // in the "through" record, the name of the field that
         // maps to the 'native_field' value
         'through_native_field' =&amp;gt; 'mapping_native_field_name',

         // in the "through" record, the name of the field that
         // maps to the 'foreign_field' value
         'through_foreign_field' =&amp;gt; 'mapping_foreign_field_name',
     ),

     'name_for_relation_2' =&amp;gt; array(
         // ...
     ),

     // ...
 );
&lt;/code&gt;&lt;/pre&gt;
</long-description>
          <tag line="51" name="param" description="A builder for type objects." type="\Aura\Marshal\Type\Builder" variable="$type_builder">
            <type by_reference="false">\Aura\Marshal\Type\Builder</type>
          </tag>
          <tag line="51" name="param" description="A builder for relation objects." type="\Aura\Marshal\Relation\Builder" variable="$relation_builder">
            <type by_reference="false">\Aura\Marshal\Relation\Builder</type>
          </tag>
          <tag line="51" name="param" description="Type definitions." type="array" variable="$types">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$type_builder</name>
          <default/>
          <type>TypeBuilder</type>
        </argument>
        <argument line="147">
          <name>$relation_builder</name>
          <default/>
          <type>RelationBuilder</type>
        </argument>
        <argument line="148">
          <name>$types</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="166" package="Default">
        <name>setType</name>
        <docblock>
          <description>Sets one type in the manager.</description>
          <long-description>
</long-description>
          <tag line="155" name="param" description="The name to use for the type." type="string" variable="$name">
            <type by_reference="false">\Aura\Marshal\string</type>
          </tag>
          <tag line="155" name="param" description="An array of type definition information." type="array" variable="$info">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
          <tag line="155" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\void</type>
          </tag>
        </docblock>
        <argument line="166">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="166">
          <name>$info</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="175" package="Default">
        <name>setRelation</name>
        <argument line="175">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="175">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="175">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="205" package="Default">
        <name>__get</name>
        <docblock>
          <description>Gets a type by name, creating a type object for it as needed.</description>
          <long-description>
</long-description>
          <tag line="196" name="param" description="The type name to retrieve." type="string" variable="$name">
            <type by_reference="false">\Aura\Marshal\string</type>
          </tag>
          <tag line="196" name="return" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="237" package="Default">
        <name>buildType</name>
        <docblock>
          <description>Builds a type object from a type definition.</description>
          <long-description>&lt;p&gt;The build process happens in two stages:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use the $type_builder to create the type object.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add relationships from the type definition.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The two-stage process helps avoid race conditions where a type may
have relationships to other type object that might not be in the
manager yet.&lt;/p&gt;
</long-description>
          <tag line="218" name="param" description="The type name to build." type="string" variable="$name">
            <type by_reference="false">\Aura\Marshal\string</type>
          </tag>
          <tag line="218" name="return" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
        <argument line="237">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="259" package="Default">
        <name>getTypes</name>
        <docblock>
          <description>Returns the names of all types in the manager.</description>
          <long-description>
</long-description>
          <tag line="252" name="return" description="" type="array">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/Data.php" hash="c689d3f8829449df24b5f630c45407ce" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Data.php</error>
    </parse_markers>
    <class final="false" abstract="false" line="27" namespace="Aura\Marshal" package="Aura\Marshal">
      <name>Data</name>
      <extends/>
      <full_name>\Aura\Marshal\Data</full_name>
      <docblock>
        <description>Represents a data set. This is similar to the SPL ArrayObject, but allows
you easier access to the underlying data itself. This class serves as a
base for ...</description>
        <long-description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;the generic type object, where $data represents an IdentityMap;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the generic record object, where $data represents the record fields; and&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the generic collection object, where $data represents an array of
records.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</long-description>
        <tag line="11" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\ArrayAccess</implements>
      <implements>\Countable</implements>
      <implements>\IteratorAggregate</implements>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$data</name>
        <default>array()</default>
        <docblock>
          <description>Key-value pairs of data.</description>
          <long-description>
</long-description>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="45" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
          <tag line="38" name="param" description="The data for this object." type="array" variable="$data">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="59" package="Default">
        <name>offsetExists</name>
        <docblock>
          <description>ArrayAccess: does the requested key exist?</description>
          <long-description>
</long-description>
          <tag line="50" name="param" description="The requested key." type="int|string" variable="$key">
            <type by_reference="false">\Aura\Marshal\int</type>
            <type by_reference="false">\Aura\Marshal\string</type>
          </tag>
          <tag line="50" name="return" description="" type="bool">
            <type by_reference="false">\Aura\Marshal\bool</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="73" package="Default">
        <name>offsetGet</name>
        <docblock>
          <description>ArrayAccess: get a key value.</description>
          <long-description>
</long-description>
          <tag line="64" name="param" description="The requested key." type="int|string" variable="$key">
            <type by_reference="false">\Aura\Marshal\int</type>
            <type by_reference="false">\Aura\Marshal\string</type>
          </tag>
          <tag line="64" name="return" description="" type="mixed">
            <type by_reference="false">\Aura\Marshal\mixed</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="89" package="Default">
        <name>offsetSet</name>
        <docblock>
          <description>ArrayAccess: set a key value.</description>
          <long-description>
</long-description>
          <tag line="78" name="param" description="The requested key." type="int|string" variable="$key">
            <type by_reference="false">\Aura\Marshal\int</type>
            <type by_reference="false">\Aura\Marshal\string</type>
          </tag>
          <tag line="78" name="param" description="The value to set it to." type="mixed" variable="$val">
            <type by_reference="false">\Aura\Marshal\mixed</type>
          </tag>
          <tag line="78" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\void</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="89">
          <name>$val</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="103" package="Default">
        <name>offsetUnset</name>
        <docblock>
          <description>ArrayAccess: unset a key.</description>
          <long-description>
</long-description>
          <tag line="94" name="param" description="The requested key." type="int|string" variable="$key">
            <type by_reference="false">\Aura\Marshal\int</type>
            <type by_reference="false">\Aura\Marshal\string</type>
          </tag>
          <tag line="94" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\void</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="115" package="Default">
        <name>count</name>
        <docblock>
          <description>Countable: how many keys are there?</description>
          <long-description>
</long-description>
          <tag line="108" name="return" description="" type="int">
            <type by_reference="false">\Aura\Marshal\int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="127" package="Default">
        <name>getIterator</name>
        <docblock>
          <description>IteratorAggregate: returns an external iterator for this struct.</description>
          <long-description>
</long-description>
          <tag line="120" name="return" description="" type="\Aura\Marshal\DataIterator">
            <type by_reference="false">\Aura\Marshal\DataIterator</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/DataIterator.php" hash="3cd60b26fff48d0663430bf25a2054d6" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/DataIterator.php</error>
    </parse_markers>
    <class final="false" abstract="false" line="18" namespace="Aura\Marshal" package="Aura\Marshal">
      <name>DataIterator</name>
      <extends/>
      <full_name>\Aura\Marshal\DataIterator</full_name>
      <docblock>
        <description>An object to allow iteration over the elements of a Data object.</description>
        <long-description>
</long-description>
        <tag line="11" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\Iterator</implements>
      <property final="false" static="false" visibility="protected" line="27" package="Default">
        <name>$data</name>
        <default/>
        <docblock>
          <description>The Data over which we are iterating.</description>
          <long-description>
</long-description>
          <tag line="20" name="var" description="" type="\Aura\Marshal\Data">
            <type by_reference="false">\Aura\Marshal\Data</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$keys</name>
        <default/>
        <docblock>
          <description>The keys to iterate over in the Data object.</description>
          <long-description>
</long-description>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$valid</name>
        <default/>
        <docblock>
          <description>Is the current iterator position valid?</description>
          <long-description>
</long-description>
          <tag line="38" name="var" description="" type="bool">
            <type by_reference="false">\Aura\Marshal\bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="56" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
          <tag line="47" name="param" description="The Data object over which to iterate." type="\Aura\Marshal\Data" variable="$data">
            <type by_reference="false">\Aura\Marshal\Data</type>
          </tag>
          <tag line="47" name="param" description="The keys in the Data object." type="array" variable="$keys">
            <type by_reference="false">\Aura\Marshal\array</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$data</name>
          <default/>
          <type>Data</type>
        </argument>
        <argument line="56">
          <name>$keys</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="69" package="Default">
        <name>current</name>
        <docblock>
          <description>Returns the value at the current iterator position.</description>
          <long-description>
</long-description>
          <tag line="62" name="return" description="" type="mixed">
            <type by_reference="false">\Aura\Marshal\mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="81" package="Default">
        <name>key</name>
        <docblock>
          <description>Returns the current iterator position.</description>
          <long-description>
</long-description>
          <tag line="74" name="return" description="" type="mixed">
            <type by_reference="false">\Aura\Marshal\mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="93" package="Default">
        <name>next</name>
        <docblock>
          <description>Moves the iterator to the next position.</description>
          <long-description>
</long-description>
          <tag line="86" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="105" package="Default">
        <name>rewind</name>
        <docblock>
          <description>Moves the iterator to the first position.</description>
          <long-description>
</long-description>
          <tag line="98" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="117" package="Default">
        <name>valid</name>
        <docblock>
          <description>Is the current iterator position valid?</description>
          <long-description>
</long-description>
          <tag line="110" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/Collection/GenericCollection.php" hash="d3fdfa2338bfa0e842d26604addde518" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Collection/GenericCollection.php</error>
    </parse_markers>
    <namespace-alias name="Data">Aura\Marshal\Data</namespace-alias>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="false" line="20" namespace="Aura\Marshal\Collection" package="Aura\Marshal">
      <name>GenericCollection</name>
      <extends>\Aura\Marshal\Data</extends>
      <full_name>\Aura\Marshal\Collection\GenericCollection</full_name>
      <docblock>
        <description>Represents a generic collection of records.</description>
        <long-description>
</long-description>
        <tag line="13" name="package" description="Aura.Marshal"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="29" package="Default">
        <name>$type</name>
        <default/>
        <docblock>
          <description>The type for this collection.</description>
          <long-description>
</long-description>
          <tag line="22" name="var" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="40" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
          <tag line="31" name="param" description="An array of records for this collection." type="array" variable="$data">
            <type by_reference="false">\Aura\Marshal\Collection\array</type>
          </tag>
          <tag line="31" name="param" description="The type for this collection." type="\Aura\Marshal\Type\GenericType" variable="$type">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="40">
          <name>$type</name>
          <default/>
          <type>GenericType</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="58" package="Default">
        <name>offsetGet</name>
        <docblock>
          <description>ArrayAccess: Get a key value.</description>
          <long-description>&lt;p&gt;This override from the parent::offsetGet() lets us convert records
lazily using the IdentityMap for the type.&lt;/p&gt;
</long-description>
          <tag line="46" name="param" description="The requested key." type="string" variable="$key">
            <type by_reference="false">\Aura\Marshal\Collection\string</type>
          </tag>
          <tag line="46" name="return" description="" type="mixed">
            <type by_reference="false">\Aura\Marshal\Collection\mixed</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="81" package="Default">
        <name>getIdentityValues</name>
        <docblock>
          <description>Returns an array of all the identity values for the collection.</description>
          <long-description>&lt;p&gt;This will not convert the collection elements to record objects.&lt;/p&gt;
</long-description>
          <tag line="70" name="param" description="The field name to retrieve values for." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Collection\string</type>
          </tag>
          <tag line="70" name="return" description="" type="array">
            <type by_reference="false">\Aura\Marshal\Collection\array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="98" package="Default">
        <name>getFieldValues</name>
        <docblock>
          <description>Returns an array of all values for a single field in the collection.</description>
          <long-description>&lt;p&gt;This will not convert the collection elements to record objects.&lt;/p&gt;
</long-description>
          <tag line="87" name="param" description="The field name to retrieve values for." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Collection\string</type>
          </tag>
          <tag line="87" name="return" description="" type="array">
            <type by_reference="false">\Aura\Marshal\Collection\array</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="114" package="Default">
        <name>isEmpty</name>
        <docblock>
          <description>Is the collection empty?</description>
          <long-description>
</long-description>
          <tag line="107" name="return" description="" type="bool">
            <type by_reference="false">\Aura\Marshal\Collection\bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/Collection/BuilderInterface.php" hash="e97e74fae22d03bb2606ca3e922ada92" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Collection/BuilderInterface.php</error>
    </parse_markers>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <interface namespace="Aura\Marshal\Collection" line="19" package="Aura\Marshal">
      <name>BuilderInterface</name>
      <extends/>
      <full_name>\Aura\Marshal\Collection\BuilderInterface</full_name>
      <docblock>
        <description>An inteface for collection builder objects.</description>
        <long-description>
</long-description>
        <tag line="12" name="package" description="Aura.Marshal"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="30" package="Default">
        <name>newInstance</name>
        <docblock>
          <description>Creates a new collection object.</description>
          <long-description>
</long-description>
          <tag line="21" name="param" description="The type for this collection." type="\Aura\Marshal\Type\GenericType" variable="$type">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
          <tag line="21" name="param" description="Data to load into the collection." type="array" variable="$data">
            <type by_reference="false">\Aura\Marshal\Collection\array</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$type</name>
          <default/>
          <type>GenericType</type>
        </argument>
        <argument line="30">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
    </interface>
  </file>
  <file path="src/Aura/Marshal/Collection/Builder.php" hash="ef481e6dfb733b9f12b81e9e317a698f" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Collection/Builder.php</error>
    </parse_markers>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="false" line="19" namespace="Aura\Marshal\Collection" package="Aura\Marshal">
      <name>Builder</name>
      <extends/>
      <full_name>\Aura\Marshal\Collection\Builder</full_name>
      <docblock>
        <description>Creates a new collection object for a type.</description>
        <long-description>
</long-description>
        <tag line="12" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\Aura\Marshal\Collection\BuilderInterface</implements>
      <method final="false" abstract="false" static="false" visibility="public" line="32" package="Default">
        <name>newInstance</name>
        <docblock>
          <description>Creates a new collection object.</description>
          <long-description>
</long-description>
          <tag line="21" name="param" description="The type for this collection." type="\Aura\Marshal\Type\GenericType" variable="$type">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
          <tag line="21" name="param" description="Data to load into the collection." type="array" variable="$data">
            <type by_reference="false">\Aura\Marshal\Collection\array</type>
          </tag>
          <tag line="21" name="return" description="" type="\Aura\Marshal\Collection\GenericCollection">
            <type by_reference="false">\Aura\Marshal\Collection\GenericCollection</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$type</name>
          <default/>
          <type>GenericType</type>
        </argument>
        <argument line="32">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/Record/BuilderInterface.php" hash="7bff1cac163a0fdeb8d84e1c061f8e43" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Record/BuilderInterface.php</error>
    </parse_markers>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <interface namespace="Aura\Marshal\Record" line="19" package="Aura\Marshal">
      <name>BuilderInterface</name>
      <extends/>
      <full_name>\Aura\Marshal\Record\BuilderInterface</full_name>
      <docblock>
        <description>An inteface for RecordBuilder objects.</description>
        <long-description>
</long-description>
        <tag line="12" name="package" description="Aura.Marshal"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="31" package="Default">
        <name>newInstance</name>
        <docblock>
          <description>Creates a new record object.</description>
          <long-description>
</long-description>
          <tag line="21" name="param" description="The type for this record." type="\Aura\Marshal\Type\GenericType" variable="$type">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
          <tag line="21" name="param" description="Data to load into the record. Note that the interface doesn't care what the data looks like." type="mixed" variable="$data">
            <type by_reference="false">\Aura\Marshal\Record\mixed</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$type</name>
          <default/>
          <type>GenericType</type>
        </argument>
        <argument line="31">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="src/Aura/Marshal/Record/Builder.php" hash="36d7a4d797fddfdbdffefaa9e5018159" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Record/Builder.php</error>
    </parse_markers>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="false" line="19" namespace="Aura\Marshal\Record" package="Aura\Marshal">
      <name>Builder</name>
      <extends/>
      <full_name>\Aura\Marshal\Record\Builder</full_name>
      <docblock>
        <description>Creates a new record object for a type.</description>
        <long-description>
</long-description>
        <tag line="12" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\Aura\Marshal\Record\BuilderInterface</implements>
      <method final="false" abstract="false" static="false" visibility="public" line="32" package="Default">
        <name>newInstance</name>
        <docblock>
          <description>Creates a new record object.</description>
          <long-description>
</long-description>
          <tag line="21" name="param" description="The type for this record." type="\Aura\Marshal\Type\GenericType" variable="$type">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
          <tag line="21" name="param" description="Data to load into the record." type="array|object" variable="$data">
            <type by_reference="false">\Aura\Marshal\Record\array</type>
            <type by_reference="false">\Aura\Marshal\Record\object</type>
          </tag>
          <tag line="21" name="return" description="" type="\Aura\Marshal\Record\GenericRecord">
            <type by_reference="false">\Aura\Marshal\Record\GenericRecord</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$type</name>
          <default/>
          <type>GenericType</type>
        </argument>
        <argument line="32">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/Record/GenericRecord.php" hash="a8c3de5ce5dc70a6f552c4208aff2918" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Record/GenericRecord.php</error>
    </parse_markers>
    <namespace-alias name="Data">Aura\Marshal\Data</namespace-alias>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="false" line="20" namespace="Aura\Marshal\Record" package="Aura\Marshal">
      <name>GenericRecord</name>
      <extends>\Aura\Marshal\Data</extends>
      <full_name>\Aura\Marshal\Record\GenericRecord</full_name>
      <docblock>
        <description>Represents a single record.</description>
        <long-description>
</long-description>
        <tag line="13" name="package" description="Aura.Marshal"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="29" package="Default">
        <name>$type</name>
        <default/>
        <docblock>
          <description>The type for this record.</description>
          <long-description>
</long-description>
          <tag line="22" name="var" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="40" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
          <tag line="31" name="param" description="An array of fields for this record." type="array" variable="$data">
            <type by_reference="false">\Aura\Marshal\Record\array</type>
          </tag>
          <tag line="31" name="param" description="The type for this record." type="\Aura\Marshal\Type\GenericType" variable="$type">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="40">
          <name>$type</name>
          <default/>
          <type>GenericType</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="55" package="Default">
        <name>__get</name>
        <docblock>
          <description>Gets the value of a field by name.</description>
          <long-description>
</long-description>
          <tag line="46" name="param" description="The requested field name." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Record\string</type>
          </tag>
          <tag line="46" name="return" description="The field value." type="mixed">
            <type by_reference="false">\Aura\Marshal\Record\mixed</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="71" package="Default">
        <name>__set</name>
        <docblock>
          <description>Sets a the value of a field by name.</description>
          <long-description>
</long-description>
          <tag line="60" name="param" description="The requested field name." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Record\string</type>
          </tag>
          <tag line="60" name="param" description="The value to set the field to." type="mixed" variable="$value">
            <type by_reference="false">\Aura\Marshal\Record\mixed</type>
          </tag>
          <tag line="60" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Record\void</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
        <argument line="71">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="85" package="Default">
        <name>__isset</name>
        <docblock>
          <description>Does a certain field exist in the record?</description>
          <long-description>
</long-description>
          <tag line="76" name="param" description="The requested field name." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Record\string</type>
          </tag>
          <tag line="76" name="return" description="" type="bool">
            <type by_reference="false">\Aura\Marshal\Record\bool</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="99" package="Default">
        <name>__unset</name>
        <docblock>
          <description>Unsets a field in the record.</description>
          <long-description>
</long-description>
          <tag line="90" name="param" description="The requested field name." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Record\string</type>
          </tag>
          <tag line="90" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Record\void</type>
          </tag>
        </docblock>
        <argument line="99">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="115" package="Default">
        <name>offsetGet</name>
        <docblock>
          <description>ArrayAccess: Gets a field value by name; if the field is based on a
relation to a foreign type, this will get the related record or
collection.</description>
          <long-description>
</long-description>
          <tag line="104" name="param" description="The requested field name." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Record\string</type>
          </tag>
          <tag line="104" name="return" description="The field value." type="mixed">
            <type by_reference="false">\Aura\Marshal\Record\mixed</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="141" package="Default">
        <name>offsetUnset</name>
        <docblock>
          <description>ArrayAccess: Unsets a field in the record; this leaves the array key
in place and sets it to null.</description>
          <long-description>
</long-description>
          <tag line="131" name="param" description="The requested field name." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Record\string</type>
          </tag>
          <tag line="131" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Record\void</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/Relation/HasManyThrough.php" hash="611a52b87990d094e1c28ab2dcd0ed3a" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Relation/HasManyThrough.php</error>
      <notice line="63">Name of argument $type does not match with function Docblock</notice>
      <notice line="63">Name of argument $name does not match with function Docblock</notice>
      <notice line="63">Argument $info is missing from the function Docblock</notice>
      <notice line="63">Argument $manager is missing from the function Docblock</notice>
    </parse_markers>
    <namespace-alias name="Exception">Aura\Marshal\Exception</namespace-alias>
    <namespace-alias name="Manager">Aura\Marshal\Manager</namespace-alias>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="false" line="22" namespace="Aura\Marshal\Relation" package="Aura\Marshal">
      <name>HasManyThrough</name>
      <extends>\Aura\Marshal\Relation\AbstractRelation</extends>
      <full_name>\Aura\Marshal\Relation\HasManyThrough</full_name>
      <docblock>
        <description>Represents a relationship where a native record has many foreign records
(i.e., a foreign collection) mapped through an association type.</description>
        <long-description>
</long-description>
        <tag line="14" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\Aura\Marshal\Relation\RelationInterface</implements>
      <property final="false" static="false" visibility="protected" line="32" package="Default">
        <name>$through_type</name>
        <default/>
        <docblock>
          <description>Native and foreign records are mapped to each other through this
association type.</description>
          <long-description>
</long-description>
          <tag line="24" name="var" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="42" package="Default">
        <name>$through_native_field</name>
        <default/>
        <docblock>
          <description>The field name for the native side of the association mapping in the
"through" type.</description>
          <long-description>
</long-description>
          <tag line="34" name="var" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Relation\string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" package="Default">
        <name>$through_foreign_field</name>
        <default/>
        <docblock>
          <description>The field name for the foreign side of the association mapping in the
"through" type.</description>
          <long-description>
</long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Relation\string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="63" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
          <tag line="54" name="param" description="An array of relationship definition information." type="array" variable="$info">
            <type by_reference="false">\Aura\Marshal\Relation\array</type>
          </tag>
          <tag line="54" name="param" description="The type manager." type="\Aura\Marshal\Manager" variable="$manager">
            <type by_reference="false">\Aura\Marshal\Manager</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$manager</name>
          <default/>
          <type>Manager</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="93" package="Default">
        <name>getForRecord</name>
        <docblock>
          <description>Returns the related foreign collection for a native record.</description>
          <long-description>
</long-description>
          <tag line="84" name="param" description="The native record." type="mixed" variable="$record">
            <type by_reference="false">\Aura\Marshal\Relation\mixed</type>
          </tag>
          <tag line="84" name="return" description="" type="\Aura\Marshal\Relation\GenericCollection">
            <type by_reference="false">\Aura\Marshal\Relation\GenericCollection</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$record</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/Relation/Builder.php" hash="fcf40a2305e5c83bbbda6b289c085d6c" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Relation/Builder.php</error>
      <notice line="50">Name of argument $type does not match with function Docblock</notice>
      <notice line="50">Name of argument $name does not match with function Docblock</notice>
      <notice line="50">Name of argument $info does not match with function Docblock</notice>
      <notice line="50">Argument $manager is missing from the function Docblock</notice>
    </parse_markers>
    <namespace-alias name="Exception">Aura\Marshal\Exception</namespace-alias>
    <namespace-alias name="Manager">Aura\Marshal\Manager</namespace-alias>
    <class final="false" abstract="false" line="20" namespace="Aura\Marshal\Relation" package="Aura\Marshal">
      <name>Builder</name>
      <extends/>
      <full_name>\Aura\Marshal\Relation\Builder</full_name>
      <docblock>
        <description>A builder to create relationship definition objects.</description>
        <long-description>
</long-description>
        <tag line="13" name="package" description="Aura.Marshal"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="29" package="Default">
        <name>$relationship_class</name>
        <default>array(
        'belongs_to'       =&gt; 'Aura\Marshal\Relation\BelongsTo'</default>
        <docblock>
          <description>A map of relationships to classes.</description>
          <long-description>
</long-description>
          <tag line="22" name="var" description="" type="array">
            <type by_reference="false">\Aura\Marshal\Relation\array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="50" package="Default">
        <name>newInstance</name>
        <docblock>
          <description>Builds and returns a relation object.</description>
          <long-description>
</long-description>
          <tag line="36" name="param" description="The name of the record field where the related data will be placed." type="string" variable="$name">
            <type by_reference="false">\Aura\Marshal\Relation\string</type>
          </tag>
          <tag line="36" name="param" description="An array of relationship definition information." type="array" variable="$info">
            <type by_reference="false">\Aura\Marshal\Relation\array</type>
          </tag>
          <tag line="36" name="param" description="An type manager." type="\Aura\Marshal\Manager" variable="$manager">
            <type by_reference="false">\Aura\Marshal\Manager</type>
          </tag>
          <tag line="36" name="return" description="" type="\Aura\Marshal\Relation\AbstractRelation">
            <type by_reference="false">\Aura\Marshal\Relation\AbstractRelation</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$manager</name>
          <default/>
          <type>Manager</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/Relation/HasOne.php" hash="6013c50a45ba19cd2095c4aedfb8f97e" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Relation/HasOne.php</error>
    </parse_markers>
    <class final="false" abstract="false" line="19" namespace="Aura\Marshal\Relation" package="Aura\Marshal">
      <name>HasOne</name>
      <extends>\Aura\Marshal\Relation\AbstractRelation</extends>
      <full_name>\Aura\Marshal\Relation\HasOne</full_name>
      <docblock>
        <description>Represents a relationship where the native entity has one of the foreign
entity.</description>
        <long-description>
</long-description>
        <tag line="11" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\Aura\Marshal\Relation\RelationInterface</implements>
      <method final="false" abstract="false" static="false" visibility="public" line="30" package="Default">
        <name>getForRecord</name>
        <docblock>
          <description>Returns the related foreign record for a native record.</description>
          <long-description>
</long-description>
          <tag line="21" name="param" description="The native record." type="mixed" variable="$record">
            <type by_reference="false">\Aura\Marshal\Relation\mixed</type>
          </tag>
          <tag line="21" name="return" description="" type="\Aura\Marshal\Relation\GenericRecord">
            <type by_reference="false">\Aura\Marshal\Relation\GenericRecord</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$record</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/Relation/BelongsTo.php" hash="04ff0d1dcf7682f4ea8091657dd95178" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Relation/BelongsTo.php</error>
    </parse_markers>
    <class final="false" abstract="false" line="19" namespace="Aura\Marshal\Relation" package="Aura\Marshal">
      <name>BelongsTo</name>
      <extends>\Aura\Marshal\Relation\AbstractRelation</extends>
      <full_name>\Aura\Marshal\Relation\BelongsTo</full_name>
      <docblock>
        <description>Represents a relationship where the native record belongs to a foreign
record.</description>
        <long-description>
</long-description>
        <tag line="11" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\Aura\Marshal\Relation\RelationInterface</implements>
      <method final="false" abstract="false" static="false" visibility="public" line="30" package="Default">
        <name>getForRecord</name>
        <docblock>
          <description>Returns the related foreign record for a native record.</description>
          <long-description>
</long-description>
          <tag line="21" name="param" description="The native record." type="mixed" variable="$record">
            <type by_reference="false">\Aura\Marshal\Relation\mixed</type>
          </tag>
          <tag line="21" name="return" description="" type="\Aura\Marshal\Relation\GenericRecord">
            <type by_reference="false">\Aura\Marshal\Relation\GenericRecord</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$record</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/Relation/RelationInterface.php" hash="b1bc3a313a302aca8a1b0937ae2f9025" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Relation/RelationInterface.php</error>
    </parse_markers>
    <interface namespace="Aura\Marshal\Relation" line="18" package="Aura\Marshal">
      <name>RelationInterface</name>
      <extends/>
      <full_name>\Aura\Marshal\Relation\RelationInterface</full_name>
      <docblock>
        <description>An interface for relationship description objects.</description>
        <long-description>
</long-description>
        <tag line="11" name="package" description="Aura.Marshal"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="30" package="Default">
        <name>getForRecord</name>
        <docblock>
          <description>Returns the foreign record or collection for a native record.</description>
          <long-description>
</long-description>
          <tag line="20" name="param" description="The record to get the related record or collection for." type="mixed" variable="$record">
            <type by_reference="false">\Aura\Marshal\Relation\mixed</type>
          </tag>
          <tag line="20" name="return" description="" type="\Aura\Marshal\Relation\GenericRecord|\Aura\Marshal\Relation\GenericCollection">
            <type by_reference="false">\Aura\Marshal\Relation\GenericRecord</type>
            <type by_reference="false">\Aura\Marshal\Relation\GenericCollection</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$record</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="src/Aura/Marshal/Relation/AbstractRelation.php" hash="a1ffa0609df7b7a5cd0813a7509280d6" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Relation/AbstractRelation.php</error>
      <notice line="68">Name of argument $type does not match with function Docblock</notice>
      <notice line="68">Name of argument $name does not match with function Docblock</notice>
      <notice line="68">Argument $info is missing from the function Docblock</notice>
      <notice line="68">Argument $manager is missing from the function Docblock</notice>
    </parse_markers>
    <namespace-alias name="Exception">Aura\Marshal\Exception</namespace-alias>
    <namespace-alias name="Manager">Aura\Marshal\Manager</namespace-alias>
    <namespace-alias name="GenericType">Aura\Marshal\Type\GenericType</namespace-alias>
    <class final="false" abstract="true" line="21" namespace="Aura\Marshal\Relation" package="Aura\Marshal">
      <name>AbstractRelation</name>
      <extends/>
      <full_name>\Aura\Marshal\Relation\AbstractRelation</full_name>
      <docblock>
        <description>Represents a relationship definition between two types.</description>
        <long-description>
</long-description>
        <tag line="14" name="package" description="Aura.Marshal"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="30" package="Default">
        <name>$manager</name>
        <default/>
        <docblock>
          <description>The type manager object.</description>
          <long-description>
</long-description>
          <tag line="23" name="var" description="" type="\Aura\Marshal\Manager">
            <type by_reference="false">\Aura\Marshal\Manager</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="39" package="Default">
        <name>$foreign_type</name>
        <default/>
        <docblock>
          <description>The foreign type object.</description>
          <long-description>
</long-description>
          <tag line="32" name="var" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" package="Default">
        <name>$native_field</name>
        <default/>
        <docblock>
          <description>The field in the native record to match against.</description>
          <long-description>
</long-description>
          <tag line="41" name="var" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Relation\string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="57" package="Default">
        <name>$foreign_field</name>
        <default/>
        <docblock>
          <description>The field in the foreign record to match against.</description>
          <long-description>
</long-description>
          <tag line="50" name="var" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Relation\string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="68" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description>
</long-description>
          <tag line="59" name="param" description="An array of relationship definition information." type="array" variable="$info">
            <type by_reference="false">\Aura\Marshal\Relation\array</type>
          </tag>
          <tag line="59" name="param" description="The type manager." type="\Aura\Marshal\Manager" variable="$manager">
            <type by_reference="false">\Aura\Marshal\Manager</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="68">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="68">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
        <argument line="68">
          <name>$manager</name>
          <default/>
          <type>Manager</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/Relation/HasMany.php" hash="300247b0feb79e93efeee2fff34fd3b8" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Relation/HasMany.php</error>
    </parse_markers>
    <class final="false" abstract="false" line="19" namespace="Aura\Marshal\Relation" package="Aura\Marshal">
      <name>HasMany</name>
      <extends>\Aura\Marshal\Relation\AbstractRelation</extends>
      <full_name>\Aura\Marshal\Relation\HasMany</full_name>
      <docblock>
        <description>Represents a relationship where a native record has many foreign records
(i.e., a foreign collection).</description>
        <long-description>
</long-description>
        <tag line="11" name="package" description="Aura.Marshal"/>
      </docblock>
      <implements>\Aura\Marshal\Relation\RelationInterface</implements>
      <method final="false" abstract="false" static="false" visibility="public" line="30" package="Default">
        <name>getForRecord</name>
        <docblock>
          <description>Returns the related foreign collection for a native record.</description>
          <long-description>
</long-description>
          <tag line="21" name="param" description="The native record." type="mixed" variable="$record">
            <type by_reference="false">\Aura\Marshal\Relation\mixed</type>
          </tag>
          <tag line="21" name="return" description="" type="\Aura\Marshal\Relation\GenericCollection">
            <type by_reference="false">\Aura\Marshal\Relation\GenericCollection</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$record</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/Type/GenericType.php" hash="e671933e70f348e2ecc5d194b57b85e7" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Type/GenericType.php</error>
      <notice line="194">Name of argument $collection_builder does not match with function Docblock</notice>
      <notice line="514">Argument $name is missing from the function Docblock</notice>
    </parse_markers>
    <namespace-alias name="CollectionBuilderInterface">Aura\Marshal\Collection\BuilderInterface</namespace-alias>
    <namespace-alias name="Data">Aura\Marshal\Data</namespace-alias>
    <namespace-alias name="Exception">Aura\Marshal\Exception</namespace-alias>
    <namespace-alias name="RecordBuilderInterface">Aura\Marshal\Record\BuilderInterface</namespace-alias>
    <namespace-alias name="RelationInterface">Aura\Marshal\Relation\RelationInterface</namespace-alias>
    <class final="false" abstract="false" line="24" namespace="Aura\Marshal\Type" package="Aura\Marshal">
      <name>GenericType</name>
      <extends>\Aura\Marshal\Data</extends>
      <full_name>\Aura\Marshal\Type\GenericType</full_name>
      <docblock>
        <description>Describes a particular type within the domain, and retains an IdentityMap
of records for the type. Converts loaded data to record objects lazily.</description>
        <long-description>
</long-description>
        <tag line="16" name="package" description="Aura.Marshal"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" package="Default">
        <name>$collection_builder</name>
        <default/>
        <docblock>
          <description>A builder to create collection objects for this type.</description>
          <long-description>
</long-description>
          <tag line="26" name="var" description="" type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$identity_field</name>
        <default/>
        <docblock>
          <description>The record field representing its unique identifier value. The
IdentityMap will be keyed on these values.</description>
          <long-description>
</long-description>
          <tag line="35" name="var" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="55" package="Default">
        <name>$index_fields</name>
        <default>array()</default>
        <docblock>
          <description>An array of fields to index on for quicker lookups.  The array format
is:</description>
          <long-description>&lt;p&gt;$index_fields[$field_name][$field_value] = (array) $identity_values;&lt;/p&gt;
</long-description>
          <tag line="45" name="var" description="" type="array">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="64" package="Default">
        <name>$record_builder</name>
        <default/>
        <docblock>
          <description>A builder to create record objects for this type.</description>
          <long-description>
</long-description>
          <tag line="57" name="var" description="" type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="74" package="Default">
        <name>$record_class</name>
        <default/>
        <docblock>
          <description>The class expected from the record builder. This is used to determine
if elements in the IdentityMap have been converted to record objects.</description>
          <long-description>
</long-description>
          <tag line="66" name="var" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="84" package="Default">
        <name>$relation</name>
        <default>array()</default>
        <docblock>
          <description>An array of relationship descriptions, where the key is a
field name for the record and the value is a relation object.</description>
          <long-description>
</long-description>
          <tag line="76" name="var" description="" type="array">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="96" package="Default">
        <name>setIdentityField</name>
        <docblock>
          <description>Sets the name of the field that uniquely identifies each record for
this type.</description>
          <long-description>
</long-description>
          <tag line="86" name="param" description="The identity field name." type="string" variable="$identity_field">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
          <tag line="86" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Type\void</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$identity_field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="109" package="Default">
        <name>getIdentityField</name>
        <docblock>
          <description>Returns the name of the field that uniquely identifies each record of
this type.</description>
          <long-description>
</long-description>
          <tag line="101" name="return" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="124" package="Default">
        <name>setIndexFields</name>
        <docblock>
          <description>Sets the fields that should be indexed at load() time; removes all
previous indexes.</description>
          <long-description>
</long-description>
          <tag line="114" name="param" description="The fields to be indexed." type="array" variable="$fields">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
          <tag line="114" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Type\void</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$fields</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="142" package="Default">
        <name>setRecordClass</name>
        <docblock>
          <description>Sets the name of the expected record class; this is used to determine
if elements in the IdentityMap have been converted to record objects.</description>
          <long-description>
</long-description>
          <tag line="132" name="param" description="The identity field name." type="string" variable="$record_class">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
          <tag line="132" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Type\void</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$record_class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="154" package="Default">
        <name>getRecordClass</name>
        <docblock>
          <description>Returns the name of the expected record class.</description>
          <long-description>
</long-description>
          <tag line="147" name="return" description="" type="string">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="168" package="Default">
        <name>setRecordBuilder</name>
        <docblock>
          <description>Sets the builder object to create record objects.</description>
          <long-description>
</long-description>
          <tag line="159" name="param" description="The builder object." type="\Aura\Marshal\Record\BuilderInterface" variable="$record_builder">
            <type by_reference="false">\Aura\Marshal\Record\BuilderInterface</type>
          </tag>
          <tag line="159" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Type\void</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$record_builder</name>
          <default/>
          <type>RecordBuilderInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="180" package="Default">
        <name>getRecordBuilder</name>
        <docblock>
          <description>Returns the builder that creates record objects.</description>
          <long-description>
</long-description>
          <tag line="173" name="return" description="" type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="194" package="Default">
        <name>setCollectionBuilder</name>
        <docblock>
          <description>Sets the builder object to create collection objects.</description>
          <long-description>
</long-description>
          <tag line="185" name="param" description="The builder object." type="\Aura\Marshal\Collection\BuilderInterface" variable="$collectionBuilder">
            <type by_reference="false">\Aura\Marshal\Collection\BuilderInterface</type>
          </tag>
          <tag line="185" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Type\void</type>
          </tag>
        </docblock>
        <argument line="194">
          <name>$collection_builder</name>
          <default/>
          <type>CollectionBuilderInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="206" package="Default">
        <name>getCollectionBuilder</name>
        <docblock>
          <description>Returns the builder that creates collection objects.</description>
          <long-description>
</long-description>
          <tag line="199" name="return" description="" type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="237" package="Default">
        <name>load</name>
        <docblock>
          <description>Loads the IdentityMap for this type with data for record objects.</description>
          <long-description>&lt;p&gt;Typically, the $data value is a sequential array of associative arrays.
As long as the $data value can be iterated over and accessed as an
array, you can pass in any kind of $data.&lt;/p&gt;

&lt;p&gt;The elements from $data will be placed into the IdentityMap; the
IdentityMap key will be the value of the identity field in the element.&lt;/p&gt;

&lt;p&gt;You can call load() multiple times, but records already in the
IdentityMap will not be overwritten.&lt;/p&gt;

&lt;p&gt;The loaded elements are cast to objects; this allows consistent
addressing of elements before and after conversion to record objects.&lt;/p&gt;

&lt;p&gt;The loaded elements will be converted to record objects by the
record builder only as you request them from the IdentityMap.&lt;/p&gt;
</long-description>
          <tag line="211" name="param" description="Record data to load into the IdentityMap." type="array" variable="$data">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
          <tag line="211" name="return" description="The identity values from the data elements, regardless of whether they were loaded or not." type="array">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
        </docblock>
        <argument line="237">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="282" package="Default">
        <name>getIdentityValues</name>
        <docblock>
          <description>Returns the array keys for the for the records in the IdentityMap;
the keys were generated at load() time from the identity field values.</description>
          <long-description>
</long-description>
          <tag line="274" name="return" description="" type="array">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="298" package="Default">
        <name>getFieldValues</name>
        <docblock>
          <description>Returns the values for a particular field for all the records in the
IdentityMap.</description>
          <long-description>
</long-description>
          <tag line="287" name="param" description="The field name to get values for." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
          <tag line="287" name="return" description="An array of key-value pairs where the key is the identity value and the value is the requested field value." type="array">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
        </docblock>
        <argument line="298">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="318" package="Default">
        <name>getRecord</name>
        <docblock>
          <description>Retrieves a single record from the IdentityMap by the value of its
identity field, converting it to a $record_class object if needed.</description>
          <long-description>
</long-description>
          <tag line="307" name="param" description="The identity value of the record to be retrieved." type="int" variable="$identity_value">
            <type by_reference="false">\Aura\Marshal\Type\int</type>
          </tag>
          <tag line="307" name="return" description="A record object via the record builder." type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
        <argument line="318">
          <name>$identity_value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="351" package="Default">
        <name>getRecordByField</name>
        <docblock>
          <description>Retrieves the first record from the IdentityMap that matches the value
of an arbitrary field; it will be converted to a record object
if it is not already an object of the proper class.</description>
          <long-description>&lt;p&gt;N.b.: This will not be performant for large sets where the field is not
an identity field and is not indexed.&lt;/p&gt;
</long-description>
          <tag line="335" name="param" description="The field to match on." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
          <tag line="335" name="param" description="The value of the field to match on." type="mixed" variable="$value">
            <type by_reference="false">\Aura\Marshal\Type\mixed</type>
          </tag>
          <tag line="335" name="return" description="A record object via the record builder." type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
        <argument line="351">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
        <argument line="351">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="386" package="Default">
        <name>getCollection</name>
        <docblock>
          <description>Retrieves a collection of elements from the IdentityMap by the values
of their identity fields; each entity will be converted to a record
object if it is not already an object of the proper class.</description>
          <long-description>
</long-description>
          <tag line="375" name="param" description="An array of identity values to retrieve." type="array" variable="$identity_values">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
          <tag line="375" name="return" description="A collection object via the collection builder." type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
        <argument line="386">
          <name>$identity_values</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="423" package="Default">
        <name>getCollectionByField</name>
        <docblock>
          <description>Retrieves a collection of objects from the IdentityMap matching the
value of an arbitrary field; these will be converted to records
if they are not already objects of the proper class.</description>
          <long-description>&lt;p&gt;The value to be matched can be an array of values, so that you
can get many values of the field being matched.&lt;/p&gt;

&lt;p&gt;If the field is indexed, the order of the returned collection
will match the order of the values being searched. If the field is not
indexed, the order of the returned collection will be the same as the
IdentityMap.&lt;/p&gt;

&lt;p&gt;The fastest results are from the identity field; second fastest, from
an indexed field; slowest are from non-indexed fields, because it has
to look through the entire IdentityMap to find matches.&lt;/p&gt;
</long-description>
          <tag line="397" name="param" description="The field to match on." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
          <tag line="397" name="param" description="The value of the field to match on; if an array, any value in the array will be counted as a match." type="mixed" variable="$values">
            <type by_reference="false">\Aura\Marshal\Type\mixed</type>
          </tag>
          <tag line="397" name="return" description="A collection object via the collection builder." type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
        <argument line="423">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
        <argument line="423">
          <name>$values</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="469" package="Default">
        <name>getCollectionByIndex</name>
        <docblock>
          <description>Looks through the index for a field to retrieve a collection of
objects from the IdentityMap; these will be converted to records
if they are not already objects of the proper class.</description>
          <long-description>&lt;p&gt;N.b.: The value to be matched can be an array of values, so that you
can get many values of the field being matched.&lt;/p&gt;

&lt;p&gt;N.b.: The order of the returned collection will match the order of the
values being searched, not the order of the records in the IdentityMap.&lt;/p&gt;
</long-description>
          <tag line="449" name="param" description="The field to match on." type="string" variable="$field">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
          <tag line="449" name="param" description="The value of the field to match on; if an array, any value in the array will be counted as a match." type="mixed" variable="$values">
            <type by_reference="false">\Aura\Marshal\Type\mixed</type>
          </tag>
          <tag line="449" name="return" description="A collection object via the collection builder." type="object">
            <type by_reference="false">\Aura\Marshal\Type\object</type>
          </tag>
        </docblock>
        <argument line="469">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
        <argument line="469">
          <name>$values</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="499" package="Default">
        <name>setRelation</name>
        <docblock>
          <description>Sets a relationship to another type, assigning it to a field
name to be used in record objects.</description>
          <long-description>
</long-description>
          <tag line="486" name="param" description="The field name to use for the related record or collection." type="string" variable="$name">
            <type by_reference="false">\Aura\Marshal\Type\string</type>
          </tag>
          <tag line="486" name="param" description="The relationship definition object." type="\Aura\Marshal\Relation\RelationInterface" variable="$relation">
            <type by_reference="false">\Aura\Marshal\Relation\RelationInterface</type>
          </tag>
          <tag line="486" name="return" description="" type="void">
            <type by_reference="false">\Aura\Marshal\Type\void</type>
          </tag>
        </docblock>
        <argument line="499">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="499">
          <name>$relation</name>
          <default/>
          <type>RelationInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="514" package="Default">
        <name>getRelation</name>
        <docblock>
          <description>Returns a relationship definition object by name.</description>
          <long-description>
</long-description>
          <tag line="507" name="return" description="" type="\Aura\Marshal\Type\AbstractRelation">
            <type by_reference="false">\Aura\Marshal\Type\AbstractRelation</type>
          </tag>
        </docblock>
        <argument line="514">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="526" package="Default">
        <name>getRelationNames</name>
        <docblock>
          <description>Returns all the names of the relationship definition objects.</description>
          <long-description>
</long-description>
          <tag line="519" name="return" description="" type="array">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/Type/Builder.php" hash="663628f2a916d045a94f7f0bcc23f483" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Type/Builder.php</error>
    </parse_markers>
    <namespace-alias name="CollectionBuilder">Aura\Marshal\Collection\Builder</namespace-alias>
    <namespace-alias name="Exception">Aura\Marshal\Exception</namespace-alias>
    <namespace-alias name="RecordBuilder">Aura\Marshal\Record\Builder</namespace-alias>
    <class final="false" abstract="false" line="21" namespace="Aura\Marshal\Type" package="Aura\Marshal">
      <name>Builder</name>
      <extends/>
      <full_name>\Aura\Marshal\Type\Builder</full_name>
      <docblock>
        <description>Builds a type object from an array of description information.</description>
        <long-description>
</long-description>
        <tag line="14" name="package" description="Aura.Marshal"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="49" package="Default">
        <name>newInstance</name>
        <docblock>
          <description>Returns a new type instance.</description>
          <long-description>&lt;p&gt;The &lt;code&gt;$info&lt;/code&gt; array should have four keys:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;'identity_field'&lt;/code&gt; (string): The name of the identity field for
records of this type. This key is required.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;record_class&lt;/code&gt; (string): The name of the record class returned by the
record Builder. This key is optional, and defaults to
&lt;code&gt;Aura\Marshal\Record&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;record_builder&lt;/code&gt; (Record\BuilderInterface): A builder to create
record objects for the type. This key is optional, and defaults to a
new Record\Builder object.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;collection_builder&lt;/code&gt; (Collection\BuilderInterface): A
A builder to create collection objects for the type. This key
is optional, and defaults to a new Collection\Builder object.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</long-description>
          <tag line="23" name="param" description="An array of information about the type." type="array" variable="$info">
            <type by_reference="false">\Aura\Marshal\Type\array</type>
          </tag>
          <tag line="23" name="return" description="" type="\Aura\Marshal\Type\GenericType">
            <type by_reference="false">\Aura\Marshal\Type\GenericType</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/Aura/Marshal/Exception.php" hash="c01fbedfa526bb4d25d0f42c52ddd428" package="Default">
    <docblock>
      <description>This file is part of the Aura project for PHP.</description>
      <long-description>
</long-description>
      <tag line="2" name="license" description="http://opensource.org/licenses/bsd-license.php BSD"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file src/Aura/Marshal/Exception.php</error>
    </parse_markers>
    <class final="false" abstract="false" line="18" namespace="Aura\Marshal" package="Aura\Marshal">
      <name>Exception</name>
      <extends>\Exception</extends>
      <full_name>\Aura\Marshal\Exception</full_name>
      <docblock>
        <description>A package-level exception.</description>
        <long-description>
</long-description>
        <tag line="11" name="package" description="Aura.Marshal"/>
      </docblock>
    </class>
  </file>
  <package name="Aura">
    <package name="Marshal"/>
  </package>
  <package name="Default"/>
  <namespace name="Aura">
    <namespace name="Marshal">
      <namespace name="Collection"/>
      <namespace name="Record"/>
      <namespace name="Relation"/>
      <namespace name="Type"/>
    </namespace>
  </namespace>
  <marker>todo</marker>
  <marker>fixme</marker>
</project>
